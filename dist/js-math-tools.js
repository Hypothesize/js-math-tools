(()=>{var ut=(t=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(t,{get:(e,n)=>(typeof require!="undefined"?require:e)[n]}):t)(function(t){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var a=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var B=a((qd,sn)=>{var rn=class extends Error{constructor(e){typeof window<"u"?super(e):super(`

\x1B[31m`+e+`
\x1B[0m`)}};sn.exports=rn});var f=a((yd,on)=>{var la=B();on.exports=function(t,e){if(!t)throw new la(e)}});var p=a((bd,un)=>{function ha(t){return t===null||typeof t>"u"}un.exports=ha});var d=a((Nd,an)=>{function fa(t){return t instanceof Array}an.exports=fa});var T=a((xd,fn)=>{var cn=f(),ma=p(),ln=d();function hn(t){cn(!ma(t),"You must pass one array into the `flatten` function!"),cn(ln(t),"The `flatten` function only works on arrays!");let e=[];return t.forEach(function(n){ln(n)?e=e.concat(hn(n)):e.push(n)}),e}fn.exports=hn});var F=a((vd,pn)=>{var wd=d();function mn(t,e){let n=typeof t;if(n!==typeof e)return!1;if(n==="undefined")return!0;if(n==="boolean"||n==="number"||n==="bigint"||n==="string"||n==="function")return t===e;if(n==="object"){if(t===null||e===null)return t===null&&e===null;{let s=Object.keys(t),o=Object.keys(e);if(s.length!==o.length)return!1;for(let u=0;u<s.length;u++){let i=s[u];if(!e.hasOwnProperty(i)||!mn(t[i],e[i]))return!1}return!0}}}pn.exports=mn});var z=a((Td,gn)=>{var dn=f(),pa=p(),da=d(),ga=T();function qa(t){dn(!pa(t),"You must pass an array into the `set` function!"),dn(da(t),"You must pass an array into the `set` function!");let e=[],n={};return ga(t).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);n[s]||e.push(r),n[s]=!0}),e}gn.exports=qa});var Ae=a((Sd,xn)=>{var qn=f(),yn=p(),bn=d(),Nn=T(),ya=F(),ba=z();function Na(t,e){qn(!yn(t),"You must pass an array and some items to count into the `count` function!"),qn(bn(t),"You must pass an array and some items to count into the `count` function!");let n=Nn(t);return e=yn(e)?ba(t):e,bn(e)?Nn(e).map(function(r){let s=n.filter(o=>ya(r,o)).length;return{item:r,count:s}}):n.filter(r=>r===e).length}xn.exports=Na});var j=a((Ad,wn)=>{var Od=f(),xa=p(),wa=d();function at(t){if(typeof t=="object"){if(xa(t))return t;if(wa(t))return t.map(at);{let e={};return Object.keys(t).forEach(function(n){e[n]=at(t[n])}),e}}else return t}wn.exports=at});var m=a((Ed,vn)=>{function va(t){return typeof t=="number"&&!isNaN(t)}vn.exports=va});var J=a((Id,Tn)=>{var Ta=T(),Sa=m();function Oa(t){try{let e=Ta(t),n=-1/0;for(let r=0;r<e.length;r++){if(!Sa(e[r]))return NaN;e[r]>n&&(n=e[r])}return n===-1/0?NaN:n}catch{return NaN}}Tn.exports=Oa});var N=a((Md,An)=>{var Ee=f(),Aa=p(),Sn=d(),Ea=J();function On(t){Ee(!Aa(t),"You must pass an array into the `shape` function!"),Ee(Sn(t),"You must pass an array into the `shape` function!");let e=[t.length],n=t.map(r=>Sn(r));if(n.indexOf(!0)>-1){Ee(n.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=t.map(o=>o.length),s=Ea(r);r.forEach(function(o){Ee(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(On(t[0]))}return e}An.exports=On});var P=a((Ud,En)=>{function Ia(t){return typeof t=="function"}En.exports=Ia});var V=a((jd,Mn)=>{var ct=f(),In=p(),Ma=d(),Ua=P();function ja(t,e){return t<e?-1:t>e?1:0}function Va(t,e){In(e)&&(e=ja),ct(!In(t),"You must pass an array into the `sort` function!"),ct(Ma(t),"You must pass an array into the `sort` function!"),ct(Ua(e),"The second parameter of the `sort` function must be a comparison function!");let n=t.slice();return n.sort(e),n}Mn.exports=Va});var Cn=a((Vd,Yn)=>{var Ie=f(),Un=j(),Ya=d(),jn=F(),Vn=B(),Ca=N(),Me=V();function lt(t,e,n,r){if(r instanceof e){Ie(jn(Me(n.columns),Me(r.index)),"The index of the incoming Series must match the columns of the target DataFrame!");let s=Un(n.values);s.push(n.columns.map(i=>r.get(i)));let o=new t(s);o.columns=n.columns;let u=!0;return o.resetIndex(u)}else if(r instanceof t){Ie(jn(Me(n.columns),Me(r.columns)),"The columns of the incoming DataFrame must match the columns of the target DataFrame!");let s=Un(n.values);r.values.forEach(i=>{s.push(n.columns.map(c=>{let h=r.columns.indexOf(c);return i[h]}))});let o=new t(s);o.columns=n.columns;let u=!0;return o.resetIndex(u)}else if(Ya(r)){let s=Ca(r);if(s.length===1){Ie(r.length===n.columns.length,"When passing a 1-dimensional array into the `append` method, the array must have the same length as the number of columns in the target DataFrame!");let o=new e(r);return o.index=n.columns,lt(t,e,n,o)}else if(s.length===2){Ie(s[1]===n.columns.length,"When passing a 2-dimensional array into the `append` method, each row of the array must have the same length as the number of columns in the target DataFrame!");let o=new t(r);return o.columns=n.columns,lt(t,e,n,o)}else throw new Vn("When passing an array into the `append` method, the array must be 1- or 2-dimensional! If 1-dimensional, it must be as long as the number of columns in the target DataFrame. If 2-dimensional, each row must be as long as the number of columns in the target DataFrame.")}else throw new Vn("Only Series, DataFrames, and 1- or 2-dimensional arrays can be passed into the `append` method!")}Yn.exports=lt});var _n=a((Yd,Pn)=>{var kn=f(),ka=P(),Bn=d(),zn=p();function Ba(t,e,n,r,s){if(s=s||0,kn(ka(r),"The first parameter to the `apply` method must be a function."),kn(s===0||s===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),s===0){let o={},u;if(n.columns.forEach((i,c)=>{let h=new e(n.values.map(q=>q[c]));h.name=i,h.index=n.index;let l=r(h,c,n);l instanceof e?o[i]=l.values:o[i]=l,zn(u)&&(u=l instanceof e||Bn(l))}),u){let i=new t(o);return i.index=n.index,i}else{let i=new e(n.columns.map(c=>o[c]));return i.index=n.columns,i}}else if(s===1){let o,u=n.values.map((i,c)=>{let h=new e(i);h.name=n.index[c],h.index=n.columns;let l=r(h,c,n);return zn(o)&&(o=l instanceof e||Bn(l)),l instanceof e?l.values:l});if(o){let i=new t(u);return i.index=n.index,i.columns=n.columns,i}else{let i=new e(u);return i.index=n.index,i}}}Pn.exports=Ba});var Ue=a((Cd,$n)=>{var za=d(),Pa=p();function _a(t){return typeof t=="object"&&!Pa(t)&&!za(t)}$n.exports=_a});var S=a((kd,Wn)=>{function $a(t){return typeof t=="string"}Wn.exports=$a});var Rn=a((Bd,Gn)=>{var G=f(),Fn=d(),Wa=Ue(),Fa=S(),Ja=p(),Jn=N(),Ga=j(),ht=B(),Ra=V();function La(t,e,n,r,s){let o=g=>g instanceof e,u=(()=>{let g={};if(Ja(s))if(o(r)){let y=n.index.map(b=>r.get(b));G(y.length===n.index.length,"Each column of values to be assigned must have the same length as the number of rows in the target DataFrame!"),g[r.name]=y}else if(Wa(r))Object.keys(r).forEach(y=>{let b=r[y];if(o(b)){let U=n.index.map(ee=>b.get(ee));G(U.length===n.index.length,"Each column of values to be assigned must have the same length as the number of rows in the target DataFrame!"),g[y]=U}else if(Fn(b))G(Jn(b).length===1,"When using a single argument for the `assign` method, the argument must be either (1) a Series, or (2) an object consisting of key-value pairs where each key is a string representing a column name and each value is a one-dimensional array or Series!"),G(b.length===n.index.length,"Each column of values to be assigned must have the same length as the number of rows in the target DataFrame!"),g[y]=b;else throw new ht("When using a single argument for the `assign` method, the argument must be either (1) a Series, or (2) an object consisting of key-value pairs where each key is a string representing a column name and each value is a one-dimensional array or Series!")});else throw new ht("When using a single argument for the `assign` method, the argument must be either (1) a Series, or (2) an object consisting of key-value pairs where each key is a string representing a column name and each value is a one-dimensional array or Series!");else if(G(Fa(r),"When using two arguments for the `assign` method, the first argument must be a string representing a column name, and the second argument must be a one-dimensional array or Series!"),o(s)){let y=n.index.map(b=>s.get(b));G(y.length===n.index.length,"The one-dimensional array or Series to be assigned must have the same length as the number of rows in the target DataFrame!"),g[r]=y}else if(Fn(s))G(Jn(s).length===1,"When using two arguments for the `assign` method, the first argument must be a string representing a column name, and the second argument must be a one-dimensional array or Series!"),G(s.length===n.index.length,"The one-dimensional array or Series to be assigned must have the same length as the number of rows in the target DataFrame!"),g[r]=s;else throw new ht("When using two arguments for the `assign` method, the first argument must be a string representing a column name, and the second argument must be a one-dimensional array or Series!");return g})(),i=n.columns,c=n.index,h=Ga(n.values),l=Ra(Object.keys(u));h.forEach((g,y)=>{l.forEach(b=>{g.push(u[b][y])})});let q=new t(h);return q.columns=i.concat(l),q.index=c,q}Gn.exports=La});var Kn=a((zd,Ln)=>{var Ka=j();function Qa(t,e){if(e.isEmpty)return new t;let n=new t(Ka(e.values));return n.columns=e.columns.slice(),n.index=e.index.slice(),n}Ln.exports=Qa});var tr=a((Pd,er)=>{var je=f(),Qn=d(),Xn=m(),Zn=S(),Hn=p(),Dn=N();function Xa(t,e,n,r,s){Hn(r)&&(r=[]),Hn(s)&&(s=[]),(Zn(r)||Xn(r))&&(r=[r]),(Zn(s)||Xn(s))&&(s=[s]),je(Qn(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),je(Qn(s),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),je(Dn(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),je(Dn(s).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let o,u;n.index.forEach((c,h)=>{r.indexOf(c)<0&&r.indexOf(h)<0&&(o||(o=[]),o.push(c))}),n.columns.forEach((c,h)=>{s.indexOf(c)<0&&s.indexOf(h)<0&&(u||(u=[]),u.push(c))});let i=n.get(o,u);if(i instanceof e){let c=new t;c=c.assign(i),n.index.indexOf(i.name)>-1&&(c=c.transpose()),i=c}return i}er.exports=Xa});var le=a((_d,nr)=>{var Za=m();function Ha(t){return Za(t)&&parseInt(t)===t}function Da(t){return Ha(t)&&t>=0}nr.exports=Da});var sr=a(($d,rr)=>{var ft=f(),ec=S(),Ve=p(),tc=le(),nc=N();function rc(t,e,n,r,s,o){r=r||0,ft(r===0||r===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),o=o||0,ft(tc(o),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),s=o>0?"none":s||"any",ft(s==="any"||s==="all"||s==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function u(h){if(o>0){let l=0;for(let q=0;q<h.length;q++){let g=h[q];if(Ve(g)&&l++,l>=o)return[]}}else if(s==="any")for(let l=0;l<h.length;l++){let q=h[l];if(Ve(q))return[]}else if(s==="all"){for(let l=0;l<h.length;l++){let q=h[l];if(!Ve(q))return h}return[]}return h}let i=n.copy(),c=Math.random().toString();if(r===0){i=i.assign(c,i.index);let h=i.values.map(u).filter(q=>q.length>0);if(nc(h).length<2)return new t;i.values=h;let l=i.get(null,c);if(Ve(l))return new t;ec(l)&&(l=[l]),l instanceof e&&(l=l.values),i.index=l,i=i.drop(null,c)}else if(r===1){let h={};if(i.columns.forEach((q,g)=>{let y=i.values.map(U=>U[g]),b=u(y);b.length>0&&(h[q]=b)}),Object.keys(h).length===0)return new t;let l=new t(h);return l.index=i.index,l}return i}rr.exports=rc});var Ye=a((Wd,ir)=>{var or=f(),sc=d(),oc=p(),ic=m(),uc=N();function ac(t){return or(sc(t),"The value passed into the `dropNaN` function must be a one-dimensional array!"),or(uc(t).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),t.filter(e=>!oc(e)&&ic(e))}ir.exports=ac});var ar=a((Fd,ur)=>{var mt=f(),cc=Ye(),lc=le();function hc(t,e,n,r,s){n=n||0,mt(n===0||n===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,mt(lc(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",mt(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(c){let h=cc(c);return s>0?c.length-h.length<s:r==="any"?h.length===c.length:r==="all"?h.length>0:!0}let u=e.copy(),i=Math.random().toString();if(n===0){let c=u.index.filter(h=>{let l=u.get(h,null).values;return o(l)});return c.length>0?u.get(c,null):new t}else if(n===1){let c=u.columns.filter(h=>{let l=u.get(null,h).values;return o(l)});return c.length>0?u.get(null,c):new t}return u}ur.exports=hc});var fr=a((Jd,hr)=>{var cr=f(),he=T(),fc=P(),mc=p();function lr(t){let e={};return he(t).forEach((n,r)=>{e[n]=r}),e}function re(t){return Object.keys(t).sort((e,n)=>t[e]-t[n])}function pc(t,e,n,r,s){cr(fc(r),"The `filter` method takes a single parameter: a function that is used to filter the values."),mc(s)&&(s=0),cr(s===0||s===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let o=n.copy();if(o.isEmpty)return o;let u=lr(o.index),i=lr(o.columns);if(s===0){let c=o.values.filter((h,l)=>{let q=new e(h);q.name=n.index[l],q.index=n.columns;let g=r(q,l,n);return g||delete u[o.index[l]],g});if(he(c).length===0)return new t;if(c.length===1){let h=new e(he(c));return h.name=re(u)[0],h.index=re(i),h}o.values=c,o.index=re(u)}else if(s===1){o=o.transpose();let c=o.values.filter((h,l)=>{let q=new e(h);q.name=n.columns[l],q.index=n.index;let g=r(q,l,n);return g||delete i[o.index[l]],g});if(he(c).length===0)return new t;if(c.length===1){let h=new e(he(c));return h.name=re(i)[0],h.index=re(u),h}o.values=c,o.index=re(i),o=o.transpose()}return o}hr.exports=pc});var se=a((Gd,mr)=>{function dc(t){return typeof t=="boolean"}mr.exports=dc});var fe=a((Rd,dr)=>{var pr=f(),gc=p(),qc=d();function yc(t){pr(!gc(t),"You must pass an array into the `reverse` function!"),pr(qc(t),"You must pass an array into the `reverse` function!");let e=[];for(let n=t.length-1;n>=0;n--)e.push(t[n]);return e}dr.exports=yc});var E=a((Ld,gr)=>{var pt=f(),dt=p(),gt=m(),bc=fe();function Nc(t,e,n=1){pt(!dt(t)&&!dt(e)&&!dt(n),"You must pass two numbers and optionally a step value to the `range` function!"),pt(gt(t)&&gt(e)&&gt(n),"You must pass two numbers and optionally a step value to the `range` function!"),pt(n>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(t>e){r=!0;let o=t;t=e+n,e=o+n}let s=[];for(let o=t;o<e;o+=n)s.push(o);return r&&(s=bc(s)),s}gr.exports=Nc});var qt=a((Kd,br)=>{var R=f(),L=d(),qr=se(),Ce=S(),ke=p(),Be=B(),xc=J(),yr=E();function wc(t,e,n,r,s,o){return n=(()=>{if(ke(n))return!1;if(qr(n))return n;throw new Be("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(ke(r))return!1;if(qr(r))return r;throw new Be("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let i="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(ke(s))return",";if(Ce(s))return R(s.length===1,i),s;if(L(s))return R(s.length===2,i),R(s[0].length===1,i),R(s[1].length===1,i),s;throw new Be(i)})(),o=(()=>{let i="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(ke(o))return'"';if(Ce(o))return R(o.length===1,i),o;if(L(o))return R(o.length===2,i),R(o[0].length===1,i),R(o[1].length===1,i),o;throw new Be(i)})(),(()=>{let c=e.split(`
`).filter(y=>y.length>0).map(y=>{let b=[],U="",ee=!1;for(let W=0;W<y.length;W++){let A=y[W];if(A.match(/\\/g))W++;else if(L(o)&&A===o[0])ee=!0;else if(L(o)&&A===o[1])ee=!1;else if(Ce(o)&&A===o)ee=!ee;else if(L(s)&&A===s[0]||L(s)&&A===s[1]||Ce(s)&&A===s)if(ee)U+=A;else{let ot=U;try{let it=JSON.parse(ot);L(it)?b.push(ot.trim()):b.push(it)}catch{b.push(ot.trim())}U=""}else U+=A}if(U.length>0){let W=U;try{let A=JSON.parse(W);L(A)?b.push(W.trim()):b.push(A)}catch{b.push(W.trim())}}return b}),h=(()=>{let y=n?c.shift():yr(0,c[0].length).map(b=>"col"+b);return r&&y.shift(),y})(),l=(()=>r?c.map(b=>b.shift()):yr(0,c.length).map(b=>"row"+b))(),q=xc(c.map(y=>y.length)),g=new t(c.map(y=>(y.length=q,y)));return n&&(g.columns=h),r&&(g.index=l),g})()}br.exports=wc});var xr=a((Qd,Nr)=>{var vc=f(),Tc=qt(),Sc=S(),Oc=p(),Ac=B();async function Ec(t,e,n,r,s,o,u){n=(()=>Oc(n)?"utf8":(vc(Sc(n),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),n))();let i=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ut("fs").readFileSync(e,n)}catch{}throw new Ac(`The path "${e}" could not be loaded!`)})();return Tc(t,i,r,s,o,u)}Nr.exports=Ec});var Tr=a((Xd,vr)=>{var I=f(),ze=m(),Pe=S(),wr=p(),Ic=z();function Mc(t,e,n){(Pe(e)||ze(e))&&(e=[e]),(Pe(n)||ze(n))&&(n=[n]);let r=Ic((e||[]).concat(n||[]).map(s=>typeof s));return I(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&I(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(I(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),I(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),wr(e)||(e=e.map(s=>{if(Pe(s))return I(t.index.indexOf(s)>-1,`Row "${s}" does not exist!`),s;if(ze(s))return I(s>=0,`Index ${s} is out of bounds!`),I(parseInt(s)===s,"Row numbers must be integers!"),I(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),wr(n)||(n=n.map(s=>{if(Pe(s))return I(t.columns.indexOf(s)>-1,`Column "${s}" does not exist!`),s;if(ze(s))return I(s>=0,`Column ${s} is out of bounds!`),I(parseInt(s)===s,"Column numbers must be integers!"),I(s<t.columns.length,`Column ${s} is out of bounds!`),t.columns[s]})),t.getSubsetByNames(e,n)}vr.exports=Mc});var Er=a((Zd,Ar)=>{var Sr=f(),Or=S(),Uc=p(),jc=z(),Vc=V();function Yc(t){let e=t.toLowerCase(),n="";for(let s=0;s<e.length;s++){let o=e[s];o.match(/[a-z0-9]/g)?n+=o:n+=" "}let r=n.split(" ").filter(s=>s.length>0);return r[0]+r.slice(1).map(s=>s[0].toUpperCase()+s.substring(1)).join("")}function Cc(t,e,n){Uc(n)?n=e.columns:Or(n)&&(n=[n]);let r={};n.forEach(o=>{Sr(Or(o),"You must pass either a string or a one-dimensional array of strings into the `getDummies` (AKA `oneHotEncode`) method!");let u=e.columns.indexOf(o);Sr(u>-1,`The given DataFrame does not have a column called "${o}"!`);let i=e.values.map(h=>h[u]),c=Vc(jc(i));i.forEach(h=>{c.forEach(l=>{let q=o+"_"+Yc(l.toString());r[q]||(r[q]=[]),h===l?r[q].push(1):r[q].push(0)})})});let s=new t(r);return s.index=e.index,s}Ar.exports=Cc});var kr=a((Hd,Cr)=>{var K=f(),Ir=d(),Mr=m(),Ur=p(),jr=le(),Vr=E(),Yr=N();function kc(t,e,n){let r=t.shape;Ur(e)&&(e=Vr(0,r[0])),Ur(n)&&(n=Vr(0,r[1])),Mr(e)&&(e=[e]),Mr(n)&&(n=[n]),K(Ir(e)&&Ir(n),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(Yr(e).length===1&&Yr(n).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(e.length>0,"The `rowIndices` array must contain at least one index."),K(n.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{K(jr(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(u<t.index.length,`The row index ${u} is out of bounds.`)}),n.forEach(u=>{K(jr(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(u<t.columns.length,`The column index ${u} is out of bounds.`)});let s=e.map(u=>t.index[u]),o=n.map(u=>t.columns[u]);return t.getSubsetByNames(s,o)}Cr.exports=kc});var $r=a((Dd,_r)=>{var Q=f(),yt=T(),Br=d(),_e=S(),zr=p(),Pr=N();function Bc(t,e,n,r,s){zr(r)&&(r=n.index),zr(s)&&(s=n.columns),_e(r)&&(r=[r]),_e(s)&&(s=[s]),Q(Br(r)&&Br(s),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),Q(Pr(r).length===1&&Pr(s).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),Q(r.length>0,"The `rows` array must contain at least one row name."),Q(s.length>0,"The `cols` array must contain at least one column name."),r.forEach(i=>{Q(_e(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),Q(n.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),s.forEach(i=>{Q(_e(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),Q(n.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let o=r.map(i=>s.map(c=>n.values[n.index.indexOf(i)][n.columns.indexOf(c)]));if(r.length===1&&s.length===1)return yt(o)[0];if(r.length===1){let i=new e(yt(o));return i.name=r[0],i.index=s,i}if(s.length===1){let i=new e(yt(o));return i.name=s[0],i.index=r,i}let u=new t(o);return u.columns=s,u.index=r,u}_r.exports=Bc});var me=a((eg,Wr)=>{var zc=f(),Pc=m();function _c(t,e){zc(Pc(t),"The `leftPad` function only works on numbers!");let n=t.toString();for(;n.length<e;)n="0"+n;return n}Wr.exports=_c});var Kr=a((tg,Lr)=>{var $e=f(),Fr=j(),$c=d(),Jr=F(),Gr=me(),Rr=B(),Wc=N(),We=V();function bt(t,e,n,r){if(r instanceof e){$e(Jr(We(r.index),We(n.index)),"The index of the incoming Series must match the index of the target DataFrame!");let s=Fr(n.values);n.index.forEach((u,i)=>{let c=r.get(u);s[i].push(c)});let o=new t(s);return o.columns=n.columns.concat([r.name]),o}else if(r instanceof t){$e(Jr(We(r.index),We(n.index)),"The index of the incoming DataFrame must match the index of the target DataFrame!");let s=Fr(n.values);n.index.forEach((u,i)=>{let c=r.values[r.index.indexOf(u)];s[i]=s[i].concat(c)});let o=new t(s);return o.columns=n.columns.concat(r.columns),o}else if($c(r)){let s=Wc(r);if(s.length===1){$e(r.length===n.values.length,"When passing a 1-dimensional array into the `join` method, the array must have the same length as the number of rows in the target DataFrame!");let o=new e(r);return o.index=n.index,o.name="col"+Gr(n.columns.length,n.columns.length.toString().length),bt(t,e,n,o)}else if(s.length===2){$e(r.length===n.values.length,"When passing a 2-dimensional array into the `join` method, each column of the array must have the same length as the number of rows in the target DataFrame!");let o=new t(r);return o.index=n.index,o.columns=o.columns.map((u,i)=>"col"+Gr(n.columns.length+i,n.columns.length.toString().length)),bt(t,e,n,o)}else throw new Rr("When passing an array into the `join` method, the array must be 1- or 2-dimensional! If 1-dimensional, it must be as long as the number of rows of the target DataFrame. If 2-dimensional, each column must be as long as the number of rows in the target DataFrame.")}else throw new Rr("Only Series, DataFrames, and 1- or 2-dimensional arrays can be passed into the `join` method!")}Lr.exports=bt});var Xr=a((ng,Qr)=>{var Fc=F(),Jc=S(),pe=E();function Gc(t,e,n){function r(g,y){return Jc(g)&&g.length>y?g.substring(0,y-3)+"...":g}if(Fc(n.shape,[0]))return console.table({}),n;let s=typeof window>"u"?20:10,o=parseInt(s/2),u=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(u/2),c=s>n.index.length?null:pe(0,o).concat(pe(n.index.length-o,n.index.length)),h=u>n.columns.length?null:pe(0,i).concat(pe(n.columns.length-i,n.columns.length)),l=n.get(c,h);l instanceof e&&(n.shape[0]===1?(l=new t([l.values]),l.index=n.index,l.columns=new e(n.columns).get(h).values):n.shape[1]===1&&(l=new t([l.values]).transpose(),l.index=new e(n.index).get(c).values,l.columns=n.columns)),s<=n.index.length&&(l._index.splice(o,0,"..."),l._values.splice(o,0,pe(0,l.columns.length).map(g=>"..."))),u<=n.columns.length&&(l._columns.splice(i,0,"..."),l._values=l._values.map(g=>(g.splice(i,0,"..."),g)));let q=28;return l instanceof e?(l.values=l.values.map(g=>r(g,q)),l.name=r(l.name,q),l.index=l.index.map(g=>r(g,q))):(l.values=l.values.map(g=>g.map(y=>r(y,q))),l.columns=l.columns.map(g=>r(g,q)),l.index=l.index.map(g=>r(g,q))),console.table(l.toObject()),n}Qr.exports=Gc});var Hr=a((rg,Zr)=>{var Rc=me(),Lc=E();function Kc(t,e){let n=e?t:t.copy();return n.index=Lc(0,t.shape[0]).map(r=>"row"+Rc(r,(n.index.length-1).toString().length)),n}Zr.exports=Kc});var x=a((sg,Dr)=>{var Nt=f(),Qc=p(),xt=d(),Xc=J(),Zc=P();function Hc(t){return Nt(!Qc(t),"You must pass a function into the `vectorize` function!"),Nt(Zc(t),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>xt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(u=>xt(arguments[u])).map(u=>arguments[u].length),o=Xc(s);s.forEach(u=>{Nt(u===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let u=0;u<o;u++){let i=Object.keys(arguments).map(c=>xt(arguments[c])?arguments[c][u]:arguments[c]);r.push(e(...i))}return r}else return t(...arguments)}}Dr.exports=Hc});var Fe=a((og,es)=>{var Dc=m(),el=x();function tl(t){try{return Dc(t)?Math.floor(t):NaN}catch{return NaN}}es.exports=el(tl)});var _=a((ig,ns)=>{var de=f(),nl=p(),rl=d(),sl=m(),ol=T(),ge="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function ts(t,e){if(e||(de(!nl(t),ge),rl(t)||(t=[t]),t=ol(t),de(t.length>0,ge),t.forEach(n=>{de(sl(n),ge),de(parseInt(n)===n,ge),de(n>=0,ge)})),t.length===1){let n=[];for(let r=0;r<t[0];r++)n.push(void 0);return n}else{let n=[];for(let r=0;r<t[0];r++)n.push(ts(t.slice(1),!0));return n}}ns.exports=ts});var te=a((ug,rs)=>{var il=x();function ul(t,e){try{return e(t)}catch{return NaN}}rs.exports=il(ul)});var oe=a((ag,as)=>{var qe=f(),ss=d(),os=m(),al=N(),is=T(),cl=t=>t.reduce((e,n)=>e*n);function us(t,e){if(qe(ss(t),"The first argument passed into the `reshape` function must be an array!"),os(e)&&(e=[e]),qe(ss(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),qe(al(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{qe(os(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return is(t);let n=is(t);qe(cl(e)===n.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(n.length/e[0]);for(let o=0;o<e[0];o++){let u=n.slice(o*s,(o+1)*s);r.push(us(u,e.slice(1)))}return r}as.exports=us});var ie=a((hg,gs)=>{var cg=_(),lg=te(),hs=p(),ll=f(),fs=m(),ms=j(),hl=oe(),ps=Math.pow(2,64),w=[];ds(parseInt(Math.random()*ps));function fl(t,e){t=O(t);function n(){t+=O("0x9e3779b97f4a7c15");let s=ms(t);return s=(s^s>>30n)*O("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*O("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(n());return r}function O(t){return BigInt.asUintN(64,BigInt(t))}function cs(t,e){return t=O(t),e=BigInt(e),O(O(t<<e)|O(t>>O(64n-e)))}function ds(t){if(hs(t))return ms(w);{ll(fs(t),"If passing a value into the `seed` function, then that value must be an integer!");let e=fl(parseInt(t),4);w[0]=e[0],w[1]=e[1],w[2]=e[2],w[3]=e[3]}}function ls(){let t=O(cs(w[0]+w[3],23)+w[0]),e=O(w[1]<<17n);return w[2]=O(w[2]^w[0]),w[3]=O(w[3]^w[1]),w[1]=O(w[1]^w[2]),w[0]=O(w[0]^w[3]),w[2]=O(w[2]^e),w[3]=cs(w[3],45),parseInt(t)/ps}function ml(t){if(hs(t))return ls();fs(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(ls());return hl(e,t)}gs.exports={random:ml,seed:ds}});var wt=a((mg,ys)=>{var qs=f(),pl=p(),dl=d(),fg=Fe(),{random:gl}=ie();function ql(t){qs(!pl(t),"You must pass an array into the `shuffle` function!"),qs(dl(t),"You must pass an array into the `shuffle` function!");let e=[],n=t.slice();for(let r=0;r<t.length;r++){let s=parseInt(gl()*n.length);e.push(n.splice(s,1)[0])}return e}ys.exports=ql});var xs=a((pg,Ns)=>{var yl=f(),bl=p(),bs=wt();function Nl(t,e){return bl(e)&&(e=0),yl(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),t.get(e===0?bs(t.index):null,e===1?bs(t.columns):null)}Ns.exports=Nl});var Os=a((dg,Ss)=>{var{random:xl}=ie(),M=f(),wl=T(),ws=d(),vt=se(),Tt=m(),ue=S(),vs=p(),vl=E(),Ts=N(),Tl=V();function Sl(t,e,n){let r=t.copy(),s=xl().toString();return r=r.assign(s,r.index),vs(e)&&(e=[s],n=[!0]),(Tt(e)||ue(e))&&(e=[e],(vt(n)||ue(n))&&(n=[n])),M(ws(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),M(Ts(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),vs(n)&&(n=vl(0,e.length).map(o=>!0)),M(ws(n),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(Ts(n).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(e.length===n.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(M(ue(o)||Tt(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ue(o)){let u=r.columns.indexOf(o);return M(u>-1,`The column "${o}" does not exist!`),u}if(Tt(o))return M(parseInt(o)===o,"Column indices must be whole numbers!"),M(o>=0,`The column index ${o} is out of bounds!`),M(o<r.columns.length,`The index ${o} is out of bounds!`),o}),n=n.map(o=>{if(M(ue(o)||vt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ue(o)){let u=o.trim().toLowerCase();return M(u==="ascending"||u==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),u==="ascending"}if(vt(o))return o}),r.values=Tl(r.values,(o,u)=>{let i=0;for(;o[e[i]]===u[e[i]]&&i<e.length;)i++;let c=n[i];if(o[e[i]]===u[e[i]])return 0;if(o[e[i]]<u[e[i]])return c?-1:1;if(o[e[i]]>u[e[i]])return c?1:-1}),r.index=wl(r.get(null,s).values),r=r.dropColumns(s),r}Ss.exports=Sl});var St=a((gg,Es)=>{var Ol=se(),Al=Ue(),El=S(),As=p(),Il=B();function Ml(t,e){e=(()=>{if(As(e))return!0;if(Ol(e))return e;throw new Il("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let n=[""].concat(t.index);return[t.columns].concat(t.values).map((s,o)=>(e?[n[o]]:[]).concat(s).map(i=>El(i)?JSON.stringify(i):Al(i)?JSON.stringify(JSON.stringify(i)):As(i)?i===void 0?"undefined":"null":i.toString()).join(",")).join(`
`)}Es.exports=Ml});var Ms=a((qg,Is)=>{var Ul=St();function jl(t,e,n){let r=Ul(t,n);try{let s=e;if(e.includes("/")){let u=e.split("/");s=u[u.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ut("fs"),o=ut("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return t}Is.exports=jl});var js=a((yg,Us)=>{function Vl(t){let e={};return t.values.forEach((n,r)=>{let s={};n.forEach((o,u)=>{s[t.columns[u]]=o}),e[t.index[r]]=s}),e}Us.exports=Vl});var X=a((bg,Ys)=>{var Ot=f(),Yl=p(),Cl=d(),kl=N(),Vs=fe(),Bl=_();function zl(t){Ot(!Yl(t),"You must pass an array into the `transpose` function!"),Ot(Cl(t),"You must pass an array into the `transpose` function!");let e=kl(t);if(Ot(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return Vs(t);if(e.length===2){let n=Bl(Vs(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)n[s][r]=t[r][s];return n}}Ys.exports=zl});var ks=a((Ng,Cs)=>{var Pl=f(),_l=P();function $l(t,e){Pl(_l(e),"The parameter to the `apply` method must be a function.");let n=t.copy();return n.values=n.values.map((r,s)=>e(r,n.index[s])),n}Cs.exports=$l});var zs=a((xg,Bs)=>{var Wl=p();function Fl(t){let e=t.copy(),n=[];return e.values=e.values.filter((r,s)=>Wl(r)?!1:(n.push(e.index[s]),!0)),e.index=n,e}Bs.exports=Fl});var _s=a((wg,Ps)=>{var Jl=j();function Gl(t,e,n){let r=e.copy(),s=Jl(r.index),o=[],u=r.values.filter((i,c)=>{let h=n(i,c,r.values);return h||o.push(r.index[c]),h});return o.forEach(i=>{s.splice(s.indexOf(i),1)}),u.length===0?(r=new t,r.name=e.name,r):(r.values=u,r.index=s,r)}Ps.exports=Gl});var Ws=a((vg,$s)=>{var Z=f(),Rl=m(),Ll=S(),Kl=p(),Ql=z();function Xl(t,e){(Ll(e)||Rl(e))&&(e=[e]);let n=Ql((e||[]).map(r=>typeof r));return Z(n.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),n.length===1&&Z(n[0]==="string"||n[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),n.length===2&&(Z(n.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),Z(n.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),Kl(e)||(e=e.map(r=>{if(typeof r=="string")return Z(t.index.indexOf(r)>-1,`Index "${r}" does not exist!`),r;if(typeof r=="number")return Z(r>=0,`Index ${r} is out of bounds!`),Z(parseInt(r)===r,"Indices must be integers!"),Z(r<t.index.length,`Index ${r} is out of bounds!`),t.index[r]})),t.getSubsetByNames(e)}$s.exports=Xl});var Js=a((Tg,Fs)=>{var ye=f(),Zl=d(),Hl=p(),Dl=le(),eh=E(),th=N();function nh(t,e){let n=t.shape;Hl(e)&&(e=eh(0,n[0])),ye(Zl(e),"The `indices` array must be 1-dimensional array of whole numbers."),ye(th(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),ye(e.length>0,"The `indices` array must contain at least one index."),e.forEach(s=>{ye(Dl(s),"The `indices` array must be a 1-dimensional array of whole numbers."),ye(s<t.index.length,`The row index ${s} is out of bounds.`)});let r=e.map(s=>t.index[s]);return t.getSubsetByNames(r)}Fs.exports=nh});var Rs=a((Sg,Gs)=>{var be=f(),rh=d(),sh=S(),oh=p(),ih=N();function uh(t,e,n){oh(n)&&(n=e.index),be(rh(n),"The `indices` array must be a 1-dimensional array of strings."),be(ih(n).length===1,"The `indices` array must be a 1-dimensional array of strings."),be(n.length>0,"The `indices` array must contain at least one index name."),n.forEach(o=>{be(sh(o),"The `indices` array must contain only strings."),be(e.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=n.map(o=>e.values[e.index.indexOf(o)]);if(r.length===1)return r[0];let s=new t(r);return s.index=n,s.name=e.name,s}Gs.exports=uh});var Qs=a((Og,Ks)=>{var ah=j(),Ls=E();function ch(t){let e=t.copy(),n=typeof window>"u"?20:10;if(e.index.length>n){e=e.get(Ls(0,n/2).concat(Ls(e.index.length-n/2,e.index.length)));let s=ah(e.index);s.splice(parseInt(s.length/2),0,"..."),e.values.push("..."),e.index.push("..."),e=e.get(s)}let r={};return e.values.forEach((s,o)=>{let u={};u[e.name]=s,r[e.index[o]]=u}),console.table(r),t}Ks.exports=ch});var no=a((Ag,to)=>{var Xs=f(),Zs=se(),Hs=S(),Ds=p(),lh=V(),eo=X();function hh(t,e,n){Xs(Zs(n)||Hs(n)||Ds(n),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let r=!0;Ds(n)&&(r=!0),Hs(n)&&(n=n.trim().toLowerCase(),Xs(n==="ascending"||n==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),r=n==="ascending"),Zs(n)&&(r=n);let s=eo([e.values,e.index]);s=eo(lh(s,(u,i)=>{if(u[0]===i[0])return 0;if(u[0]<i[0])return r?-1:1;if(u[0]>i[0])return r?1:-1}));let o=new t(s[0]);return o.index=s[1],o.name=e.name,o}to.exports=hh});var oo=a((Eg,so)=>{var fh=V(),ro=X();function mh(t,e){let n=ro([e.values,e.index]);n=ro(fh(n,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new t(n[0]);return r.index=n[1],r.name=e.name,r}so.exports=mh});var uo=a((Ig,io)=>{function ph(t){let e={};return e[t.name]={},t.index.forEach((n,r)=>{e[t.name][n]=t.values[r]}),e}io.exports=ph});var At=a((Mg,fo)=>{var ne=f(),dh=j(),ao=d(),gh=S(),qh=p(),co=me(),yh=_(),lo=E(),ho=fe(),bh=ks(),Nh=zs(),xh=_s(),wh=Ws(),vh=Js(),Th=Rs(),Sh=Qs(),Oh=no(),Ah=oo(),Eh=uo(),Je=N(),Ih=X();fo.exports=function(t){class e{constructor(r){let s=this;if(s.name="data",Object.defineProperty(s,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"values",{configurable:!0,enumerable:!0,get(){return s._values},set(o){ne(ao(o),"The new values must be a 1-dimensional array!");let u=Je(o);ne(u.length===1,"The new array of values must be 1-dimensional!"),u[0]<s._index.length?s._index=s._index.slice(0,u[0]):u[0]>s._index.length&&(s._index=s._index.concat(lo(s._index.length,u[0]).map(i=>"row"+co(i,(o.length-1).toString().length)))),s._values=o}}),Object.defineProperty(s,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"index",{configurable:!0,enumerable:!0,get(){return s._index},set(o){ne(ao(o),"The new index must be a 1-dimensional array of strings!"),ne(o.length===s.shape[0],"The new index must be the same length as the old index!"),ne(Je(o).length===1,"The new index must be a 1-dimensional array of strings!"),o.forEach(u=>{ne(gh(u),"All of the row names must be strings!")}),s._index=o}}),r){let o=Je(r);ne(o.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),s.values=r}}get shape(){return Je(this.values)}get isEmpty(){return this.values.filter(s=>!qh(s)).length===0}clear(){let r=this,s=r.copy();return s.values=yh(s.shape),s.index=r.index,s}get(r){return wh(this,r)}getSubsetByNames(r){return Th(e,this,r)}getSubsetByIndices(r){return vh(this,r)}loc(r){return this.getSubsetByNames(r)}iloc(r){return this.getSubsetByIndices(r)}reverse(){let r=this,s=new e(ho(r.values));return s.index=ho(r.index),s.name=r.name,s}resetIndex(){let r=this,s=r.copy();return s.index=lo(0,r.shape[0]).map(o=>"row"+co(o,(s.index.length-1).toString().length)),s}copy(){let r=this,s=new e(dh(r.values));return s.index=r.index.slice(),s.name=r.name,s}apply(r){return bh(this,r)}dropMissing(r,s){return Nh(this,r,s)}toObject(){return Eh(this)}print(){return Sh(this)}sort(r){return Oh(e,this,r)}sortByIndex(){return Ah(e,this)}filter(r){return xh(e,this,r)}toDataFrame(){let r=this,s=new t(Ih([r.values]));return s.columns=[r.name],s.index=r.index,s}getDummies(){return this.toDataFrame().getDummies()}oneHotEncode(){return this.getDummies()}}return e}});var Ut=a((Ug,qo)=>{var C=f(),mo=Ae(),Mh=Cn(),Uh=_n(),jh=Rn(),Vh=Kn(),Yh=tr(),Ch=sr(),kh=ar(),Bh=fr(),zh=xr(),Ph=qt(),_h=Tr(),po=Er(),$h=kr(),Wh=$r(),Fh=Kr(),Jh=Xr(),Gh=Hr(),Rh=xs(),Lh=Os(),Kh=Ms(),Qh=St(),Xh=js(),Ge=d(),Et=p(),It=me(),Zh=_(),Mt=E(),Hh=z(),ae=N(),go=X();function Re(t){let e="abcdefghijklmnopqrstuvwxyz1234567890",n="";for(let r=0;r<t;r++)n+=e[parseInt(Math.random()*e.length)];return n}var v=class{constructor(e){let n=this;if(Object.defineProperty(n,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(n,"values",{configurable:!0,enumerable:!0,get(){return n._values.length===0||!Et(n._values[0])&&n._values[0].length===0?[[]]:n._values},set(r){C(Ge(r),"The new values must be a 2-dimensional array!");let s=ae(r);C(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<n._index.length?n._index=n._index.slice(0,s[0]):s[0]>n._index.length&&(n._index=n._index.concat(Mt(n._index.length,s[0]).map(o=>"row"+It(o,(s[0]-1).toString().length)))),s[1]<n._columns.length?n._columns=n._columns.slice(0,s[1]):s[1]>n._columns.length&&(n._columns=n._columns.concat(Mt(n._columns.length,s[1]).map(o=>"col"+It(o,(s[1]-1).toString().length)))),n._values=r}}),Object.defineProperty(n,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(n,"columns",{configurable:!0,enumerable:!0,get(){return n._columns},set(r){C(Ge(r),"The new columns list must be a 1-dimensional array of strings!"),C(n.isEmpty||r.length===n.shape[1],"The new columns list must be the same length as the old columns list!"),C(ae(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Re(8):o.trim()));let s=(()=>{let o=mo(r),u={};return o.forEach(i=>{u[i.item]=i.count}),u})();r=r.map(o=>s[o]>1?o+"_"+Re(8):o),n._columns=r}}),Object.defineProperty(n,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(n,"index",{configurable:!0,enumerable:!0,get(){return n._index},set(r){C(Ge(r),"The new index must be a 1-dimensional array of strings!"),C(n.isEmpty||r.length===n.shape[0],"The new index must be the same length as the old index!"),C(ae(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Re(8):o.trim()));let s=(()=>{let o=mo(r),u={};return o.forEach(i=>{u[i.item]=i.count}),u})();r=r.map(o=>s[o]>1?o+"_"+Re(8):o),n._index=r}}),C(Et(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(Ge(e)){let r=ae(e);C(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),n.values=e}else{n._columns=Object.keys(e);let r=[];n._columns.forEach(o=>{let u=e[o];r.push(u)}),n._values=go(r);let s=ae(n.values);n._index=Mt(0,s[0]).map(o=>"row"+It(o,(s[0]-1).toString().length))}}get shape(){return ae(this.values)}get rows(){return this.index}set rows(e){let n=this;n.index=e}get isEmpty(){return Hh(this.values).filter(n=>!Et(n)).length===0}clear(){let e=this,n=new v(Zh(e.shape));return n.columns=e.columns.slice(),n.index=e.index.slice(),n}get(e,n){return _h(this,e,n)}getSubsetByNames(e,n){return Wh(v,k,this,e,n)}getSubsetByIndices(e,n){return $h(this,e,n)}loc(e,n){return this.getSubsetByNames(e,n)}iloc(e,n){return this.getSubsetByIndices(e,n)}getDummies(e){return po(v,this,e)}oneHotEncode(e){return po(v,this,e)}transpose(){let e=this,n=new v(go(e.values));return n.columns=e.index,n.index=e.columns,n}get T(){return this.transpose()}resetIndex(e){return Gh(this,e)}copy(){return Vh(v,this)}assign(e,n){return jh(v,k,this,e,n)}apply(e,n){return Uh(v,k,this,e,n)}map(e,n){return this.apply(e,n)}dropMissing(e,n,r){return Ch(v,k,this,e,n,r)}dropNaN(e,n,r){return kh(v,this,e,n,r)}drop(e,n){return Yh(v,k,this,e,n)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return Xh(this)}toCSVString(e){return Qh(this,e)}toCSV(e,n){return Kh(this,e,n)}print(){return Jh(v,k,this)}sort(e,n){return Lh(this,e,n)}sortByIndex(){return this.sort()}filter(e,n){return Bh(v,k,this,e,n)}shuffle(e){return Rh(this,e)}append(e){return Mh(v,k,this,e)}join(e){return Fh(v,k,this,e)}};v.fromCSV=function(){return zh(v,...arguments)};v.fromCSVString=function(){return Ph(v,...arguments)};var k=At()(v);qo.exports={DataFrame:v,Series:k}});var jt=a((jg,yo)=>{var Dh=m(),ef=x();function tf(t){try{return Dh(t)?Math.abs(t):NaN}catch{return NaN}}yo.exports=ef(tf)});var Ne=a((Vg,bo)=>{var nf=m(),rf=x();function sf(){try{let t=0,e=Object.values(arguments);for(let n=0;n<e.length;n++){if(!nf(e[n]))return NaN;t+=e[n]}return t}catch{return NaN}}bo.exports=rf(sf)});var Yt=a((Yg,To)=>{var Y=f(),No=p(),xo=d(),of=m(),wo=N(),Vt=X();function vo(t,e,n=0){Y(!No(t),"You must pass two arrays into the `append` function!"),Y(!No(e),"You must pass two arrays into the `append` function!"),Y(xo(t),"You must pass two arrays into the `append` function!"),Y(xo(e),"You must pass two arrays into the `append` function!"),Y(of(n),"The `axis` argument to the `append` function must be 0 or 1!"),Y(n>=0&&n<2,"The `axis` argument to the `append` function must be 0 or 1!"),Y(parseInt(n)===n,"The `axis` argument to the `append` function must be 0 or 1!");let r=wo(t),s=wo(e);Y(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),Y(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==n&&Y(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(Y(n<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return t.concat(e);if(r.length===2){if(n===0){let o=[];for(let u=0;u<r[0];u++)o.push(t[u]);for(let u=0;u<s[0];u++)o.push(e[u]);return o}else if(n===1)return Vt(vo(Vt(t),Vt(e),0))}}To.exports=vo});var Oo=a((Cg,So)=>{var uf=m(),af=x();function cf(t){try{return uf(t)?Math.acos(t):NaN}catch{return NaN}}So.exports=af(cf)});var Eo=a((kg,Ao)=>{var lf=m(),hf=x();function ff(t){try{return lf(t)?Math.asin(t):NaN}catch{return NaN}}Ao.exports=hf(ff)});var Mo=a((Bg,Io)=>{var mf=m(),pf=x();function df(t){try{return mf(t)?Math.atan(t):NaN}catch{return NaN}}Io.exports=pf(df)});var xe=a((zg,Co)=>{var Uo=f(),gf=p(),jo=d(),Ct=N(),Vo=F();function Yo(t,e,n){if(Uo(!gf(t),"You must pass an array and a value into the `indexOf` function!"),Uo(jo(t),"You must pass an array and a value into the `indexOf` function!"),Ct(t).length===1||jo(e)&&Vo(Ct(t[0]),Ct(e))){for(let r=0;r<t.length;r++){let s=t[r];if(Vo(s,e)&&(n?s===e:!0))return[r]}return null}else for(let r=0;r<t.length;r++){let s=t[r],o=Yo(s,e);if(o)return[r].concat(o)}return null}Co.exports=Yo});var Bo=a((Pg,ko)=>{var qf=xe(),yf=J();function bf(t){try{return qf(t,yf(t))}catch{return NaN}}ko.exports=bf});var kt=a((_g,zo)=>{var Nf=T(),xf=m();function wf(t){try{let e=Nf(t),n=1/0;for(let r=0;r<e.length;r++){if(!xf(e[r]))return NaN;e[r]<n&&(n=e[r])}return n===1/0?NaN:n}catch{return NaN}}zo.exports=wf});var _o=a(($g,Po)=>{var vf=xe(),Tf=kt();function Sf(t){try{return vf(t,Tf(t))}catch{return NaN}}Po.exports=Sf});var Wo=a((Wg,$o)=>{var Of=m(),Af=x();function Ef(t){try{return Of(t)?Math.ceil(t):NaN}catch{return NaN}}$o.exports=Af(Ef)});var Go=a((Fg,Jo)=>{var If=p(),Mf=jt(),Uf=x(),Fo=m();function jf(t,e){try{if(!Fo(t))return NaN;if(If(e))e=1e-10;else if(!Fo(e))return NaN;return Mf(t)<e?0:t}catch{return NaN}}Jo.exports=Uf(jf)});var Lo=a((Jg,Ro)=>{var Bt=m(),Vf=x();function Yf(t,e,n){try{return Bt(t)?Bt(e)?Bt(n)?t<e?e:t>n?n:t:NaN:NaN:NaN}catch{return NaN}}Ro.exports=Vf(Yf)});var we=a((Gg,Ko)=>{var Cf=m(),kf=T();function Bf(t){try{let e=kf(t),n=0;for(let r=0;r<e.length;r++){if(!Cf(e[r]))return NaN;n+=e[r]}return n/e.length}catch{return NaN}}Ko.exports=Bf});var Le=a((Rg,Qo)=>{var zf=we(),Pf=T(),_f=m();function $f(t){try{let e=Pf(t),n=zf(e),r=0;for(let s=0;s<e.length;s++){if(!_f(e[s]))return NaN;r+=(e[s]-n)*(e[s]-n)}return r/e.length}catch{return NaN}}Qo.exports=$f});var Do=a((Lg,Ho)=>{var Xo=we(),Zo=Le();function Wf(t,e){try{let n=Xo(t),r=Xo(e),s=Math.sqrt((Zo(t)+Zo(e))/2);return(n-r)/s}catch{return NaN}}Ho.exports=Wf});var ri=a((Kg,ni)=>{var ei=d(),Ff=m(),Ke=f();function ti(t,e){if(Ke(ei(t),"The `combine` function only works on arrays!"),Ke(Ff(e),"`r` must be a whole number!"),e>t.length)return[t];if(e<=0)return[[]];if(Ke(e===parseInt(e),"`r` must be a whole number!"),t.length<2)return t;let n=[];return t.forEach((r,s)=>{Ke(!ei(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=t.slice(s+1);if(o.length<e-1)return;ti(o,e-1).forEach(i=>{n.push([r].concat(i))})}),n}ni.exports=ti});var zt=a((Qg,ii)=>{var si=we(),oi=p();function Jf(t,e){try{let n=si(t),r=si(e),s=Math.max(t.length,e.length),o=0;for(let u=0;u<s;u++){if(oi(t[u]))return NaN;if(oi(e[u]))return NaN;o+=(t[u]-n)*(e[u]-r)}return o/t.length}catch{return NaN}}ii.exports=Jf});var Qe=a((Xg,ui)=>{var Gf=m(),Rf=x();function Lf(t){try{return Gf(t)?Math.sqrt(t):NaN}catch{return NaN}}ui.exports=Rf(Lf)});var Xe=a((Zg,ai)=>{var Kf=Qe(),Qf=Le();function Xf(t){try{return Kf(Qf(t))}catch{return NaN}}ai.exports=Xf});var hi=a((Hg,li)=>{var Zf=zt(),ci=Xe();function Hf(t,e){try{return Zf(t,e)/(ci(t)*ci(e))}catch{return NaN}}li.exports=Hf});var mi=a((Dg,fi)=>{var Df=m(),em=x();function tm(t){try{return Df(t)?Math.cos(t):NaN}catch{return NaN}}fi.exports=em(tm)});var yi=a((eq,qi)=>{var pi=f(),di=d(),gi=T();function nm(t,e){pi(di(t),"You must pass two arrays into the `diff` function!"),pi(di(e),"You must pass two arrays into the `diff` function!");let n=gi(t),r=gi(e),s=[];return n.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}qi.exports=nm});var Ze=a((tq,Ni)=>{var bi=m(),rm=x();function sm(t,e){try{return bi(t)?bi(e)?Math.pow(t,e):NaN:NaN}catch{return NaN}}Ni.exports=rm(sm)});var He=a((nq,xi)=>{var om=Ne(),im=T();function um(t){try{return om(...im(t))}catch{return NaN}}xi.exports=um});var Pt=a((rq,wi)=>{var am=m(),cm=x();function lm(){try{let t=1,e=Object.values(arguments);for(let n=0;n<e.length;n++){if(!am(e[n]))return NaN;t*=e[n]}return t}catch{return NaN}}wi.exports=cm(lm)});var ce=a((sq,vi)=>{var hm=Pt();function fm(t,e){return hm(t,e)}vi.exports=fm});var _t=a((oq,Ti)=>{var mm=Ne(),pm=ce();function dm(t,e){return mm(t,pm(e,-1))}Ti.exports=dm});var Oi=a((iq,Si)=>{var gm=Ze(),qm=He(),ym=Qe(),bm=_t();function Nm(t,e){try{return ym(qm(gm(bm(t,e),2)))}catch{return NaN}}Si.exports=Nm});var Ei=a((uq,Ai)=>{var xm=ce(),wm=Ze();function vm(t,e){return xm(t,wm(e,-1))}Ai.exports=vm});var $t=a((cq,Yi)=>{var ve=f(),Ii=p(),Mi=d(),Tm=m(),aq=F(),Ui=T(),ji=N(),Sm=He(),Om=ce(),Vi=X();function De(t,e){ve(!Ii(t)&&!Ii(e),"You must pass two arrays of numbers into the `dot` function!"),ve(Mi(t)&&Mi(e),"You must pass two arrays of numbers into the `dot` function!"),Ui(t).concat(Ui(e)).forEach(s=>{ve(Tm(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let n=ji(t),r=ji(e);if(ve(n.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),ve(n[n.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${n[n.length-1]} !== ${r[0]})`),n.length===1&&r.length===1)return Sm(Om(t,e));if(n.length===1&&r.length===2)return Vi(e).map(s=>De(t,s));if(n.length===2&&r.length===1)return t.map(s=>De(s,e));if(n.length===2&&r.length===2){let s=Vi(e),o=[];for(let u=0;u<t.length;u++){let i=[];for(let c=0;c<s.length;c++)i.push(De(t[u],s[c]));o.push(i)}return o}}Yi.exports=De});var Bi=a((lq,ki)=>{var Ci=f(),Am=d(),Em=p(),Im=N();function Mm(t){return Ci(Am(t),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Ci(Im(t).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),t.filter(e=>!Em(e))}ki.exports=Mm});var Fi=a((hq,Wi)=>{var zi=f(),Pi=p(),_i=d(),Um=J(),$i=N();function jm(t,e){zi(_i(t)&&_i(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),zi($i(t).length===1&&$i(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let n=[],r=[];for(let s=0;s<Um([t.length,e.length]);s++)!Pi(t[s])&&!Pi(e[s])&&(n.push(t[s]),r.push(e[s]));return[n,r]}Wi.exports=jm});var Xi=a((fq,Qi)=>{var Ji=f(),Gi=p(),Ri=d(),Li=m(),Vm=J(),Ki=N();function Ym(t,e){Ji(Ri(t)&&Ri(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Ji(Ki(t).length===1&&Ki(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let n=[],r=[];for(let s=0;s<Vm([t.length,e.length]);s++)!Gi(t[s])&&Li(t[s])&&!Gi(e[s])&&Li(e[s])&&(n.push(t[s]),r.push(e[s]));return[n,r]}Qi.exports=Ym});var Hi=a((mq,Zi)=>{var Cm=x(),km=m();function Bm(t){try{return km(t)?Math.exp(t):NaN}catch{return NaN}}Zi.exports=Cm(Bm)});var tu=a((pq,eu)=>{var zm=x();function Di(t){try{return t!==parseInt(t)?NaN:t<=1?1:t*Di(t-1)}catch{return NaN}}eu.exports=zm(Di)});var ru=a((dq,nu)=>{var Pm=m(),_m=x();function $m(t){try{let e=JSON.parse(t);return Pm(e)?e:NaN}catch{return NaN}}nu.exports=_m($m)});var Wt=a((gq,su)=>{var Wm=m(),Fm=x();function Jm(t){try{let e=JSON.parse(t);return Wm(e)?parseInt(e):NaN}catch{return NaN}}su.exports=Fm(Jm)});var uu=a((qq,iu)=>{var H=f(),Gm=p(),Ft=d(),Jt=m(),ou=N(),Rm=Wt();function Gt(t,e){return H(!Gm(t),"You must pass an array and an index into the `getValueAt` function!"),H(Ft(t),"You must pass an array and an index into the `getValueAt` function!"),H(Jt(e)||Ft(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Ft(e)&&(H(ou(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(n=>{H(Jt(n)&&Rm(n)===n,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),H(e.length<=ou(t).length,"The index passed into the `getValueAt` function has too many dimensions!")),Jt(e)?(H(e<t.length,`The index ${e} is out of bounds!`),t[e]):e.length>1?(H(e[0]<t.length,`The index ${e[0]} is out of bounds!`),Gt(t[e[0]],e.slice(1))):Gt(t,e[0])}iu.exports=Gt});var Rt=a((Nq,au)=>{var yq=_(),bq=te(),Lm=m(),Km=oe();function Qm(t){Lm(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(0);return Km(e,t)}au.exports=Qm});var lu=a((xq,cu)=>{var et=f(),Xm=p(),Zm=m(),Hm=Rt();function Dm(t){et(!Xm(t),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(Zm(t),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(parseInt(t)===t,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(t>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Hm([t,t]);for(let n=0;n<t;n++)e[n][n]=1;return e}cu.exports=Dm});var Lt=a((vq,hu)=>{var wq=f(),ep=z();function tp(){return ep([...arguments])}hu.exports=tp});var mu=a((Tq,fu)=>{var np=d(),rp=T(),sp=Lt();function op(){let t=Object.values(arguments).map(r=>np(r)?rp(r):[r]),e=[];return sp(t).forEach(r=>{for(let s=0;s<t.length;s++)if(t[s].indexOf(r)<0)return;e.push(r)}),e}fu.exports=op});var Qt=a((Oq,gu)=>{var Te=f(),tt=p(),pu=m(),Kt=d(),ip=E(),up=T(),Sq=N(),ap=Fe();function du(t,e){if(Te(!tt(t),"You must pass an array into the `slice` function!"),Te(Kt(t),"You must pass an array into the `slice` function!"),tt(e))return t.slice();Te(Kt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),up(e).forEach(s=>{Te(tt(s)||pu(s)&&ap(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let n=e[0];tt(n)&&(n=ip(0,t.length)),pu(n)&&(n=[n]);let r=[];return n.forEach(s=>{Te(s<t.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=t.length);let o=t[s];Kt(o)?r.push(du(t[s],e.slice(1,e.length))):r.push(t[s])}),r}gu.exports=du});var Nu=a((Aq,bu)=>{var $=f(),cp=p(),lp=d(),Xt=m(),hp=T(),fp=N(),nt=Qt(),mp=$t(),qu=Ne(),yu=ce(),Zt=Yt(),D=E();function Ht(t){$(!cp(t),"You must pass a square 2D array into the `inverse` function!"),$(lp(t),"You must pass a square 2D array into the `inverse` function!"),hp(t).forEach(n=>$(Xt(n),"The array passed into the `inverse` function must contain only numbers!"));let e=fp(t);if($(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),$(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),$(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return t;if(e[0]===1)return $(t[0][0]!==0,"This matrix cannot be inverted!"),1/t[0][0];if(e[0]===2){let n=t[0][0],r=t[0][1],s=t[1][0],o=t[1][1],u=n*o-r*s;$(u!==0,"This matrix cannot be inverted!");let i=[[o,-r],[-s,n]];return yu(i,1/u)}else if(e[0]>1){let n=(r,s)=>Xt(r)||Xt(s)?yu(r,s):mp(r,s);for(let r=1;r<e[0]-1;r++)try{let s=nt(t,[D(0,r),D(0,r)]),o=nt(t,[D(0,r),D(r,e[0])]),u=nt(t,[D(r,e[0]),D(0,r)]),i=nt(t,[D(r,e[0]),D(r,e[0])]),c=Ht(s),h=Ht(qu(i,n(-1,n(n(u,c),o)))),l=qu(c,n(n(n(n(c,o),h),u),c)),q=n(-1,n(n(c,o),h)),g=n(-1,n(n(h,u),c)),y=h;return Zt(Zt(l,q,1),Zt(g,y,1),0)}catch{}$(!1,"This matrix cannot be inverted!")}}bu.exports=Ht});var wu=a((Eq,xu)=>{var pp=x(),Dt=m();function dp(t,e,n){try{return Dt(t)?Dt(e)?Dt(n)?n*(e-t)+t:NaN:NaN:NaN}catch{return NaN}}xu.exports=pp(dp)});var Su=a((Iq,Tu)=>{var vu=m(),gp=p(),qp=x();function yp(t,e){try{return e=gp(e)?Math.E:e,vu(t)?vu(e)?Math.log(t)/Math.log(e):NaN:NaN}catch{return NaN}}Tu.exports=qp(yp)});var Au=a((Mq,Ou)=>{var Se=m(),bp=x();function Np(t,e,n,r,s){try{return Se(t)?Se(e)?Se(n)?Se(r)?Se(s)?(s-r)*(t-e)/(n-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Ou.exports=bp(Np)});var Iu=a((Cq,Eu)=>{var Uq=f(),jq=p(),Vq=d(),Yq=m(),xp=T(),wp=V(),vp=Ye();function Tp(t){try{let e=xp(t),n=vp(e);if(n.length===0)return NaN;if(n.length<e.length)return NaN;n=wp(n);let r;return n.length%2===0?r=(n[n.length/2-1]+n[n.length/2])/2:r=n[Math.floor(n.length/2)],r}catch{return NaN}}Eu.exports=Tp});var ju=a((kq,Uu)=>{var Sp=T(),Op=Ae(),Ap=z(),Mu=V();function Ep(t){try{if(t.length===0)return NaN;let e=Sp(t);if(e.length===0)return NaN;let n={},r=Ap(e);r.forEach(i=>{n[i]=Op(e,i)});let s=Mu(r,(i,c)=>n[c]-n[i]),o=s[0],u=Mu(s.filter(i=>n[i]===n[o]));return u.length===1?u[0]:u}catch{return NaN}}Uu.exports=Ep});var ku=a((Pq,Cu)=>{var Ip=p(),Bq=_(),zq=te(),{random:Vu}=ie(),Mp=oe(),Up=m();function Yu(){let t=Vu(),e=Vu();return Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*e)}function jp(t){if(Ip(t))return Yu();Up(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(Yu());return Mp(e,t)}Cu.exports=jp});var zu=a((Wq,Bu)=>{var _q=_(),$q=te(),Vp=oe(),Yp=m();function Cp(t){Yp(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(1);return Vp(e,t)}Bu.exports=Cp});var $u=a((Fq,_u)=>{var Pu=d(),kp=m(),rt=f(),Bp=p();function en(t,e){if(rt(Pu(t),"The `permute` function only works on arrays!"),Bp(e)&&(e=t.length),rt(kp(e),"`r` must be a whole number!"),e>t.length)return en(t);if(e<=0)return[[]];if(rt(e===parseInt(e),"`r` must be a whole number!"),t.length<2)return t;let n=[];return t.forEach((r,s)=>{rt(!Pu(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=t.slice(0,s),u=t.slice(s+1),i=o.concat(u);en(i,e-1).forEach(h=>{n.push([r].concat(h))})}),n}_u.exports=en});var Gu=a((Jq,Ju)=>{var zp=d(),Pp=N(),Wu=Ut(),Fu=At();function _p(){Object.keys(arguments).forEach(t=>{let e=arguments[t];if(zp(e)){let n=Pp(e);n.length===1?new Fu(e).print():n.length==2?new Wu(e).print():console.log(e)}else e instanceof Wu||e instanceof Fu?e.print():console.log(e)})}Ju.exports=_p});var Lu=a((Gq,Ru)=>{var $p=m(),Wp=x();function Fp(t){try{return $p(t)?Math.round(t):NaN}catch{return NaN}}Ru.exports=Wp(Fp)});var tn=a((Rq,Xu)=>{var Ku=f(),Jp=m(),Qu=d(),Gp=j();function Rp(t,e,n){Ku(Qu(t),"The first argument passed into the `setValueAt` function must be an array!"),Jp(e)&&(e=[e]),Ku(Qu(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Gp(t),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=n,r}Xu.exports=Rp});var Hu=a((Lq,Zu)=>{var Lp=m(),Kp=x();function Qp(t){try{return Lp(t)?t<0?-1:t>0?1:0:NaN}catch{return NaN}}Zu.exports=Kp(Qp)});var ea=a((Kq,Du)=>{var Xp=m(),Zp=x();function Hp(t){try{return Xp(t)?Math.sin(t):NaN}catch{return NaN}}Du.exports=Zp(Hp)});var na=a((Qq,ta)=>{var Dp=Xe();function ed(t){return Dp(t)}ta.exports=ed});var sa=a((Xq,ra)=>{var td=m(),nd=x();function rd(t){try{return td(t)?Math.tan(t):NaN}catch{return NaN}}ra.exports=nd(rd)});var st=a((Zq,ia)=>{var oa=P();function sd(t,e){assert(oa(t),"`fn` must be a function!");let n=new Date;return e?t(...e):t(),new Date-n}async function od(t,e){assert(oa(t),"`fn` must be a function!");let n=new Date;return e?await t(...e):await t(),new Date-n}ia.exports={timeSync:sd,timeAsync:od}});var ca=a((Hq,aa)=>{var ua=f(),id=d(),ud=P(),ad=te(),cd=xe(),ld=tn(),hd=T();function fd(t,e){ua(id(t),"The first argument passed into the `where` function must be an array!"),ua(ud(e),"The second argument passed into the `where` function must be a function!");let n=hd(t).length,r=ad(t,e),s=[],o=0,u=!1;for(;!u;){let i=cd(r,!0);i?(s[o]=i,r=ld(r,i,null),o++):u=!0}return o===0?null:s}aa.exports=fd});var dd=a((Dq,nn)=>{var{DataFrame:md,Series:pd}=Ut(),Oe={abs:jt(),add:Ne(),append:Yt(),apply:te(),arccos:Oo(),arcsin:Eo(),arctan:Mo(),argmax:Bo(),argmin:_o(),assert:f(),ceil:Wo(),chop:Go(),clamp:Lo(),cohensd:Do(),combine:ri(),copy:j(),correl:hi(),cos:mi(),count:Ae(),covariance:zt(),DataFrame:md,diff:yi(),distance:Oi(),divide:Ei(),dot:$t(),dropMissing:Bi(),dropMissingPairwise:Fi(),dropNaN:Ye(),dropNaNPairwise:Xi(),exp:Hi(),factorial:tu(),flatten:T(),float:ru(),floor:Fe(),getValueAt:uu(),identity:lu(),indexOf:xe(),int:Wt(),intersect:mu(),inverse:Nu(),isArray:d(),isBoolean:se(),isEqual:F(),isFunction:P(),isNumber:m(),isObject:Ue(),isString:S(),isUndefined:p(),lerp:wu(),log:Su(),map:Au(),MathError:B(),max:J(),mean:we(),median:Iu(),min:kt(),mode:ju(),multiply:Pt(),ndarray:_(),normal:ku(),ones:zu(),permute:$u(),pow:Ze(),print:Gu(),random:ie().random,range:E(),reshape:oe(),reverse:fe(),round:Lu(),scale:ce(),seed:ie().seed,Series:pd,set:z(),setValueAt:tn(),shape:N(),shuffle:wt(),sign:Hu(),sin:ea(),slice:Qt(),sort:V(),sqrt:Qe(),std:Xe(),stdev:na(),subtract:_t(),sum:He(),tan:sa(),time:st().timeSync,timeSync:st().timeSync,timeAsync:st().timeAsync,transpose:X(),union:Lt(),variance:Le(),vectorize:x(),where:ca(),zeros:Rt(),dump:function(){Object.keys(Oe).forEach(t=>{try{global[t]=Oe[t]}catch{try{window[t]=Oe[t]}catch{}}})}};typeof nn<"u"&&(nn.exports=Oe);typeof window<"u"&&(window.JSMathTools=Oe)});dd();})();
