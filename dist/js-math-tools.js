(()=>{var at=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var f=a((Ah,en)=>{function Ji(n){return typeof n=="number"&&!isNaN(n)}en.exports=Ji});var re=a((Eh,nn)=>{var tn=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};nn.exports=tn});var m=a((Mh,rn)=>{var Fi=re();rn.exports=function(n,e){if(!n)throw new Fi(e)}});var p=a((Ih,sn)=>{function Li(n){return n===null||typeof n>"u"}sn.exports=Li});var d=a((jh,on)=>{function Ri(n){return n instanceof Array}on.exports=Ri});var w=a((Vh,ln)=>{var un=m(),Wi=p(),an=d();function cn(n){un(!Wi(n),"You must pass one array into the `flatten` function!"),un(an(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){an(t)?e=e.concat(cn(t)):e.push(t)}),e}ln.exports=cn});var C=a((Uh,fn)=>{var Ki=w(),Qi=f();function Xi(n){try{let e=Ki(n),t=-1/0;for(let r=0;r<e.length;r++){if(!Qi(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}fn.exports=Xi});var z=a((Yh,hn)=>{function Gi(n){return typeof n=="function"}hn.exports=Gi});var b=a((Ch,mn)=>{var ct=m(),Zi=p(),lt=d(),Hi=C(),Di=z();function eu(n){return ct(!Zi(n),"You must pass a function into the `vectorize` function!"),ct(Di(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>lt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>lt(arguments[i])).map(i=>arguments[i].length),o=Hi(s);s.forEach(i=>{ct(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>lt(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}mn.exports=eu});var ft=a((zh,pn)=>{var tu=f(),nu=b();function ru(n){try{return tu(n)?Math.abs(n):NaN}catch{return NaN}}pn.exports=nu(ru)});var pe=a((kh,dn)=>{var su=f(),ou=b();function iu(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!su(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}dn.exports=ou(iu)});var v=a((Ph,yn)=>{var Ve=m(),uu=p(),gn=d(),au=C();function qn(n){Ve(!uu(n),"You must pass an array into the `shape` function!"),Ve(gn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>gn(r));if(t.indexOf(!0)>-1){Ve(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=au(r);r.forEach(function(o){Ve(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(qn(n[0]))}return e}yn.exports=qn});var de=a(($h,Nn)=>{var bn=m(),cu=p(),lu=d();function fu(n){bn(!cu(n),"You must pass an array into the `reverse` function!"),bn(lu(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}Nn.exports=fu});var k=a((_h,xn)=>{var ge=m(),hu=p(),mu=d(),pu=f(),du=w(),qe="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function wn(n,e){if(e||(ge(!hu(n),qe),mu(n)||(n=[n]),n=du(n),ge(n.length>0,qe),n.forEach(t=>{ge(pu(t),qe),ge(parseInt(t)===t,qe),ge(t>=0,qe)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(wn(n.slice(1),!0));return t}}xn.exports=wn});var se=a((Bh,Tn)=>{var ht=m(),gu=p(),qu=d(),yu=v(),vn=de(),bu=k();function Nu(n){ht(!gu(n),"You must pass an array into the `transpose` function!"),ht(qu(n),"You must pass an array into the `transpose` function!");let e=yu(n);if(ht(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return vn(n);if(e.length===2){let t=bu(vn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}Tn.exports=Nu});var pt=a((Jh,Mn)=>{var U=m(),Sn=p(),On=d(),wu=f(),An=v(),mt=se();function En(n,e,t=0){U(!Sn(n),"You must pass two arrays into the `append` function!"),U(!Sn(e),"You must pass two arrays into the `append` function!"),U(On(n),"You must pass two arrays into the `append` function!"),U(On(e),"You must pass two arrays into the `append` function!"),U(wu(t),"The `axis` argument to the `append` function must be 0 or 1!"),U(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),U(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=An(n),s=An(e);U(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),U(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&U(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(U(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return mt(En(mt(n),mt(e),0))}}Mn.exports=En});var P=a((Fh,In)=>{var xu=b();function vu(n,e){try{return e(n)}catch{return NaN}}In.exports=xu(vu)});var Vn=a((Lh,jn)=>{var Tu=f(),Su=b();function Ou(n){try{return Tu(n)?Math.acos(n):NaN}catch{return NaN}}jn.exports=Su(Ou)});var Yn=a((Rh,Un)=>{var Au=f(),Eu=b();function Mu(n){try{return Au(n)?Math.asin(n):NaN}catch{return NaN}}Un.exports=Eu(Mu)});var zn=a((Wh,Cn)=>{var Iu=f(),ju=b();function Vu(n){try{return Iu(n)?Math.atan(n):NaN}catch{return NaN}}Cn.exports=ju(Vu)});var K=a((Qh,Pn)=>{var Kh=d();function kn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!kn(n[u],e[u]))return!1}return!0}}}Pn.exports=kn});var ye=a((Xh,Fn)=>{var $n=m(),Uu=p(),_n=d(),dt=v(),Bn=K();function Jn(n,e,t){if($n(!Uu(n),"You must pass an array and a value into the `indexOf` function!"),$n(_n(n),"You must pass an array and a value into the `indexOf` function!"),dt(n).length===1||_n(e)&&Bn(dt(n[0]),dt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Bn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Jn(s,e);if(o)return[r].concat(o)}return null}Fn.exports=Jn});var Rn=a((Gh,Ln)=>{var Yu=ye(),Cu=C();function zu(n){try{return Yu(n,Cu(n))}catch{return NaN}}Ln.exports=zu});var Ue=a((Zh,Wn)=>{var ku=w(),Pu=f();function $u(n){try{let e=ku(n),t=1/0;for(let r=0;r<e.length;r++){if(!Pu(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Wn.exports=$u});var Qn=a((Hh,Kn)=>{var _u=ye(),Bu=Ue();function Ju(n){try{return _u(n,Bu(n))}catch{return NaN}}Kn.exports=Ju});var Gn=a((Dh,Xn)=>{var Fu=f(),Lu=b();function Ru(n){try{return Fu(n)?Math.ceil(n):NaN}catch{return NaN}}Xn.exports=Lu(Ru)});var Dn=a((em,Hn)=>{var Wu=p(),Ku=ft(),Qu=b(),Zn=f();function Xu(n,e){try{if(!Zn(n))return NaN;if(Wu(e))e=1e-10;else if(!Zn(e))return NaN;return Ku(n)<e?0:n}catch{return NaN}}Hn.exports=Qu(Xu)});var tr=a((tm,er)=>{var gt=f(),Gu=b();function Zu(n,e,t){try{return gt(n)?gt(e)?gt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}er.exports=Gu(Zu)});var be=a((nm,nr)=>{var Hu=f(),Du=w();function ea(n){try{let e=Du(n),t=0;for(let r=0;r<e.length;r++){if(!Hu(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}nr.exports=ea});var Ye=a((rm,rr)=>{var ta=be(),na=w(),ra=f();function sa(n){try{let e=na(n),t=ta(e),r=0;for(let s=0;s<e.length;s++){if(!ra(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}rr.exports=sa});var ur=a((sm,ir)=>{var sr=be(),or=Ye();function oa(n,e){try{let t=sr(n),r=sr(e),s=Math.sqrt((or(n)+or(e))/2);return(t-r)/s}catch{return NaN}}ir.exports=oa});var fr=a((om,lr)=>{var ar=d(),ia=f(),Ce=m();function cr(n,e){if(Ce(ar(n),"The `combine` function only works on arrays!"),Ce(ia(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ce(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ce(!ar(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;cr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}lr.exports=cr});var oe=a((um,hr)=>{var im=m(),ua=p(),aa=d();function qt(n){if(typeof n=="object"){if(ua(n))return n;if(aa(n))return n.map(qt);{let e={};return Object.keys(n).forEach(function(t){e[t]=qt(n[t])}),e}}else return n}hr.exports=qt});var yt=a((am,dr)=>{var mr=be(),pr=p();function ca(n,e){try{let t=mr(n),r=mr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(pr(n[i]))return NaN;if(pr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}dr.exports=ca});var ze=a((cm,gr)=>{var la=f(),fa=b();function ha(n){try{return la(n)?Math.sqrt(n):NaN}catch{return NaN}}gr.exports=fa(ha)});var ke=a((lm,qr)=>{var ma=ze(),pa=Ye();function da(n){try{return ma(pa(n))}catch{return NaN}}qr.exports=da});var Nr=a((fm,br)=>{var ga=yt(),yr=ke();function qa(n,e){try{return ga(n,e)/(yr(n)*yr(e))}catch{return NaN}}br.exports=qa});var xr=a((hm,wr)=>{var ya=f(),ba=b();function Na(n){try{return ya(n)?Math.cos(n):NaN}catch{return NaN}}wr.exports=ba(Na)});var Q=a((mm,Tr)=>{var vr=m(),wa=p(),xa=d(),va=w();function Ta(n){vr(!wa(n),"You must pass an array into the `set` function!"),vr(xa(n),"You must pass an array into the `set` function!");let e=[],t={};return va(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Tr.exports=Ta});var Pe=a((pm,Mr)=>{var Sr=m(),Or=p(),Ar=d(),Er=w(),Sa=K(),Oa=Q();function Aa(n,e){Sr(!Or(n),"You must pass an array and some items to count into the `count` function!"),Sr(Ar(n),"You must pass an array and some items to count into the `count` function!");let t=Er(n);return e=Or(e)?Oa(n):e,Ar(e)?Er(e).map(function(r){let s=t.filter(o=>Sa(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Mr.exports=Aa});var ie=a((dm,Yr)=>{var Ne=m(),Ir=d(),jr=f(),Ea=v(),Vr=w(),Ma=n=>n.reduce((e,t)=>e*t);function Ur(n,e){if(Ne(Ir(n),"The first argument passed into the `reshape` function must be an array!"),jr(e)&&(e=[e]),Ne(Ir(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),Ne(Ea(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{Ne(jr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Vr(n);let t=Vr(n);Ne(Ma(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Ur(i,e.slice(1)))}return r}Yr.exports=Ur});var X=a((ym,Jr)=>{var gm=k(),qm=P(),kr=p(),Ia=m(),Pr=f(),$r=oe(),ja=ie(),_r=Math.pow(2,64),N=[];Br(parseInt(Math.random()*_r));function Va(n,e){n=S(n);function t(){n+=S("0x9e3779b97f4a7c15");let s=$r(n);return s=(s^s>>30n)*S("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*S("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function S(n){return BigInt.asUintN(64,BigInt(n))}function Cr(n,e){return n=S(n),e=BigInt(e),S(S(n<<e)|S(n>>S(64n-e)))}function Br(n){if(kr(n))return $r(N);{Ia(Pr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Va(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function zr(){let n=S(Cr(N[0]+N[3],23)+N[0]),e=S(N[1]<<17n);return N[2]=S(N[2]^N[0]),N[3]=S(N[3]^N[1]),N[1]=S(N[1]^N[2]),N[0]=S(N[0]^N[3]),N[2]=S(N[2]^e),N[3]=Cr(N[3],45),parseInt(n)/_r}function Ua(n){if(kr(n))return zr();Pr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(zr());return ja(e,n)}Jr.exports={random:Ua,seed:Br}});var we=a((bm,Lr)=>{var Fr=m(),Ya=d(),Ca=p(),za=f(),ka=v();function Pa(n){return Fr(Ya(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Fr(ka(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Ca(e)&&za(e))}Lr.exports=Pa});var G=a((Nm,Rr)=>{function $a(n){return typeof n=="boolean"}Rr.exports=$a});var Y=a((wm,Wr)=>{function _a(n){return typeof n=="string"}Wr.exports=_a});var $=a((xm,Kr)=>{var bt=m(),Nt=p(),wt=f(),Ba=de();function Ja(n,e,t=1){bt(!Nt(n)&&!Nt(e)&&!Nt(t),"You must pass two numbers and optionally a step value to the `range` function!"),bt(wt(n)&&wt(e)&&wt(t),"You must pass two numbers and optionally a step value to the `range` function!"),bt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=Ba(s)),s}Kr.exports=Ja});var Z=a((vm,Xr)=>{var xt=m(),Qr=p(),Fa=d(),La=z();function Ra(n,e){return n<e?-1:n>e?1:0}function Wa(n,e){Qr(e)&&(e=Ra),xt(!Qr(n),"You must pass an array into the `sort` function!"),xt(Fa(n),"You must pass an array into the `sort` function!"),xt(La(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Xr.exports=Wa});var D=a((Om,es)=>{var y=m(),$e=d(),H=p(),ue=v(),_e=se(),xe=$(),Tt=f(),ve=Y(),Tm=P(),Ka=z(),Qa=k(),vt=oe(),Xa=Q(),Gr=de(),Zr=Z(),Hr=G(),Sm=Be();function Ga(n){return Tt(n)&&parseInt(n)===n}function Za(n){return Ga(n)&&n>=0}function Dr(n,e){y(Tt(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var _=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y($e(r),"The new values must be a 1-dimensional array!");let s=ue(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(xe(t._index.length,s[0]).map(o=>"row"+Dr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y($e(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ue(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(ve(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ue(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ue(this.values)}isEmpty(){return this.values.filter(t=>!H(t)).length===0}clear(){let e=this,t=e.copy();return t.values=Qa(t.shape),t.index=e.index,t}get(e){let t=this;(ve(e)||Tt(e))&&(e=[e]);let r=Xa((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),H(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;H(e)&&(e=t.index),y($e(e),"The `indices` array must be a 1-dimensional array of strings."),y(ue(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(ve(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new _(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;H(e)&&(e=xe(0,r[0])),y($e(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ue(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(Za(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new _(Gr(e.values));return t.index=Gr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=xe(0,e.shape[0]).map(r=>"row"+Dr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new _(vt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(Ka(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>H(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(xe(0,r/2).concat(xe(t.index.length-r/2,t.index.length)));let o=vt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Hr(e)||ve(e)||H(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;H(e)&&(t=!0),ve(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Hr(e)&&(t=e);let r=this,s=_e([r.values,r.index]);s=_e(Zr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new _(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=_e([e.values,e.index]);t=_e(Zr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new _(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=vt(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new _,r.name=t.name,r):(r.values=i,r.index=s,r)}};es.exports=_});var St=a((Am,ts)=>{var Ha=m(),Da=f();function ec(n,e){Ha(Da(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}ts.exports=ec});var Je=a((Em,ns)=>{var tc=d(),nc=p();function rc(n){return typeof n=="object"&&!nc(n)&&!tc(n)}ns.exports=rc});var Ot=a((Mm,rs)=>{var sc=Y(),oc=Je(),ic=G(),uc=p(),ac=re();function cc(n,e){e=(()=>{if(uc(e))return!0;if(ic(e))return e;throw new ac("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>sc(u)?JSON.stringify(u):oc(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}rs.exports=cc});var os=a((Im,ss)=>{var lc=Ot();function fc(n,e,t){let r=lc(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=at("fs"),o=at("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}ss.exports=fc});var At=a((Um,as)=>{var F=d(),is=G(),jm=Je(),Vm=St(),hc=C(),us=$(),Fe=Y(),Le=re(),Re=p(),L=m();function mc(n,e,t,r,s,o){return t=(()=>{if(Re(t))return!1;if(is(t))return t;throw new Le("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Re(r))return!1;if(is(r))return r;throw new Le("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Re(s))return",";if(Fe(s))return L(s.length===1,u),s;if(F(s))return L(s.length===2,u),L(s[0].length===1,u),L(s[1].length===1,u),s;throw new Le(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Re(o))return'"';if(Fe(o))return L(o.length===1,u),o;if(F(o))return L(o.length===2,u),L(o[0].length===1,u),L(o[1].length===1,u),o;throw new Le(u)})(),(()=>{let l=e.split(`
`).filter(O=>O.length>0).map(O=>{let A=[],ne="",me=!1;for(let J=0;J<O.length;J++){let I=O[J];if(I.match(/\\/g))J++;else if(F(o)&&I===o[0])me=!0;else if(F(o)&&I===o[1])me=!1;else if(Fe(o)&&I===o)me=!me;else if(F(s)&&I===s[0]||F(s)&&I===s[1]||Fe(s)&&I===s)if(me)ne+=I;else{let it=ne;try{let ut=JSON.parse(it);F(ut)?A.push(it.trim()):A.push(ut)}catch{A.push(it.trim())}ne=""}else ne+=I}if(ne.length>0){let J=ne;try{let I=JSON.parse(J);F(I)?A.push(J.trim()):A.push(I)}catch{A.push(J.trim())}}return A}),c=(()=>{let O=t?l.shift():us(0,l[0].length).map(A=>"col"+A);return r&&O.shift(),O})(),g=(()=>r?l.map(A=>A.shift()):us(0,l.length).map(A=>"row"+A))(),q=hc(l.map(O=>O.length)),j=new n(l.map(O=>(O.length=q,O)));return t&&(j.columns=c),r&&(j.index=g),j})()}as.exports=mc});var ls=a((Ym,cs)=>{var pc=m(),dc=At(),gc=Y(),qc=p(),yc=re();async function bc(n,e,t,r,s,o,i){t=(()=>qc(t)?"utf8":(pc(gc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return at("fs").readFileSync(e,t)}catch{}throw new yc(`The path "${e}" could not be loaded!`)})();return dc(n,u,r,s,o,i)}cs.exports=bc});var We=a((Cm,fs)=>{var Nc=f(),wc=b();function xc(n){try{return Nc(n)?Math.floor(n):NaN}catch{return NaN}}fs.exports=wc(xc)});var Et=a((km,ms)=>{var hs=m(),vc=p(),Tc=d(),zm=We(),{random:Sc}=X();function Oc(n){hs(!vc(n),"You must pass an array into the `shuffle` function!"),hs(Tc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Sc()*t.length);e.push(t.splice(s,1)[0])}return e}ms.exports=Oc});var gs=a((Pm,ds)=>{var Ac=p(),Ec=m(),ps=Et();function Mc(n,e){return Ac(e)&&(e=0),Ec(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?ps(n.index):null,e===1?ps(n.columns):null)}ds.exports=Mc});var Ns=a(($m,bs)=>{var qs=m(),Ic=z(),jc=p(),Ke=D(),Te=w();function ys(n){let e={};return Te(n).forEach((t,r)=>{e[t]=r}),e}function ae(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function Vc(n,e,t,r){qs(Ic(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),jc(r)&&(r=0),qs(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=ys(s.index),i=ys(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.index[c],g.index=e.columns;let q=t(g,c,e);return q||delete o[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Ke(Te(u));return l.name=ae(o)[0],l.index=ae(i),l}s.values=u,s.index=ae(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.columns[c],g.index=e.index;let q=t(g,c,e);return q||delete i[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Ke(Te(u));return l.name=ae(i)[0],l.index=ae(o),l}s.values=u,s.index=ae(i),s=s.transpose()}return s}bs.exports=Vc});var Ss=a((_m,Ts)=>{var{random:Uc}=X(),ws=p(),Mt=f(),ce=Y(),It=G(),xs=d(),V=m(),vs=v(),Yc=$(),Cc=Z(),zc=w();function kc(n,e,t){let r=n.copy(),s=Uc().toString();return r=r.assign(s,r.index),ws(e)&&(e=[s],t=[!0]),(Mt(e)||ce(e))&&(e=[e],(It(t)||ce(t))&&(t=[t])),V(xs(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),V(vs(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),ws(t)&&(t=Yc(0,e.length).map(o=>!0)),V(xs(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(vs(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(V(ce(o)||Mt(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ce(o)){let i=r.columns.indexOf(o);return V(i>-1,`The column "${o}" does not exist!`),i}if(Mt(o))return V(parseInt(o)===o,"Column indices must be whole numbers!"),V(o>=0,`The column index ${o} is out of bounds!`),V(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(V(ce(o)||It(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ce(o)){let i=o.trim().toLowerCase();return V(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(It(o))return o}),r.values=Cc(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=zc(r.get(null,s).values),r=r.dropColumns(s),r}Ts.exports=kc});var As=a((Bm,Os)=>{var Pc=Y(),$c=K(),Se=$(),Qe=D();function _c(n,e){function t(q,j){return Pc(q)&&q.length>j?q.substring(0,j-3)+"...":q}if($c(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Se(0,s).concat(Se(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Se(0,i).concat(Se(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Qe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Qe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Qe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Se(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let g=28;return c instanceof Qe?(c.values=c.values.map(q=>t(q,g)),c.name=t(c.name,g),c.index=c.index.map(q=>t(q,g))):(c.values=c.values.map(q=>q.map(j=>t(j,g))),c.columns=c.columns.map(q=>t(q,g)),c.index=c.index.map(q=>t(q,g))),console.table(c.toObject()),e}Os.exports=_c});var Ms=a((Jm,Es)=>{function Bc(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}Es.exports=Bc});var jt=a((Fm,Is)=>{var Jc=D();function Fc(n){return n instanceof Jc}Is.exports=Fc});var ks=a((Lm,zs)=>{var js=p(),Vs=Y(),Us=f(),Xe=m(),Ys=d(),Cs=v(),Lc=jt();function Rc(n,e,t,r){js(t)&&(t=[]),js(r)&&(r=[]),(Vs(t)||Us(t))&&(t=[t]),(Vs(r)||Us(r))&&(r=[r]),Xe(Ys(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(Ys(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(Cs(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(Cs(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if(Lc(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}zs.exports=Rc});var Vt=a((Rm,Ps)=>{var Wc=f();function Kc(n){return Wc(n)&&parseInt(n)===n}function Qc(n){return Kc(n)&&n>=0}Ps.exports=Qc});var _s=a((Wm,$s)=>{var Ut=m(),Xc=Vt(),Gc=we();function Zc(n,e,t,r,s){t=t||0,Ut(t===0||t===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,Ut(Xc(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",Ut(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(l){let c=Gc(l);return s>0?l.length-c.length<s:r==="any"?c.length===l.length:r==="all"?c.length>0:!0}let i=e.copy(),u=Math.random().toString();if(t===0){let l=i.index.filter(c=>{let g=i.get(c,null).values;return o(g)});return l.length>0?i.get(l,null):new n}else if(t===1){let l=i.columns.filter(c=>{let g=i.get(null,c).values;return o(g)});return l.length>0?i.get(null,l):new n}return i}$s.exports=Zc});var Be=a((ep,Ls)=>{var{random:Km}=X(),Qm=P(),h=m(),ee=oe(),Bs=Pe(),Xm=we(),Yt=w(),M=d(),Gm=G(),Hc=K(),Dc=z(),Js=f(),te=Y(),E=p(),Zm=C(),Hm=Ue(),el=k(),le=$(),fe=D(),Fs=Q(),T=v(),Dm=Z(),Oe=se(),Ge=St(),tl=os(),nl=Ot(),rl=ls(),sl=At(),ol=gs(),il=Ns(),ul=Ss(),al=As(),cl=Ms(),ll=ks(),Ae=jt(),fl=_s(),Ct=Vt();function Ze(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function hl(n){return n instanceof Object&&!M(n)}var x=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){h(M(r),"The new values must be a 2-dimensional array!");let s=T(r);h(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(le(t._index.length,s[0]).map(o=>"row"+Ge(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(le(t._columns.length,s[1]).map(o=>"col"+Ge(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){h(M(r),"The new columns list must be a 1-dimensional array of strings!"),h(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),h(T(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ze(8):o.trim()));let s=(()=>{let o=Bs(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ze(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){h(M(r),"The new index must be a 1-dimensional array of strings!"),h(r.length===t.shape[0],"The new index must be the same length as the old index!"),h(T(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ze(8):o.trim()));let s=(()=>{let o=Bs(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ze(8):o),t._index=r}}),h(E(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(M(e)){let r=T(e);h(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Oe(r);let s=T(t.values);t._index=le(0,s[0]).map(o=>"row"+Ge(o,(s[0]-1).toString().length))}}get shape(){return T(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Fs(this.values).filter(t=>!E(t)).length===0}clear(){let e=this,t=new x(el(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(te(e)||Js(e))&&(e=[e]),(te(t)||Js(t))&&(t=[t]);let s=Fs((e||[]).concat(t||[]).map(o=>typeof o));return h(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&h(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(h(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),h(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),E(e)||(e=e.map(o=>{if(typeof o=="string")return h(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return h(o>=0,`Index ${o} is out of bounds!`),h(parseInt(o)===o,"Row numbers must be integers!"),h(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),E(t)||(t=t.map(o=>{if(typeof o=="string")return h(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return h(o>=0,`Column ${o} is out of bounds!`),h(parseInt(o)===o,"Column numbers must be integers!"),h(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;E(e)&&(e=r.index),E(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),h(M(e)&&M(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(T(e).length===1&&T(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(e.length>0,"The `rows` array must contain at least one row name."),h(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{h(te(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{h(te(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return Yt(s)[0];if(e.length===1){let i=new fe(Yt(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new fe(Yt(s));return i.name=t[0],i.index=e,i}let o=new x(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;E(e)&&(e=le(0,s[0])),E(t)&&(t=le(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),h(M(e)&&M(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(T(e).length===1&&T(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(e.length>0,"The `rowIndices` array must contain at least one index."),h(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{h(Ct(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{h(Ct(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new x(Oe(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=le(0,e.shape[0]).map(r=>"row"+Ge(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new x;let t=new x(ee(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;E(t)?(s=e,h(!M(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,h(te(r),"When using two parameters for the `assign` method, the first parameter must be a string."),h(Ae(s)||M(s)&&T(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),h(hl(s)||Ae(s)||M(s)&&T(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(Ae(s)){let i={};return h(o.isEmpty()||Hc(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(M(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(l=>{let c=s[l];if(h(M(c),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),h(T(c).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=Oe([c]),i.columns=[l],u=i.shape;else{h(c.length===u[0],`Column "${l}" in the new data is not the same length as the other columns in the original DataFrame.`);let g=i.columns.indexOf(l);g<0&&(i.columns.push(l),g=i.columns.indexOf(l)),i.values.forEach((q,j)=>{q[g]=c[j]})}}),i}}apply(e,t){t=t||0,h(Dc(e),"The first parameter to the `apply` method must be a function."),h(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=Oe(r.values).map((i,u)=>{let l=new fe(i);return l.name=r.columns[u],l.index=r.index,e(l,u,r)});if(T(o).length===1){let i=new fe(o);return i.index=ee(r.columns),i}else{let i=new x(Oe(o));return i.index=ee(r.index),i.columns=ee(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new fe(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(T(s).length===1){let o=new fe(s);return o.index=ee(r.index),o}else{let o=new x(s);return o.index=ee(r.index),o.columns=ee(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,h(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,h(Ct(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",h(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(l){if(r>0){let c=0;for(let g=0;g<l.length;g++){let q=l[g];if(E(q)&&c++,c>=r)return[]}}else if(t==="any")for(let c=0;c<l.length;c++){let g=l[c];if(E(g))return[]}else if(t==="all"){for(let c=0;c<l.length;c++){let g=l[c];if(!E(g))return l}return[]}return l}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let l=i.values.map(s).filter(g=>g.length>0);if(T(l).length<2)return new x;i.values=l;let c=i.get(null,u);if(E(c))return new x;te(c)&&(c=[c]),Ae(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(s).filter(g=>g.length>0);if(T(l).length<2)return new x;i.values=l;let c=i.get(null,u);if(E(c))return new x;te(c)&&(c=[c]),Ae(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){return fl(x,this,e,t,r)}drop(e,t){return ll(x,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return cl(this)}toCSVString(e){return nl(this,e)}toCSV(e,t){return tl(this,e,t)}print(){return al(x,this)}sort(e,t){return ul(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return il(x,this,e,t)}shuffle(e){return ol(this,e)}};x.fromCSV=function(){return rl(x,...arguments)};x.fromCSVString=function(){return sl(x,...arguments)};Ls.exports=x});var Xs=a((tp,Qs)=>{var Rs=m(),Ws=d(),Ks=w();function ml(n,e){Rs(Ws(n),"You must pass two arrays into the `diff` function!"),Rs(Ws(e),"You must pass two arrays into the `diff` function!");let t=Ks(n),r=Ks(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}Qs.exports=ml});var He=a((np,Zs)=>{var Gs=f(),pl=b();function dl(n,e){try{return Gs(n)?Gs(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}Zs.exports=pl(dl)});var De=a((rp,Hs)=>{var gl=pe(),ql=w();function yl(n){try{return gl(...ql(n))}catch{return NaN}}Hs.exports=yl});var zt=a((sp,Ds)=>{var bl=f(),Nl=b();function wl(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!bl(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}Ds.exports=Nl(wl)});var he=a((op,eo)=>{var xl=zt();function vl(n,e){return xl(n,e)}eo.exports=vl});var kt=a((ip,to)=>{var Tl=pe(),Sl=he();function Ol(n,e){return Tl(n,Sl(e,-1))}to.exports=Ol});var ro=a((up,no)=>{var Al=He(),El=De(),Ml=ze(),Il=kt();function jl(n,e){try{return Ml(El(Al(Il(n,e),2)))}catch{return NaN}}no.exports=jl});var oo=a((ap,so)=>{var Vl=he(),Ul=He();function Yl(n,e){return Vl(n,Ul(e,-1))}so.exports=Yl});var Pt=a((lp,fo)=>{var Ee=m(),io=p(),uo=d(),Cl=f(),cp=K(),ao=w(),co=v(),zl=De(),kl=he(),lo=se();function et(n,e){Ee(!io(n)&&!io(e),"You must pass two arrays of numbers into the `dot` function!"),Ee(uo(n)&&uo(e),"You must pass two arrays of numbers into the `dot` function!"),ao(n).concat(ao(e)).forEach(s=>{Ee(Cl(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=co(n),r=co(e);if(Ee(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Ee(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return zl(kl(n,e));if(t.length===1&&r.length===2)return lo(e).map(s=>et(n,s));if(t.length===2&&r.length===1)return n.map(s=>et(s,e));if(t.length===2&&r.length===2){let s=lo(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(et(n[i],s[l]));o.push(u)}return o}}fo.exports=et});var po=a((fp,mo)=>{var ho=m(),Pl=d(),$l=p(),_l=v();function Bl(n){return ho(Pl(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),ho(_l(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!$l(e))}mo.exports=Bl});var wo=a((hp,No)=>{var go=m(),qo=p(),yo=d(),Jl=C(),bo=v();function Fl(n,e){go(yo(n)&&yo(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),go(bo(n).length===1&&bo(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Jl([n.length,e.length]);s++)!qo(n[s])&&!qo(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}No.exports=Fl});var Eo=a((mp,Ao)=>{var xo=m(),vo=p(),To=d(),So=f(),Ll=C(),Oo=v();function Rl(n,e){xo(To(n)&&To(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),xo(Oo(n).length===1&&Oo(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Ll([n.length,e.length]);s++)!vo(n[s])&&So(n[s])&&!vo(e[s])&&So(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Ao.exports=Rl});var Io=a((pp,Mo)=>{var Wl=b(),Kl=f();function Ql(n){try{return Kl(n)?Math.exp(n):NaN}catch{return NaN}}Mo.exports=Wl(Ql)});var Uo=a((dp,Vo)=>{var Xl=b();function jo(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*jo(n-1)}catch{return NaN}}Vo.exports=Xl(jo)});var Co=a((gp,Yo)=>{var Gl=f(),Zl=b();function Hl(n){try{let e=JSON.parse(n);return Gl(e)?e:NaN}catch{return NaN}}Yo.exports=Zl(Hl)});var $t=a((qp,zo)=>{var Dl=f(),ef=b();function tf(n){try{let e=JSON.parse(n);return Dl(e)?parseInt(e):NaN}catch{return NaN}}zo.exports=ef(tf)});var $o=a((yp,Po)=>{var R=m(),nf=p(),_t=d(),Bt=f(),ko=v(),rf=$t();function Jt(n,e){return R(!nf(n),"You must pass an array and an index into the `getValueAt` function!"),R(_t(n),"You must pass an array and an index into the `getValueAt` function!"),R(Bt(e)||_t(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),_t(e)&&(R(ko(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{R(Bt(t)&&rf(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),R(e.length<=ko(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Bt(e)?(R(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(R(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Jt(n[e[0]],e.slice(1))):Jt(n,e[0])}Po.exports=Jt});var Ft=a((wp,_o)=>{var bp=k(),Np=P(),sf=f(),of=ie();function uf(n){sf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return of(e,n)}_o.exports=uf});var Jo=a((xp,Bo)=>{var tt=m(),af=p(),cf=f(),lf=Ft();function ff(n){tt(!af(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),tt(cf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),tt(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),tt(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=lf([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}Bo.exports=ff});var Lt=a((Tp,Fo)=>{var vp=m(),hf=Q();function mf(){return hf([...arguments])}Fo.exports=mf});var Ro=a((Sp,Lo)=>{var pf=d(),df=w(),gf=Lt();function qf(){let n=Object.values(arguments).map(r=>pf(r)?df(r):[r]),e=[];return gf(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}Lo.exports=qf});var Wt=a((Ap,Qo)=>{var Me=m(),nt=p(),Wo=f(),Rt=d(),yf=$(),bf=w(),Op=v(),Nf=We();function Ko(n,e){if(Me(!nt(n),"You must pass an array into the `slice` function!"),Me(Rt(n),"You must pass an array into the `slice` function!"),nt(e))return n.slice();Me(Rt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),bf(e).forEach(s=>{Me(nt(s)||Wo(s)&&Nf(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];nt(t)&&(t=yf(0,n.length)),Wo(t)&&(t=[t]);let r=[];return t.forEach(s=>{Me(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Rt(o)?r.push(Ko(n[s],e.slice(1,e.length))):r.push(n[s])}),r}Qo.exports=Ko});var Ho=a((Ep,Zo)=>{var B=m(),wf=p(),xf=d(),Kt=f(),vf=w(),Tf=v(),rt=Wt(),Sf=Pt(),Xo=pe(),Go=he(),Qt=pt(),W=$();function Xt(n){B(!wf(n),"You must pass a square 2D array into the `inverse` function!"),B(xf(n),"You must pass a square 2D array into the `inverse` function!"),vf(n).forEach(t=>B(Kt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=Tf(n);if(B(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return B(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;B(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return Go(u,1/i)}else if(e[0]>1){let t=(r,s)=>Kt(r)||Kt(s)?Go(r,s):Sf(r,s);for(let r=1;r<e[0]-1;r++)try{let s=rt(n,[W(0,r),W(0,r)]),o=rt(n,[W(0,r),W(r,e[0])]),i=rt(n,[W(r,e[0]),W(0,r)]),u=rt(n,[W(r,e[0]),W(r,e[0])]),l=Xt(s),c=Xt(Xo(u,t(-1,t(t(i,l),o)))),g=Xo(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),j=t(-1,t(t(c,i),l)),O=c;return Qt(Qt(g,q,1),Qt(j,O,1),0)}catch{}B(!1,"This matrix cannot be inverted!")}}Zo.exports=Xt});var ei=a((Mp,Do)=>{var Of=b(),Gt=f();function Af(n,e,t){try{return Gt(n)?Gt(e)?Gt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}Do.exports=Of(Af)});var ri=a((Ip,ni)=>{var ti=f(),Ef=p(),Mf=b();function If(n,e){try{return e=Ef(e)?Math.E:e,ti(n)?ti(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}ni.exports=Mf(If)});var oi=a((jp,si)=>{var Ie=f(),jf=b();function Vf(n,e,t,r,s){try{return Ie(n)?Ie(e)?Ie(t)?Ie(r)?Ie(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}si.exports=jf(Vf)});var ui=a((zp,ii)=>{var Vp=m(),Up=p(),Yp=d(),Cp=f(),Uf=w(),Yf=Z(),Cf=we();function zf(n){try{let e=Uf(n),t=Cf(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=Yf(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}ii.exports=zf});var li=a((kp,ci)=>{var kf=w(),Pf=Pe(),$f=Q(),ai=Z();function _f(n){try{if(n.length===0)return NaN;let e=kf(n);if(e.length===0)return NaN;let t={},r=$f(e);r.forEach(u=>{t[u]=Pf(e,u)});let s=ai(r,(u,l)=>t[l]-t[u]),o=s[0],i=ai(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}ci.exports=_f});var pi=a((_p,mi)=>{var Bf=p(),Pp=k(),$p=P(),{random:fi}=X(),Jf=ie(),Ff=f();function hi(){let n=fi(),e=fi();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function Lf(n){if(Bf(n))return hi();Ff(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(hi());return Jf(e,n)}mi.exports=Lf});var gi=a((Fp,di)=>{var Bp=k(),Jp=P(),Rf=ie(),Wf=f();function Kf(n){Wf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Rf(e,n)}di.exports=Kf});var bi=a((Lp,yi)=>{var qi=d(),Qf=f(),st=m(),Xf=p();function Zt(n,e){if(st(qi(n),"The `permute` function only works on arrays!"),Xf(e)&&(e=n.length),st(Qf(e),"`r` must be a whole number!"),e>n.length)return Zt(n);if(e<=0)return[[]];if(st(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{st(!qi(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Zt(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}yi.exports=Zt});var vi=a((Rp,xi)=>{var Gf=d(),Zf=v(),Ni=Be(),wi=D();function Hf(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(Gf(e)){let t=Zf(e);t.length===1?new wi(e).print():t.length==2?new Ni(e).print():console.log(e)}else e instanceof Ni||e instanceof wi?e.print():console.log(e)})}xi.exports=Hf});var Si=a((Wp,Ti)=>{var Df=f(),eh=b();function th(n){try{return Df(n)?Math.round(n):NaN}catch{return NaN}}Ti.exports=eh(th)});var Ht=a((Kp,Ei)=>{var Oi=m(),nh=f(),Ai=d(),rh=oe();function sh(n,e,t){Oi(Ai(n),"The first argument passed into the `setValueAt` function must be an array!"),nh(e)&&(e=[e]),Oi(Ai(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=rh(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}Ei.exports=sh});var Ii=a((Qp,Mi)=>{var oh=f(),ih=b();function uh(n){try{return oh(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Mi.exports=ih(uh)});var Vi=a((Xp,ji)=>{var ah=f(),ch=b();function lh(n){try{return ah(n)?Math.sin(n):NaN}catch{return NaN}}ji.exports=ch(lh)});var Yi=a((Gp,Ui)=>{var fh=ke();function hh(n){return fh(n)}Ui.exports=hh});var zi=a((Zp,Ci)=>{var mh=f(),ph=b();function dh(n){try{return mh(n)?Math.tan(n):NaN}catch{return NaN}}Ci.exports=ph(dh)});var ot=a((Hp,Pi)=>{var ki=z();function gh(n,e){assert(ki(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function qh(n,e){assert(ki(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}Pi.exports={timeSync:gh,timeAsync:qh}});var Bi=a((Dp,_i)=>{var $i=m(),yh=d(),bh=z(),Nh=P(),wh=ye(),xh=Ht(),vh=w();function Th(n,e){$i(yh(n),"The first argument passed into the `where` function must be an array!"),$i(bh(e),"The second argument passed into the `where` function must be a function!");let t=vh(n).length,r=Nh(n,e),s=[],o=0,i=!1;for(;!i;){let u=wh(r,!0);u?(s[o]=u,r=xh(r,u,null),o++):i=!0}return o===0?null:s}_i.exports=Th});var Sh=a((ed,Dt)=>{var je={abs:ft(),add:pe(),append:pt(),apply:P(),arccos:Vn(),arcsin:Yn(),arctan:zn(),argmax:Rn(),argmin:Qn(),assert:m(),ceil:Gn(),chop:Dn(),clamp:tr(),cohensd:ur(),combine:fr(),copy:oe(),correl:Nr(),cos:xr(),count:Pe(),covariance:yt(),DataFrame:Be(),diff:Xs(),distance:ro(),divide:oo(),dot:Pt(),dropMissing:po(),dropMissingPairwise:wo(),dropNaN:we(),dropNaNPairwise:Eo(),exp:Io(),factorial:Uo(),flatten:w(),float:Co(),floor:We(),getValueAt:$o(),identity:Jo(),indexOf:ye(),int:$t(),intersect:Ro(),inverse:Ho(),isArray:d(),isBoolean:G(),isEqual:K(),isFunction:z(),isNumber:f(),isObject:Je(),isString:Y(),isUndefined:p(),lerp:ei(),log:ri(),map:oi(),MathError:re(),max:C(),mean:be(),median:ui(),min:Ue(),mode:li(),multiply:zt(),ndarray:k(),normal:pi(),ones:gi(),permute:bi(),pow:He(),print:vi(),random:X().random,range:$(),reshape:ie(),reverse:de(),round:Si(),scale:he(),seed:X().seed,Series:D(),set:Q(),setValueAt:Ht(),shape:v(),shuffle:Et(),sign:Ii(),sin:Vi(),slice:Wt(),sort:Z(),sqrt:ze(),std:ke(),stdev:Yi(),subtract:kt(),sum:De(),tan:zi(),time:ot().timeSync,timeSync:ot().timeSync,timeAsync:ot().timeAsync,transpose:se(),union:Lt(),variance:Ye(),vectorize:b(),where:Bi(),zeros:Ft(),dump:function(){Object.keys(je).forEach(n=>{typeof global<"u"&&(global[n]=je[n]),typeof window<"u"&&(window[n]=je[n])})}};typeof Dt<"u"&&(Dt.exports=je);typeof window<"u"&&(window.JSMathTools=je)});Sh();})();
