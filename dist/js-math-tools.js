(()=>{var Ke=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var c=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=c((yl,It)=>{function Yo(n){return typeof n=="number"&&!isNaN(n)}It.exports=Yo});var m=c((ql,St)=>{St.exports=function(n,e){if(!n)throw new Error(e)}});var p=c((bl,Et)=>{function Uo(n){return n===null||typeof n=="undefined"}Et.exports=Uo});var d=c((Nl,Mt)=>{function ko(n){return n instanceof Array}Mt.exports=ko});var T=c((xl,kt)=>{var jt=m(),zo=p(),Yt=d();function Ut(n){jt(!zo(n),"You must pass one array into the `flatten` function!"),jt(Yt(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){Yt(t)?e=e.concat(Ut(t)):e.push(t)}),e}kt.exports=Ut});var V=c((wl,zt)=>{var Co=T(),$o=h();function Po(n){try{let e=Co(n),t=-1/0;for(let r=0;r<e.length;r++){if(!$o(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}zt.exports=Po});var B=c((vl,Ct)=>{function Vo(n){return typeof n=="function"}Ct.exports=Vo});var b=c((Tl,$t)=>{var Le=m(),Bo=p(),We=d(),_o=V(),Ro=B();function Jo(n){return Le(!Bo(n),"You must pass a function into the `vectorize` function!"),Le(Ro(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>We(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>We(arguments[i])).map(i=>arguments[i].length),o=_o(s);s.forEach(i=>{Le(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(a=>We(arguments[a])?arguments[a][i]:arguments[a]);r.push(e(...u))}return r}else return n(...arguments)}}$t.exports=Jo});var De=c((Ol,Pt)=>{var Ko=h(),Lo=b();function Wo(n){try{return Ko(n)?Math.abs(n):NaN}catch{return NaN}}Pt.exports=Lo(Wo)});var se=c((Al,Vt)=>{var Do=h(),Ho=b();function Fo(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Do(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}Vt.exports=Ho(Fo)});var A=c((Il,Rt)=>{var ye=m(),Xo=p(),Bt=d(),Go=V();function _t(n){ye(!Xo(n),"You must pass an array into the `shape` function!"),ye(Bt(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>Bt(r));if(t.indexOf(!0)>-1){ye(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Go(r);r.forEach(function(o){ye(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(_t(n[0]))}return e}Rt.exports=_t});var oe=c((Sl,Kt)=>{var Jt=m(),Qo=p(),Zo=d();function ei(n){Jt(!Qo(n),"You must pass an array into the `reverse` function!"),Jt(Zo(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}Kt.exports=ei});var U=c((El,Wt)=>{var ie=m(),ti=p(),ni=d(),ri=h(),si=T(),ue="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function Lt(n,e){if(e||(ie(!ti(n),ue),ni(n)||(n=[n]),n=si(n),ie(n.length>0,ue),n.forEach(t=>{ie(ri(t),ue),ie(parseInt(t)===t,ue),ie(t>=0,ue)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(Lt(n.slice(1),!0));return t}}Wt.exports=Lt});var D=c((Ml,Ht)=>{var He=m(),oi=p(),ii=d(),ui=A(),Dt=oe(),ai=U();function ci(n){He(!oi(n),"You must pass an array into the `transpose` function!"),He(ii(n),"You must pass an array into the `transpose` function!");let e=ui(n);if(He(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return Dt(n);if(e.length===2){let t=ai(Dt(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}Ht.exports=ci});var Xe=c((jl,Zt)=>{var j=m(),Ft=p(),Xt=d(),li=h(),Gt=A(),Fe=D();function Qt(n,e,t=0){j(!Ft(n),"You must pass two arrays into the `append` function!"),j(!Ft(e),"You must pass two arrays into the `append` function!"),j(Xt(n),"You must pass two arrays into the `append` function!"),j(Xt(e),"You must pass two arrays into the `append` function!"),j(li(t),"The `axis` argument to the `append` function must be 0 or 1!"),j(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),j(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=Gt(n),s=Gt(e);j(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),j(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&j(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(j(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return Fe(Qt(Fe(n),Fe(e),0))}}Zt.exports=Qt});var k=c((Yl,en)=>{var fi=b();function hi(n,e){try{return e(n)}catch{return NaN}}en.exports=fi(hi)});var nn=c((Ul,tn)=>{var mi=h(),di=b();function pi(n){try{return mi(n)?Math.acos(n):NaN}catch{return NaN}}tn.exports=di(pi)});var sn=c((kl,rn)=>{var gi=h(),yi=b();function qi(n){try{return gi(n)?Math.asin(n):NaN}catch{return NaN}}rn.exports=yi(qi)});var un=c((zl,on)=>{var bi=h(),Ni=b();function xi(n){try{return bi(n)?Math.atan(n):NaN}catch{return NaN}}on.exports=Ni(xi)});var H=c(($l,cn)=>{var Cl=d();function an(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!an(n[u],e[u]))return!1}return!0}}}cn.exports=an});var ae=c((Pl,dn)=>{var ln=m(),wi=p(),fn=d(),Ge=A(),hn=H();function mn(n,e,t){if(ln(!wi(n),"You must pass an array and a value into the `indexOf` function!"),ln(fn(n),"You must pass an array and a value into the `indexOf` function!"),Ge(n).length===1||fn(e)&&hn(Ge(n[0]),Ge(e))){for(let r=0;r<n.length;r++){let s=n[r];if(hn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=mn(s,e);if(o)return[r].concat(o)}return null}dn.exports=mn});var gn=c((Vl,pn)=>{var vi=ae(),Ti=V();function Oi(n){try{return vi(n,Ti(n))}catch{return NaN}}pn.exports=Oi});var qe=c((Bl,yn)=>{var Ai=T(),Ii=h();function Si(n){try{let e=Ai(n),t=1/0;for(let r=0;r<e.length;r++){if(!Ii(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}yn.exports=Si});var bn=c((_l,qn)=>{var Ei=ae(),Mi=qe();function ji(n){try{return Ei(n,Mi(n))}catch{return NaN}}qn.exports=ji});var xn=c((Rl,Nn)=>{var Yi=h(),Ui=b();function ki(n){try{return Yi(n)?Math.ceil(n):NaN}catch{return NaN}}Nn.exports=Ui(ki)});var Tn=c((Jl,vn)=>{var zi=p(),Ci=De(),$i=b(),wn=h();function Pi(n,e){try{if(!wn(n))return NaN;if(zi(e))e=1e-10;else if(!wn(e))return NaN;return Ci(n)<e?0:n}catch{return NaN}}vn.exports=$i(Pi)});var An=c((Kl,On)=>{var Qe=h(),Vi=b();function Bi(n,e,t){try{return Qe(n)?Qe(e)?Qe(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}On.exports=Vi(Bi)});var ce=c((Ll,In)=>{var _i=h(),Ri=T();function Ji(n){try{let e=Ri(n),t=0;for(let r=0;r<e.length;r++){if(!_i(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}In.exports=Ji});var be=c((Wl,Sn)=>{var Ki=ce(),Li=T(),Wi=h();function Di(n){try{let e=Li(n),t=Ki(e),r=0;for(let s=0;s<e.length;s++){if(!Wi(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}Sn.exports=Di});var Yn=c((Dl,jn)=>{var En=ce(),Mn=be();function Hi(n,e){try{let t=En(n),r=En(e),s=Math.sqrt((Mn(n)+Mn(e))/2);return(t-r)/s}catch{return NaN}}jn.exports=Hi});var Cn=c((Hl,zn)=>{var Un=d(),Fi=h(),Ne=m();function kn(n,e){if(Ne(Un(n),"The `combine` function only works on arrays!"),Ne(Fi(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ne(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ne(!Un(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;kn(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}zn.exports=kn});var F=c((Xl,$n)=>{var Fl=m(),Xi=p(),Gi=d();function Ze(n){if(typeof n=="object"){if(Xi(n))return n;if(Gi(n))return n.map(Ze);{let e={};return Object.keys(n).forEach(function(t){e[t]=Ze(n[t])}),e}}else return n}$n.exports=Ze});var et=c((Gl,Bn)=>{var Pn=ce(),Vn=p();function Qi(n,e){try{let t=Pn(n),r=Pn(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(Vn(n[i]))return NaN;if(Vn(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}Bn.exports=Qi});var xe=c((Ql,_n)=>{var Zi=h(),eu=b();function tu(n){try{return Zi(n)?Math.sqrt(n):NaN}catch{return NaN}}_n.exports=eu(tu)});var we=c((Zl,Rn)=>{var nu=xe(),ru=be();function su(n){try{return nu(ru(n))}catch{return NaN}}Rn.exports=su});var Ln=c((ef,Kn)=>{var ou=et(),Jn=we();function iu(n,e){try{return ou(n,e)/(Jn(n)*Jn(e))}catch{return NaN}}Kn.exports=iu});var Dn=c((tf,Wn)=>{var uu=h(),au=b();function cu(n){try{return uu(n)?Math.cos(n):NaN}catch{return NaN}}Wn.exports=au(cu)});var K=c((nf,Fn)=>{var Hn=m(),lu=p(),fu=d(),hu=T();function mu(n){Hn(!lu(n),"You must pass an array into the `set` function!"),Hn(fu(n),"You must pass an array into the `set` function!");let e=[],t={};return hu(n).forEach(r=>{let s=typeof r=="undefined"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Fn.exports=mu});var tt=c((rf,er)=>{var Xn=m(),Gn=p(),Qn=d(),Zn=T(),du=H(),pu=K();function gu(n,e){Xn(!Gn(n),"You must pass an array and some items to count into the `count` function!"),Xn(Qn(n),"You must pass an array and some items to count into the `count` function!");let t=Zn(n);return e=Gn(e)?pu(n):e,Qn(e)?Zn(e).map(function(r){let s=t.filter(o=>du(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}er.exports=gu});var X=c((sf,tr)=>{var nt=m(),rt=p(),st=h(),yu=oe();function qu(n,e,t=1){nt(!rt(n)&&!rt(e)&&!rt(t),"You must pass two numbers and optionally a step value to the `range` function!"),nt(st(n)&&st(e)&&st(t),"You must pass two numbers and optionally a step value to the `range` function!"),nt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=yu(s)),s}tr.exports=qu});var ve=c((of,nr)=>{function bu(n){return typeof n=="string"}nr.exports=bu});var G=c((uf,sr)=>{var ot=m(),rr=p(),Nu=d(),xu=B();function wu(n,e){return n<e?-1:n>e?1:0}function vu(n,e){rr(e)&&(e=wu),ot(!rr(n),"You must pass an array into the `sort` function!"),ot(Nu(n),"You must pass an array into the `sort` function!"),ot(xu(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}sr.exports=vu});var Te=c((af,or)=>{function Tu(n){return typeof n=="boolean"}or.exports=Tu});var Ie=c((lf,lr)=>{var q=m(),Oe=d(),L=p(),Q=A(),Ae=D(),le=X(),it=h(),fe=ve(),cf=k(),Ou=B(),Au=U(),ut=F(),Iu=K(),ir=oe(),ur=G(),ar=Te();function Su(n){return it(n)&&parseInt(n)===n}function Eu(n){return Su(n)&&n>=0}function cr(n,e){q(it(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var z=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){q(Oe(r),"The new values must be a 1-dimensional array!");let s=Q(r);q(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(le(t._index.length,s[0]).map(o=>"row"+cr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){q(Oe(r),"The new index must be a 1-dimensional array of strings!"),q(r.length===t.shape[0],"The new index must be the same length as the old index!"),q(Q(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{q(fe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=Q(e);q(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return Q(this.values)}isEmpty(){return this.values.filter(t=>!L(t)).length===0}clear(){let e=this,t=e.copy();return t.values=Au(t.shape),t.index=e.index,t}get(e){let t=this;(fe(e)||it(e))&&(e=[e]);let r=Iu((e||[]).map(s=>typeof s));return q(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&q(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(q(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),q(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),L(e)||(e=e.map(s=>{if(typeof s=="string")return q(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return q(s>=0,`Index ${s} is out of bounds!`),q(parseInt(s)===s,"Indices must be integers!"),q(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;L(e)&&(e=t.index),q(Oe(e),"The `indices` array must be a 1-dimensional array of strings."),q(Q(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),q(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{q(fe(o),"The `indices` array must contain only strings."),q(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new z(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;L(e)&&(e=le(0,r[0])),q(Oe(e),"The `indices` array must be 1-dimensional array of whole numbers."),q(Q(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),q(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{q(Eu(o),"The `indices` array must be a 1-dimensional array of whole numbers."),q(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new z(ir(e.values));return t.index=ir(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=le(0,e.shape[0]).map(r=>"row"+cr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new z(ut(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){q(Ou(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>L(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window=="undefined"?20:10;if(t.index.length>r){t=t.get(le(0,r/2).concat(le(t.index.length-r/2,t.index.length)));let o=ut(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){q(ar(e)||fe(e)||L(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;L(e)&&(t=!0),fe(e)&&(e=e.trim().toLowerCase(),q(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),ar(e)&&(t=e);let r=this,s=Ae([r.values,r.index]);s=Ae(ur(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new z(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=Ae([e.values,e.index]);t=Ae(ur(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new z(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=ut(r.index),o=[],i=r.values.filter((u,a)=>{let f=e(u,a,r.values);return f||o.push(r.index[a]),f});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new z,r.name=t.name,r):(r.values=i,r.index=s,r)}};lr.exports=z});var Z=c((ff,pr)=>{var he=m(),fr=d(),hr=h(),Mu=A(),mr=T(),ju=n=>n.reduce((e,t)=>e*t);function dr(n,e){if(he(fr(n),"The first argument passed into the `reshape` function must be an array!"),hr(e)&&(e=[e]),he(fr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),he(Mu(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{he(hr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return mr(n);let t=mr(n);he(ju(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(dr(i,e.slice(1)))}return r}pr.exports=dr});var ee=c((df,vr)=>{var hf=U(),mf=k(),gr=p(),Yu=m(),yr=h(),qr=F(),Uu=Z(),br=Math.pow(2,64),N=[];xr(parseInt(Math.random()*br));function ku(n,e){n=I(n);function t(){n+=I("0x9e3779b97f4a7c15");let s=qr(n);return s=(s^s>>30n)*I("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*I("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function I(n){return BigInt.asUintN(64,BigInt(n))}function Nr(n,e){return n=I(n),e=BigInt(e),I(I(n<<e)|I(n>>I(64n-e)))}function xr(n){if(gr(n))return qr(N);{Yu(yr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=ku(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function wr(){let n=I(Nr(N[0]+N[3],23)+N[0]),e=I(N[1]<<17n);return N[2]=I(N[2]^N[0]),N[3]=I(N[3]^N[1]),N[1]=I(N[1]^N[2]),N[0]=I(N[0]^N[3]),N[2]=I(N[2]^e),N[3]=Nr(N[3],45),parseInt(n)/br}function zu(n){if(gr(n))return wr();yr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(wr());return Uu(e,n)}vr.exports={random:zu,seed:xr}});var Se=c((pf,Or)=>{var Tr=m(),Cu=d(),$u=p(),Pu=h(),Vu=A();function Bu(n){return Tr(Cu(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Tr(Vu(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!$u(e)&&Pu(e))}Or.exports=Bu});var at=c((qf,Er)=>{var l=m(),O=d(),v=p(),x=A(),me=D(),M=X(),C=h(),S=ve(),gf=k(),Ar=B(),_u=U(),E=F(),_=Ie(),te=T(),Ir=H(),Ru=V(),yf=qe(),Sr=K(),W=Te(),{random:Ju}=ee(),Ku=G(),Lu=Se();function Wu(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function Du(n){return C(n)&&parseInt(n)===n}function Ee(n){return Du(n)&&n>=0}function Hu(n){return n instanceof Object&&!O(n)}function ne(n){return n instanceof _}function Fu(n){let e=/"(.*?)"/g,t=n.match(e),r=n.slice();return t&&t.forEach(s=>{r=r.replace(s,`\u201C${s.substring(1,s.length-1)}\u201D`)}),e=/'(.*?)'/g,t=n.match(e),t&&t.forEach(s=>{r=r.replace(s,`\u2018${s.substring(1,s.length-1)}\u2019`)}),`"${r}"`}function Me(n,e){l(C(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var w=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){l(O(r),"The new values must be a 2-dimensional array!");let s=x(r);l(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(M(t._index.length,s[0]).map(o=>"row"+Me(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(M(t._columns.length,s[1]).map(o=>"col"+Me(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){l(O(r),"The new columns list must be a 1-dimensional array of strings!"),l(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),l(x(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(s=>typeof s=="string"?s:JSON.stringify(s)||s.toString()),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){l(O(r),"The new index must be a 1-dimensional array of strings!"),l(r.length===t.shape[0],"The new index must be the same length as the old index!"),l(x(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(s=>typeof s=="string"?s:JSON.stringify(s)||s.toString()),t._index=r}}),l(v(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(O(e)){let r=x(e);l(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=me(r);let s=x(t.values);t._index=M(0,s[0]).map(o=>"row"+Me(o,(s[0]-1).toString().length))}}static async fromCSV(e,t){t=t||{};let r;try{r=await(await fetch(e)).text()}catch{}try{let y=Ke("fs"),P=t.encoding||"utf8";r=y.readFileSync(e,P)}catch{}let o=r.split(`
`).filter(y=>y.length>0).map(y=>{let P={},_e=/"(.*?)"/g;return(y.match(_e)||[]).forEach(Y=>{let Re=Wu(32);y=y.replaceAll(Y,Re),P[Re]=Y}),y.split(",").map((Y,Re)=>{Y=P[Y]||Y;try{let Je=JSON.parse(Y);return O(Je)?Y:Je}catch{return Y}})}),i=Ru(o.map(y=>y.length));o=o.map(y=>(y.length=i,y));let u,a,f=W(t.hasHeaderRow)?t.hasHeaderRow:!0,g=W(t.hasIndexColumn)?t.hasIndexColumn:!1;return f&&(u=o.shift()),g&&(a=o.map(y=>y.shift()),u&&u.shift()),o=new w(o),u&&(o.columns=u),a&&(o.index=a),o}get shape(){return x(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Sr(this.values).filter(t=>!v(t)).length===0}clear(){let e=this,t=new w(_u(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(S(e)||C(e))&&(e=[e]),(S(t)||C(t))&&(t=[t]);let s=Sr((e||[]).concat(t||[]).map(o=>typeof o));return l(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&l(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(l(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),l(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),v(e)||(e=e.map(o=>{if(typeof o=="string")return l(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return l(o>=0,`Index ${o} is out of bounds!`),l(parseInt(o)===o,"Row numbers must be integers!"),l(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),v(t)||(t=t.map(o=>{if(typeof o=="string")return l(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return l(o>=0,`Column ${o} is out of bounds!`),l(parseInt(o)===o,"Column numbers must be integers!"),l(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;v(e)&&(e=r.index),v(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),l(O(e)&&O(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(x(e).length===1&&x(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(e.length>0,"The `rows` array must contain at least one row name."),l(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{l(S(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{l(S(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return te(s)[0];if(e.length===1){let i=new _(te(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new _(te(s));return i.name=t[0],i.index=e,i}let o=new w(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;v(e)&&(e=M(0,s[0])),v(t)&&(t=M(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),l(O(e)&&O(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(x(e).length===1&&x(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(e.length>0,"The `rowIndices` array must contain at least one index."),l(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{l(Ee(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{l(Ee(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new w(me(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=M(0,e.shape[0]).map(r=>"row"+Me(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new w;let t=new w(E(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;v(t)?(s=e,l(!O(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,l(S(r),"When using two parameters for the `assign` method, the first parameter must be a string."),l(ne(s)||O(s)&&x(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),l(Hu(s)||ne(s)||O(s)&&x(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(ne(s)){let i={};return l(o.isEmpty()||Ir(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(O(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(a=>{let f=s[a];if(l(O(f),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),l(x(f).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=me([f]),i.columns=[a],u=i.shape;else{l(f.length===u[0],`Column "${a}" in the new data is not the same length as the other columns in the original DataFrame.`);let g=i.columns.indexOf(a);g<0&&(i.columns.push(a),g=i.columns.indexOf(a)),i.values.forEach((y,P)=>{y[g]=f[P]})}}),i}}apply(e,t){t=t||0,l(Ar(e),"The first parameter to the `apply` method must be a function."),l(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=me(r.values).map((i,u)=>e(i,r.columns[u]));if(x(o).length===1){let i=new _(o);return i.index=E(r.columns),i}else{let i=new w(me(o));return i.index=E(r.index),i.columns=E(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>e(o,r.index[i]));if(x(s).length===1){let o=new _(s);return o.index=E(r.index),o}else{let o=new w(s);return o.index=E(r.index),o.columns=E(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,l(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,l(Ee(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",l(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(a){if(r>0){let f=0;for(let g=0;g<a.length;g++){let y=a[g];if(v(y)&&f++,f>=r)return[]}}else if(t==="any")for(let f=0;f<a.length;f++){let g=a[f];if(v(g))return[]}else if(t==="all"){for(let f=0;f<a.length;f++){let g=a[f];if(!v(g))return a}return[]}return a}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let a=i.values.map(s).filter(g=>g.length>0);if(x(a).length<2)return new w;i.values=a;let f=i.get(null,u);if(v(f))return new w;S(f)&&(f=[f]),ne(f)&&(f=f.values),i.index=f,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let a=i.values.map(s).filter(g=>g.length>0);if(x(a).length<2)return new w;i.values=a;let f=i.get(null,u);if(v(f))return new w;S(f)&&(f=[f]),ne(f)&&(f=f.values),i.index=f,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,l(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,l(Ee(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",l(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(a){let f=Lu(a);return r>0?a.length-f.length<r:t==="any"?f.length===a.length:t==="all"?f.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let a=i.index.filter(f=>{let g=i.get(f,null).values;return s(g)});return a.length>0?i.get(a,null):new w}else if(e===1){let a=i.columns.filter(f=>{let g=i.get(null,f).values;return s(g)});return a.length>0?i.get(null,a):new w}return i}drop(e,t){let r=this;v(e)&&(e=[]),v(t)&&(t=[]),(S(e)||C(e))&&(e=[e]),(S(t)||C(t))&&(t=[t]),l(O(e),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),l(O(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),l(x(e).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),l(x(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;r.index.forEach((u,a)=>{e.indexOf(u)<0&&e.indexOf(a)<0&&(s||(s=[]),s.push(u))}),r.columns.forEach((u,a)=>{t.indexOf(u)<0&&t.indexOf(a)<0&&(o||(o=[]),o.push(u))});let i=r.get(s,o);if(ne(i)){let u=new w;u=u.assign(i),r.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){let e=this,t={};return e.values.forEach((r,s)=>{let o={};r.forEach((i,u)=>{o[e.columns[u]]=i}),t[e.index[s]]=o}),t}toCSVString(e){let t=this;e=v(e)?{}:e;let r=W(e.hasHeaderRow)?e.hasHeaderRow:!0,s=W(e.hasIndexColumn)?e.hasIndexColumn:!1,o,i,u;return r&&s?(o=["(index)"].concat(E(t.index)),i=E(t.columns),u=[i].concat(t.values).map((a,f)=>[o[f]].concat(a))):!r&&s?(o=E(t.index),u=t.values.map((a,f)=>[o[f]].concat(a))):r&&!s?(i=E(t.columns),u=[i].concat(t.values)):!r&&!s&&(u=t.values),u=u.map((a,f)=>a.map(g=>S(g)?Fu(g):g).join(",")).join(`
`),u}toCSV(e,t){let r=this,s=r.toCSVString(t);try{let o=e;if(e.includes("/")){let u=e.split("/");o=u[u.length-1]}let i=document.createElement("a");i.href=`data:text/csv;charset=utf-8,${encodeURIComponent(s)}`,i.download=o,i.dispatchEvent(new MouseEvent("click"))}catch{}try{let o=Ke("fs"),i=Ke("path");o.writeFileSync(i.resolve(e),s,"utf8")}catch{}return r}print(){let e=this;if(Ir(e.shape,[0]))return console.table({}),e;let t=typeof window=="undefined"?20:10,r=parseInt(t/2),s=typeof window=="undefined"?Math.floor(process.stdout.columns/24)-1:10,o=parseInt(s/2),i=t>e.index.length?null:M(0,r).concat(M(e.index.length-r,e.index.length)),u=s>e.columns.length?null:M(0,o).concat(M(e.columns.length-o,e.columns.length)),a=e.get(i,u);return a instanceof _&&(e.shape[0]===1?(a=new w([a.values]),a.index=e.index,a.columns=new _(e.columns).get(u).values):e.shape[1]===1&&(a=new w([a.values]).transpose(),a.index=new _(e.index).get(i).values,a.columns=e.columns)),t<=e.index.length&&(a._index.splice(r,0,"..."),a._values.splice(r,0,M(0,a.columns.length).map(f=>"..."))),s<=e.columns.length&&(a._columns.splice(o,0,"..."),a._values=a._values.map(f=>(f.splice(o,0,"..."),f))),console.table(a.toObject()),e}sort(e,t){let s=this.copy(),o=Ju().toString();return s=s.assign(o,s.index),v(e)&&(e=[o],t=[!0]),(C(e)||S(e))&&(e=[e],(W(t)||S(t))&&(t=[t])),l(O(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),l(x(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),v(t)&&(t=M(0,e.length).map(i=>!0)),l(O(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),l(x(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),l(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(i=>{if(l(S(i)||C(i),"Column references can either be column names (as strings) or column indices (as whole numbers)."),S(i)){let u=s.columns.indexOf(i);return l(u>-1,`The column "${i}" does not exist!`),u}if(C(i))return l(parseInt(i)===i,"Column indices must be whole numbers!"),l(i>=0,`The column index ${i} is out of bounds!`),l(i<s.columns.length,`The index ${i} is out of bounds!`),i}),t=t.map(i=>{if(l(S(i)||W(i),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),S(i)){let u=i.trim().toLowerCase();return l(u==="ascending"||u==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),u==="ascending"}if(W(i))return i}),s.values=Ku(s.values,(i,u)=>{let a=0;for(;i[e[a]]===u[e[a]]&&a<e.length;)a++;let f=t[a];if(i[e[a]]===u[e[a]])return 0;if(i[e[a]]<u[e[a]])return f?-1:1;if(i[e[a]]>u[e[a]])return f?1:-1}),s.index=te(s.get(null,o).values),s=s.dropColumns(o),s}sortByIndex(){return this.sort()}filter(e,t){l(Ar(e),"The `filter` method takes a single parameter: a function that is used to filter the values."),v(t)&&(t=0),l(t===0||t===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=this.copy();if(s.isEmpty())return s;let o=E(s.index),i=E(s.columns);if(t===0){let u=Math.random().toString();s=s.assign(u,s.index);let a=s.values.filter((f,g)=>{let y=e(f,g,s);return y||o.splice(g,1),y});if(te(a).length===0)return new w;x(a).length===1&&(a=[a]),s.values=a,s.index=s.get(null,u).values,s=s.drop(null,u)}else if(t===1){s=s.transpose();let u=Math.random().toString();s=s.assign(u,s.index);let a=s.values.filter((f,g)=>{let y=e(f,g,s);return y||i.splice(g,1),y});if(te(a).length===0)return new w;x(a).length===1&&(a=[a]),s.values=a,s.index=s.get(null,u).values,s=s.drop(null,u),s=s.transpose()}return s}shuffle(e){v(e)&&(e=0),l(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined.");let t=this;return t.get(e===0?shuffle(t.index):null,e===1?shuffle(t.columns):null)}};Er.exports=w});var kr=c((bf,Ur)=>{var Mr=m(),jr=d(),Yr=T();function Xu(n,e){Mr(jr(n),"You must pass two arrays into the `diff` function!"),Mr(jr(e),"You must pass two arrays into the `diff` function!");let t=Yr(n),r=Yr(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}Ur.exports=Xu});var je=c((Nf,Cr)=>{var zr=h(),Gu=b();function Qu(n,e){try{return zr(n)?zr(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}Cr.exports=Gu(Qu)});var Ye=c((xf,$r)=>{var Zu=se(),ea=T();function ta(n){try{return Zu(...ea(n))}catch{return NaN}}$r.exports=ta});var ct=c((wf,Pr)=>{var na=h(),ra=b();function sa(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!na(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}Pr.exports=ra(sa)});var re=c((vf,Vr)=>{var oa=ct();function ia(n,e){return oa(n,e)}Vr.exports=ia});var lt=c((Tf,Br)=>{var ua=se(),aa=re();function ca(n,e){return ua(n,aa(e,-1))}Br.exports=ca});var Rr=c((Of,_r)=>{var la=je(),fa=Ye(),ha=xe(),ma=lt();function da(n,e){try{return ha(fa(la(ma(n,e),2)))}catch{return NaN}}_r.exports=da});var Kr=c((Af,Jr)=>{var pa=re(),ga=je();function ya(n,e){return pa(n,ga(e,-1))}Jr.exports=ya});var ft=c((Sf,Xr)=>{var de=m(),Lr=p(),Wr=d(),qa=h(),If=H(),Dr=T(),Hr=A(),ba=Ye(),Na=re(),Fr=D();function Ue(n,e){de(!Lr(n)&&!Lr(e),"You must pass two arrays of numbers into the `dot` function!"),de(Wr(n)&&Wr(e),"You must pass two arrays of numbers into the `dot` function!"),Dr(n).concat(Dr(e)).forEach(s=>{de(qa(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Hr(n),r=Hr(e);if(de(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),de(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return ba(Na(n,e));if(t.length===1&&r.length===2)return Fr(e).map(s=>Ue(n,s));if(t.length===2&&r.length===1)return n.map(s=>Ue(s,e));if(t.length===2&&r.length===2){let s=Fr(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let a=0;a<s.length;a++)u.push(Ue(n[i],s[a]));o.push(u)}return o}}Xr.exports=Ue});var Zr=c((Ef,Qr)=>{var Gr=m(),xa=d(),wa=p(),va=A();function Ta(n){return Gr(xa(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Gr(va(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!wa(e))}Qr.exports=Ta});var os=c((Mf,ss)=>{var es=m(),ts=p(),ns=d(),Oa=V(),rs=A();function Aa(n,e){es(ns(n)&&ns(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),es(rs(n).length===1&&rs(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Oa([n.length,e.length]);s++)!ts(n[s])&&!ts(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}ss.exports=Aa});var hs=c((jf,fs)=>{var is=m(),us=p(),as=d(),cs=h(),Ia=V(),ls=A();function Sa(n,e){is(as(n)&&as(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),is(ls(n).length===1&&ls(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Ia([n.length,e.length]);s++)!us(n[s])&&cs(n[s])&&!us(e[s])&&cs(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}fs.exports=Sa});var ds=c((Yf,ms)=>{var Ea=b(),Ma=h();function ja(n){try{return Ma(n)?Math.pow(Math.E,n):NaN}catch{return NaN}}ms.exports=Ea(ja)});var ys=c((Uf,gs)=>{var Ya=b();function ps(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*ps(n-1)}catch{return NaN}}gs.exports=Ya(ps)});var bs=c((kf,qs)=>{var Ua=h(),ka=b();function za(n){try{let e=JSON.parse(n);return Ua(e)?e:NaN}catch{return NaN}}qs.exports=ka(za)});var ke=c((zf,Ns)=>{var Ca=h(),$a=b();function Pa(n){try{return Ca(n)?Math.floor(n):NaN}catch{return NaN}}Ns.exports=$a(Pa)});var ht=c((Cf,xs)=>{var Va=h(),Ba=b();function _a(n){try{let e=JSON.parse(n);return Va(e)?parseInt(e):NaN}catch{return NaN}}xs.exports=Ba(_a)});var Ts=c(($f,vs)=>{var R=m(),Ra=p(),mt=d(),dt=h(),ws=A(),Ja=ht();function pt(n,e){return R(!Ra(n),"You must pass an array and an index into the `getValueAt` function!"),R(mt(n),"You must pass an array and an index into the `getValueAt` function!"),R(dt(e)||mt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),mt(e)&&(R(ws(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{R(dt(t)&&Ja(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),R(e.length<=ws(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),dt(e)?(R(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(R(e[0]<n.length,`The index ${e[0]} is out of bounds!`),pt(n[e[0]],e.slice(1))):pt(n,e[0])}vs.exports=pt});var gt=c((Bf,Os)=>{var Pf=U(),Vf=k(),Ka=h(),La=Z();function Wa(n){Ka(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return La(e,n)}Os.exports=Wa});var Is=c((_f,As)=>{var ze=m(),Da=p(),Ha=h(),Fa=gt();function Xa(n){ze(!Da(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),ze(Ha(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),ze(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),ze(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Fa([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}As.exports=Xa});var yt=c((Jf,Ss)=>{var Rf=m(),Ga=K();function Qa(){return Ga([...arguments])}Ss.exports=Qa});var Ms=c((Kf,Es)=>{var Za=d(),ec=T(),tc=yt();function nc(){let n=Object.values(arguments).map(r=>Za(r)?ec(r):[r]),e=[];return tc(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}Es.exports=nc});var bt=c((Wf,Us)=>{var pe=m(),Ce=p(),js=h(),qt=d(),rc=X(),sc=T(),Lf=A(),oc=ke();function Ys(n,e){if(pe(!Ce(n),"You must pass an array into the `slice` function!"),pe(qt(n),"You must pass an array into the `slice` function!"),Ce(e))return n.slice();pe(qt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),sc(e).forEach(s=>{pe(Ce(s)||js(s)&&oc(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];Ce(t)&&(t=rc(0,n.length)),js(t)&&(t=[t]);let r=[];return t.forEach(s=>{pe(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];qt(o)?r.push(Ys(n[s],e.slice(1,e.length))):r.push(n[s])}),r}Us.exports=Ys});var $s=c((Df,Cs)=>{var $=m(),ic=p(),uc=d(),Nt=h(),ac=T(),cc=A(),$e=bt(),lc=ft(),ks=se(),zs=re(),xt=Xe(),J=X();function wt(n){$(!ic(n),"You must pass a square 2D array into the `inverse` function!"),$(uc(n),"You must pass a square 2D array into the `inverse` function!"),ac(n).forEach(t=>$(Nt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=cc(n);if($(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),$(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),$(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return $(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;$(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return zs(u,1/i)}else if(e[0]>1){let t=(r,s)=>Nt(r)||Nt(s)?zs(r,s):lc(r,s);for(let r=1;r<e[0]-1;r++)try{let s=$e(n,[J(0,r),J(0,r)]),o=$e(n,[J(0,r),J(r,e[0])]),i=$e(n,[J(r,e[0]),J(0,r)]),u=$e(n,[J(r,e[0]),J(r,e[0])]),a=wt(s),f=wt(ks(u,t(-1,t(t(i,a),o)))),g=ks(a,t(t(t(t(a,o),f),i),a)),y=t(-1,t(t(a,o),f)),P=t(-1,t(t(f,i),a)),_e=f;return xt(xt(g,y,1),xt(P,_e,1),0)}catch{}$(!1,"This matrix cannot be inverted!")}}Cs.exports=wt});var Vs=c((Hf,Ps)=>{var fc=b(),vt=h();function hc(n,e,t){try{return vt(n)?vt(e)?vt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}Ps.exports=fc(hc)});var Rs=c((Ff,_s)=>{var Bs=h(),mc=p(),dc=b();function pc(n,e){try{return e=mc(e)?Math.E:e,Bs(n)?Bs(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}_s.exports=dc(pc)});var Ks=c((Xf,Js)=>{var ge=h(),gc=b();function yc(n,e,t,r,s){try{return ge(n)?ge(e)?ge(t)?ge(r)?ge(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Js.exports=gc(yc)});var Ws=c((th,Ls)=>{var Gf=m(),Qf=p(),Zf=d(),eh=h(),qc=T(),bc=G(),Nc=Se();function xc(n){try{let e=qc(n),t=Nc(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=bc(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Ls.exports=xc});var Fs=c((nh,Hs)=>{var wc=T(),vc=tt(),Tc=K(),Ds=G();function Oc(n){try{if(n.length===0)return NaN;let e=wc(n);if(e.length===0)return NaN;let t={},r=Tc(e);r.forEach(u=>{t[u]=vc(e,u)});let s=Ds(r,(u,a)=>t[a]-t[u]),o=s[0],i=Ds(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Hs.exports=Oc});var Zs=c((oh,Qs)=>{var Ac=p(),rh=U(),sh=k(),{random:Xs}=ee(),Ic=Z(),Sc=h();function Gs(){let n=Xs(),e=Xs();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function Ec(n){if(Ac(n))return Gs();Sc(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Gs());return Ic(e,n)}Qs.exports=Ec});var to=c((ah,eo)=>{var ih=U(),uh=k(),Mc=Z(),jc=h();function Yc(n){jc(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Mc(e,n)}eo.exports=Yc});var so=c((ch,ro)=>{var no=d(),Uc=h(),Pe=m(),kc=p();function Tt(n,e){if(Pe(no(n),"The `permute` function only works on arrays!"),kc(e)&&(e=n.length),Pe(Uc(e),"`r` must be a whole number!"),e>n.length)return Tt(n);if(e<=0)return[[]];if(Pe(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Pe(!no(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Tt(u,e-1).forEach(f=>{t.push([r].concat(f))})}),t}ro.exports=Tt});var ao=c((lh,uo)=>{var zc=d(),Cc=A(),oo=at(),io=Ie();function $c(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(zc(e)){let t=Cc(e);t.length===1?new io(e).print():t.length==2?new oo(e).print():console.log(e)}else e instanceof oo||e instanceof io?e.print():console.log(e)})}uo.exports=$c});var lo=c((fh,co)=>{var Pc=h(),Vc=b();function Bc(n){try{return Pc(n)?Math.round(n):NaN}catch{return NaN}}co.exports=Vc(Bc)});var Ot=c((hh,mo)=>{var fo=m(),_c=h(),ho=d(),Rc=F();function Jc(n,e,t){fo(ho(n),"The first argument passed into the `setValueAt` function must be an array!"),_c(e)&&(e=[e]),fo(ho(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Rc(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}mo.exports=Jc});var yo=c((dh,go)=>{var po=m(),Kc=p(),Lc=d(),mh=ke(),{random:Wc}=ee();function Dc(n){po(!Kc(n),"You must pass an array into the `shuffle` function!"),po(Lc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Wc()*t.length);e.push(t.splice(s,1)[0])}return e}go.exports=Dc});var bo=c((ph,qo)=>{var Hc=h(),Fc=b();function Xc(n){try{return Hc(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}qo.exports=Fc(Xc)});var xo=c((gh,No)=>{var Gc=h(),Qc=b();function Zc(n){try{return Gc(n)?Math.sin(n):NaN}catch{return NaN}}No.exports=Qc(Zc)});var vo=c((yh,wo)=>{var el=we();function tl(n){return el(n)}wo.exports=tl});var Oo=c((qh,To)=>{var nl=h(),rl=b();function sl(n){try{return nl(n)?Math.tan(n):NaN}catch{return NaN}}To.exports=rl(sl)});var Ve=c((bh,Io)=>{var Ao=B();function ol(n,e){assert(Ao(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function il(n,e){assert(Ao(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}Io.exports={timeSync:ol,timeAsync:il}});var Mo=c((Nh,Eo)=>{var So=m(),ul=d(),al=B(),cl=k(),ll=ae(),fl=Ot(),hl=T();function ml(n,e){So(ul(n),"The first argument passed into the `where` function must be an array!"),So(al(e),"The second argument passed into the `where` function must be a function!");let t=hl(n).length,r=cl(n,e),s=[],o=0,i=!1;for(;!i;){let u=ll(r,!0);u?(s[o]=u,r=fl(r,u,null),o++):i=!0}return o===0?null:s}Eo.exports=ml});var dl=c((xh,At)=>{var Be={abs:De(),add:se(),append:Xe(),apply:k(),arccos:nn(),arcsin:sn(),arctan:un(),argmax:gn(),argmin:bn(),assert:m(),ceil:xn(),chop:Tn(),clamp:An(),cohensd:Yn(),combine:Cn(),copy:F(),correl:Ln(),cos:Dn(),count:tt(),covariance:et(),DataFrame:at(),diff:kr(),distance:Rr(),divide:Kr(),dot:ft(),dropMissing:Zr(),dropMissingPairwise:os(),dropNaN:Se(),dropNaNPairwise:hs(),exp:ds(),factorial:ys(),flatten:T(),float:bs(),floor:ke(),getValueAt:Ts(),identity:Is(),indexOf:ae(),int:ht(),intersect:Ms(),inverse:$s(),isArray:d(),isBoolean:Te(),isEqual:H(),isFunction:B(),isNumber:h(),isString:ve(),isUndefined:p(),lerp:Vs(),log:Rs(),map:Ks(),max:V(),mean:ce(),median:Ws(),min:qe(),mode:Fs(),multiply:ct(),ndarray:U(),normal:Zs(),ones:to(),permute:so(),pow:je(),print:ao(),random:ee().random,range:X(),reshape:Z(),reverse:oe(),round:lo(),scale:re(),seed:ee().seed,Series:Ie(),set:K(),setValueAt:Ot(),shape:A(),shuffle:yo(),sign:bo(),sin:xo(),slice:bt(),sort:G(),sqrt:xe(),std:we(),stdev:vo(),subtract:lt(),sum:Ye(),tan:Oo(),time:Ve().timeSync,timeSync:Ve().timeSync,timeAsync:Ve().timeAsync,transpose:D(),union:yt(),variance:be(),vectorize:b(),where:Mo(),zeros:gt(),dump:function(){Object.keys(Be).forEach(n=>{global[n]=Be[n]})}};typeof At!="undefined"&&(At.exports=Be);typeof window!="undefined"&&(window.JSMathTools=Be)});dl();})();
