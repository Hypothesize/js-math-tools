(()=>{var ct=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var f=a((Rh,tn)=>{function tu(n){return typeof n=="number"&&!isNaN(n)}tn.exports=tu});var re=a((Kh,rn)=>{var nn=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};rn.exports=nn});var h=a((Qh,sn)=>{var nu=re();sn.exports=function(n,e){if(!n)throw new nu(e)}});var p=a((Xh,on)=>{function ru(n){return n===null||typeof n>"u"}on.exports=ru});var d=a((Gh,un)=>{function su(n){return n instanceof Array}un.exports=su});var w=a((Zh,fn)=>{var an=h(),ou=p(),cn=d();function ln(n){an(!ou(n),"You must pass one array into the `flatten` function!"),an(cn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){cn(t)?e=e.concat(ln(t)):e.push(t)}),e}fn.exports=ln});var C=a((Hh,hn)=>{var iu=w(),uu=f();function au(n){try{let e=iu(n),t=-1/0;for(let r=0;r<e.length;r++){if(!uu(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}hn.exports=au});var Y=a((Dh,mn)=>{function cu(n){return typeof n=="function"}mn.exports=cu});var b=a((em,pn)=>{var lt=h(),lu=p(),ft=d(),fu=C(),hu=Y();function mu(n){return lt(!lu(n),"You must pass a function into the `vectorize` function!"),lt(hu(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>ft(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>ft(arguments[i])).map(i=>arguments[i].length),o=fu(s);s.forEach(i=>{lt(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>ft(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}pn.exports=mu});var ht=a((tm,dn)=>{var pu=f(),du=b();function gu(n){try{return pu(n)?Math.abs(n):NaN}catch{return NaN}}dn.exports=du(gu)});var he=a((nm,gn)=>{var qu=f(),yu=b();function bu(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!qu(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}gn.exports=yu(bu)});var x=a((rm,bn)=>{var Ie=h(),Nu=p(),qn=d(),wu=C();function yn(n){Ie(!Nu(n),"You must pass an array into the `shape` function!"),Ie(qn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>qn(r));if(t.indexOf(!0)>-1){Ie(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=wu(r);r.forEach(function(o){Ie(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(yn(n[0]))}return e}bn.exports=yn});var me=a((sm,wn)=>{var Nn=h(),xu=p(),vu=d();function Tu(n){Nn(!xu(n),"You must pass an array into the `reverse` function!"),Nn(vu(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}wn.exports=Tu});var _=a((om,vn)=>{var pe=h(),Su=p(),Ou=d(),Au=f(),Eu=w(),de="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function xn(n,e){if(e||(pe(!Su(n),de),Ou(n)||(n=[n]),n=Eu(n),pe(n.length>0,de),n.forEach(t=>{pe(Au(t),de),pe(parseInt(t)===t,de),pe(t>=0,de)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(xn(n.slice(1),!0));return t}}vn.exports=xn});var Q=a((im,Sn)=>{var mt=h(),Mu=p(),Iu=d(),ju=x(),Tn=me(),Uu=_();function Vu(n){mt(!Mu(n),"You must pass an array into the `transpose` function!"),mt(Iu(n),"You must pass an array into the `transpose` function!");let e=ju(n);if(mt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return Tn(n);if(e.length===2){let t=Uu(Tn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}Sn.exports=Vu});var dt=a((um,In)=>{var U=h(),On=p(),An=d(),Yu=f(),En=x(),pt=Q();function Mn(n,e,t=0){U(!On(n),"You must pass two arrays into the `append` function!"),U(!On(e),"You must pass two arrays into the `append` function!"),U(An(n),"You must pass two arrays into the `append` function!"),U(An(e),"You must pass two arrays into the `append` function!"),U(Yu(t),"The `axis` argument to the `append` function must be 0 or 1!"),U(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),U(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=En(n),s=En(e);U(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),U(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&U(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(U(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return pt(Mn(pt(n),pt(e),0))}}In.exports=Mn});var z=a((am,jn)=>{var Cu=b();function _u(n,e){try{return e(n)}catch{return NaN}}jn.exports=Cu(_u)});var Vn=a((cm,Un)=>{var zu=f(),ku=b();function Pu(n){try{return zu(n)?Math.acos(n):NaN}catch{return NaN}}Un.exports=ku(Pu)});var Cn=a((lm,Yn)=>{var $u=f(),Bu=b();function Ju(n){try{return $u(n)?Math.asin(n):NaN}catch{return NaN}}Yn.exports=Bu(Ju)});var zn=a((fm,_n)=>{var Fu=f(),Wu=b();function Lu(n){try{return Fu(n)?Math.atan(n):NaN}catch{return NaN}}_n.exports=Wu(Lu)});var X=a((mm,Pn)=>{var hm=d();function kn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!kn(n[u],e[u]))return!1}return!0}}}Pn.exports=kn});var ge=a((pm,Wn)=>{var $n=h(),Ru=p(),Bn=d(),gt=x(),Jn=X();function Fn(n,e,t){if($n(!Ru(n),"You must pass an array and a value into the `indexOf` function!"),$n(Bn(n),"You must pass an array and a value into the `indexOf` function!"),gt(n).length===1||Bn(e)&&Jn(gt(n[0]),gt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Jn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Fn(s,e);if(o)return[r].concat(o)}return null}Wn.exports=Fn});var Rn=a((dm,Ln)=>{var Ku=ge(),Qu=C();function Xu(n){try{return Ku(n,Qu(n))}catch{return NaN}}Ln.exports=Xu});var je=a((gm,Kn)=>{var Gu=w(),Zu=f();function Hu(n){try{let e=Gu(n),t=1/0;for(let r=0;r<e.length;r++){if(!Zu(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Kn.exports=Hu});var Xn=a((qm,Qn)=>{var Du=ge(),ea=je();function ta(n){try{return Du(n,ea(n))}catch{return NaN}}Qn.exports=ta});var Zn=a((ym,Gn)=>{var na=f(),ra=b();function sa(n){try{return na(n)?Math.ceil(n):NaN}catch{return NaN}}Gn.exports=ra(sa)});var er=a((bm,Dn)=>{var oa=p(),ia=ht(),ua=b(),Hn=f();function aa(n,e){try{if(!Hn(n))return NaN;if(oa(e))e=1e-10;else if(!Hn(e))return NaN;return ia(n)<e?0:n}catch{return NaN}}Dn.exports=ua(aa)});var nr=a((Nm,tr)=>{var qt=f(),ca=b();function la(n,e,t){try{return qt(n)?qt(e)?qt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}tr.exports=ca(la)});var qe=a((wm,rr)=>{var fa=f(),ha=w();function ma(n){try{let e=ha(n),t=0;for(let r=0;r<e.length;r++){if(!fa(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}rr.exports=ma});var Ue=a((xm,sr)=>{var pa=qe(),da=w(),ga=f();function qa(n){try{let e=da(n),t=pa(e),r=0;for(let s=0;s<e.length;s++){if(!ga(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}sr.exports=qa});var ar=a((vm,ur)=>{var or=qe(),ir=Ue();function ya(n,e){try{let t=or(n),r=or(e),s=Math.sqrt((ir(n)+ir(e))/2);return(t-r)/s}catch{return NaN}}ur.exports=ya});var hr=a((Tm,fr)=>{var cr=d(),ba=f(),Ve=h();function lr(n,e){if(Ve(cr(n),"The `combine` function only works on arrays!"),Ve(ba(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ve(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ve(!cr(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;lr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}fr.exports=lr});var G=a((Om,mr)=>{var Sm=h(),Na=p(),wa=d();function yt(n){if(typeof n=="object"){if(Na(n))return n;if(wa(n))return n.map(yt);{let e={};return Object.keys(n).forEach(function(t){e[t]=yt(n[t])}),e}}else return n}mr.exports=yt});var bt=a((Am,gr)=>{var pr=qe(),dr=p();function xa(n,e){try{let t=pr(n),r=pr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(dr(n[i]))return NaN;if(dr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}gr.exports=xa});var Ye=a((Em,qr)=>{var va=f(),Ta=b();function Sa(n){try{return va(n)?Math.sqrt(n):NaN}catch{return NaN}}qr.exports=Ta(Sa)});var Ce=a((Mm,yr)=>{var Oa=Ye(),Aa=Ue();function Ea(n){try{return Oa(Aa(n))}catch{return NaN}}yr.exports=Ea});var wr=a((Im,Nr)=>{var Ma=bt(),br=Ce();function Ia(n,e){try{return Ma(n,e)/(br(n)*br(e))}catch{return NaN}}Nr.exports=Ia});var vr=a((jm,xr)=>{var ja=f(),Ua=b();function Va(n){try{return ja(n)?Math.cos(n):NaN}catch{return NaN}}xr.exports=Ua(Va)});var Z=a((Um,Sr)=>{var Tr=h(),Ya=p(),Ca=d(),_a=w();function za(n){Tr(!Ya(n),"You must pass an array into the `set` function!"),Tr(Ca(n),"You must pass an array into the `set` function!");let e=[],t={};return _a(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Sr.exports=za});var _e=a((Vm,Ir)=>{var Or=h(),Ar=p(),Er=d(),Mr=w(),ka=X(),Pa=Z();function $a(n,e){Or(!Ar(n),"You must pass an array and some items to count into the `count` function!"),Or(Er(n),"You must pass an array and some items to count into the `count` function!");let t=Mr(n);return e=Ar(e)?Pa(n):e,Er(e)?Mr(e).map(function(r){let s=t.filter(o=>ka(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Ir.exports=$a});var se=a((Ym,Cr)=>{var ye=h(),jr=d(),Ur=f(),Ba=x(),Vr=w(),Ja=n=>n.reduce((e,t)=>e*t);function Yr(n,e){if(ye(jr(n),"The first argument passed into the `reshape` function must be an array!"),Ur(e)&&(e=[e]),ye(jr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),ye(Ba(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{ye(Ur(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Vr(n);let t=Vr(n);ye(Ja(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Yr(i,e.slice(1)))}return r}Cr.exports=Yr});var H=a((zm,Fr)=>{var Cm=_(),_m=z(),kr=p(),Fa=h(),Pr=f(),$r=G(),Wa=se(),Br=Math.pow(2,64),N=[];Jr(parseInt(Math.random()*Br));function La(n,e){n=T(n);function t(){n+=T("0x9e3779b97f4a7c15");let s=$r(n);return s=(s^s>>30n)*T("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*T("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function T(n){return BigInt.asUintN(64,BigInt(n))}function _r(n,e){return n=T(n),e=BigInt(e),T(T(n<<e)|T(n>>T(64n-e)))}function Jr(n){if(kr(n))return $r(N);{Fa(Pr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=La(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function zr(){let n=T(_r(N[0]+N[3],23)+N[0]),e=T(N[1]<<17n);return N[2]=T(N[2]^N[0]),N[3]=T(N[3]^N[1]),N[1]=T(N[1]^N[2]),N[0]=T(N[0]^N[3]),N[2]=T(N[2]^e),N[3]=_r(N[3],45),parseInt(n)/Br}function Ra(n){if(kr(n))return zr();Pr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(zr());return Wa(e,n)}Fr.exports={random:Ra,seed:Jr}});var be=a((km,Lr)=>{var Wr=h(),Ka=d(),Qa=p(),Xa=f(),Ga=x();function Za(n){return Wr(Ka(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Wr(Ga(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Qa(e)&&Xa(e))}Lr.exports=Za});var D=a((Pm,Rr)=>{function Ha(n){return typeof n=="boolean"}Rr.exports=Ha});var V=a(($m,Kr)=>{function Da(n){return typeof n=="string"}Kr.exports=Da});var k=a((Bm,Qr)=>{var Nt=h(),wt=p(),xt=f(),ec=me();function tc(n,e,t=1){Nt(!wt(n)&&!wt(e)&&!wt(t),"You must pass two numbers and optionally a step value to the `range` function!"),Nt(xt(n)&&xt(e)&&xt(t),"You must pass two numbers and optionally a step value to the `range` function!"),Nt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=ec(s)),s}Qr.exports=tc});var ee=a((Jm,Gr)=>{var vt=h(),Xr=p(),nc=d(),rc=Y();function sc(n,e){return n<e?-1:n>e?1:0}function oc(n,e){Xr(e)&&(e=sc),vt(!Xr(n),"You must pass an array into the `sort` function!"),vt(nc(n),"You must pass an array into the `sort` function!"),vt(rc(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Gr.exports=oc});var F=a((Lm,ts)=>{var y=h(),ze=d(),te=p(),oe=x(),ke=Q(),Ne=k(),St=f(),we=V(),Fm=z(),ic=Y(),uc=_(),Tt=G(),ac=Z(),Zr=me(),Hr=ee(),Dr=D(),Wm=Pe();function cc(n){return St(n)&&parseInt(n)===n}function lc(n){return cc(n)&&n>=0}function es(n,e){y(St(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var P=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(ze(r),"The new values must be a 1-dimensional array!");let s=oe(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(Ne(t._index.length,s[0]).map(o=>"row"+es(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(ze(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(oe(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(we(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=oe(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return oe(this.values)}isEmpty(){return this.values.filter(t=>!te(t)).length===0}clear(){let e=this,t=e.copy();return t.values=uc(t.shape),t.index=e.index,t}get(e){let t=this;(we(e)||St(e))&&(e=[e]);let r=ac((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),te(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;te(e)&&(e=t.index),y(ze(e),"The `indices` array must be a 1-dimensional array of strings."),y(oe(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(we(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new P(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;te(e)&&(e=Ne(0,r[0])),y(ze(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(oe(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(lc(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new P(Zr(e.values));return t.index=Zr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=Ne(0,e.shape[0]).map(r=>"row"+es(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new P(Tt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(ic(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>te(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(Ne(0,r/2).concat(Ne(t.index.length-r/2,t.index.length)));let o=Tt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Dr(e)||we(e)||te(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;te(e)&&(t=!0),we(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Dr(e)&&(t=e);let r=this,s=ke([r.values,r.index]);s=ke(Hr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new P(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=ke([e.values,e.index]);t=ke(Hr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new P(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=Tt(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new P,r.name=t.name,r):(r.values=i,r.index=s,r)}};ts.exports=P});var Ot=a((Rm,ns)=>{var fc=h(),hc=f();function mc(n,e){fc(hc(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}ns.exports=mc});var $e=a((Km,rs)=>{var pc=d(),dc=p();function gc(n){return typeof n=="object"&&!dc(n)&&!pc(n)}rs.exports=gc});var At=a((Qm,ss)=>{var qc=V(),yc=$e(),bc=D(),Nc=p(),wc=re();function xc(n,e){e=(()=>{if(Nc(e))return!0;if(bc(e))return e;throw new wc("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>qc(u)?JSON.stringify(u):yc(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}ss.exports=xc});var is=a((Xm,os)=>{var vc=At();function Tc(n,e,t){let r=vc(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ct("fs"),o=ct("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}os.exports=Tc});var Et=a((Hm,cs)=>{var W=d(),us=D(),Gm=$e(),Zm=Ot(),Sc=C(),as=k(),Be=V(),Je=re(),Fe=p(),L=h();function Oc(n,e,t,r,s,o){return t=(()=>{if(Fe(t))return!1;if(us(t))return t;throw new Je("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Fe(r))return!1;if(us(r))return r;throw new Je("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Fe(s))return",";if(Be(s))return L(s.length===1,u),s;if(W(s))return L(s.length===2,u),L(s[0].length===1,u),L(s[1].length===1,u),s;throw new Je(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Fe(o))return'"';if(Be(o))return L(o.length===1,u),o;if(W(o))return L(o.length===2,u),L(o[0].length===1,u),L(o[1].length===1,u),o;throw new Je(u)})(),(()=>{let l=e.split(`
`).filter(S=>S.length>0).map(S=>{let O=[],ne="",fe=!1;for(let J=0;J<S.length;J++){let E=S[J];if(E.match(/\\/g))J++;else if(W(o)&&E===o[0])fe=!0;else if(W(o)&&E===o[1])fe=!1;else if(Be(o)&&E===o)fe=!fe;else if(W(s)&&E===s[0]||W(s)&&E===s[1]||Be(s)&&E===s)if(fe)ne+=E;else{let ut=ne;try{let at=JSON.parse(ut);W(at)?O.push(ut.trim()):O.push(at)}catch{O.push(ut.trim())}ne=""}else ne+=E}if(ne.length>0){let J=ne;try{let E=JSON.parse(J);W(E)?O.push(J.trim()):O.push(E)}catch{O.push(J.trim())}}return O}),c=(()=>{let S=t?l.shift():as(0,l[0].length).map(O=>"col"+O);return r&&S.shift(),S})(),g=(()=>r?l.map(O=>O.shift()):as(0,l.length).map(O=>"row"+O))(),q=Sc(l.map(S=>S.length)),I=new n(l.map(S=>(S.length=q,S)));return t&&(I.columns=c),r&&(I.index=g),I})()}cs.exports=Oc});var fs=a((Dm,ls)=>{var Ac=h(),Ec=Et(),Mc=V(),Ic=p(),jc=re();async function Uc(n,e,t,r,s,o,i){t=(()=>Ic(t)?"utf8":(Ac(Mc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ct("fs").readFileSync(e,t)}catch{}throw new jc(`The path "${e}" could not be loaded!`)})();return Ec(n,u,r,s,o,i)}ls.exports=Uc});var We=a((ep,hs)=>{var Vc=f(),Yc=b();function Cc(n){try{return Vc(n)?Math.floor(n):NaN}catch{return NaN}}hs.exports=Yc(Cc)});var Mt=a((np,ps)=>{var ms=h(),_c=p(),zc=d(),tp=We(),{random:kc}=H();function Pc(n){ms(!_c(n),"You must pass an array into the `shuffle` function!"),ms(zc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(kc()*t.length);e.push(t.splice(s,1)[0])}return e}ps.exports=Pc});var qs=a((rp,gs)=>{var $c=p(),Bc=h(),ds=Mt();function Jc(n,e){return $c(e)&&(e=0),Bc(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?ds(n.index):null,e===1?ds(n.columns):null)}gs.exports=Jc});var ws=a((sp,Ns)=>{var ys=h(),Fc=Y(),Wc=p(),Le=F(),xe=w();function bs(n){let e={};return xe(n).forEach((t,r)=>{e[t]=r}),e}function ie(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function Lc(n,e,t,r){ys(Fc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),Wc(r)&&(r=0),ys(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=bs(s.index),i=bs(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let g=new Le(l);g.name=e.index[c],g.index=e.columns;let q=t(g,c,e);return q||delete o[s.index[c]],q});if(xe(u).length===0)return new n;if(u.length===1){let l=new Le(xe(u));return l.name=ie(o)[0],l.index=ie(i),l}s.values=u,s.index=ie(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let g=new Le(l);g.name=e.columns[c],g.index=e.index;let q=t(g,c,e);return q||delete i[s.index[c]],q});if(xe(u).length===0)return new n;if(u.length===1){let l=new Le(xe(u));return l.name=ie(i)[0],l.index=ie(o),l}s.values=u,s.index=ie(i),s=s.transpose()}return s}Ns.exports=Lc});var Os=a((op,Ss)=>{var{random:Rc}=H(),xs=p(),It=f(),ue=V(),jt=D(),vs=d(),j=h(),Ts=x(),Kc=k(),Qc=ee(),Xc=w();function Gc(n,e,t){let r=n.copy(),s=Rc().toString();return r=r.assign(s,r.index),xs(e)&&(e=[s],t=[!0]),(It(e)||ue(e))&&(e=[e],(jt(t)||ue(t))&&(t=[t])),j(vs(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),j(Ts(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),xs(t)&&(t=Kc(0,e.length).map(o=>!0)),j(vs(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),j(Ts(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),j(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(j(ue(o)||It(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ue(o)){let i=r.columns.indexOf(o);return j(i>-1,`The column "${o}" does not exist!`),i}if(It(o))return j(parseInt(o)===o,"Column indices must be whole numbers!"),j(o>=0,`The column index ${o} is out of bounds!`),j(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(j(ue(o)||jt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ue(o)){let i=o.trim().toLowerCase();return j(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(jt(o))return o}),r.values=Qc(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=Xc(r.get(null,s).values),r=r.dropColumns(s),r}Ss.exports=Gc});var Es=a((ip,As)=>{var Zc=V(),Hc=X(),ve=k(),Re=F();function Dc(n,e){function t(q,I){return Zc(q)&&q.length>I?q.substring(0,I-3)+"...":q}if(Hc(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:ve(0,s).concat(ve(e.index.length-s,e.index.length)),l=o>e.columns.length?null:ve(0,i).concat(ve(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Re&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Re(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Re(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,ve(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let g=28;return c instanceof Re?(c.values=c.values.map(q=>t(q,g)),c.name=t(c.name,g),c.index=c.index.map(q=>t(q,g))):(c.values=c.values.map(q=>q.map(I=>t(I,g))),c.columns=c.columns.map(q=>t(q,g)),c.index=c.index.map(q=>t(q,g))),console.table(c.toObject()),e}As.exports=Dc});var Is=a((up,Ms)=>{function el(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}Ms.exports=el});var Ke=a((ap,js)=>{var tl=F();function nl(n){return n instanceof tl}js.exports=nl});var ks=a((cp,zs)=>{var Us=p(),Vs=V(),Ys=f(),Qe=h(),Cs=d(),_s=x(),rl=Ke();function sl(n,e,t,r){Us(t)&&(t=[]),Us(r)&&(r=[]),(Vs(t)||Ys(t))&&(t=[t]),(Vs(r)||Ys(r))&&(r=[r]),Qe(Cs(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Qe(Cs(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Qe(_s(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Qe(_s(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if(rl(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}zs.exports=sl});var Xe=a((lp,Ps)=>{var ol=f();function il(n){return ol(n)&&parseInt(n)===n}function ul(n){return il(n)&&n>=0}Ps.exports=ul});var Bs=a((fp,$s)=>{var Ut=h(),al=Xe(),cl=be();function ll(n,e,t,r,s){t=t||0,Ut(t===0||t===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,Ut(al(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",Ut(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(l){let c=cl(l);return s>0?l.length-c.length<s:r==="any"?c.length===l.length:r==="all"?c.length>0:!0}let i=e.copy(),u=Math.random().toString();if(t===0){let l=i.index.filter(c=>{let g=i.get(c,null).values;return o(g)});return l.length>0?i.get(l,null):new n}else if(t===1){let l=i.columns.filter(c=>{let g=i.get(null,c).values;return o(g)});return l.length>0?i.get(null,l):new n}return i}$s.exports=ll});var Rs=a((hp,Ls)=>{var Vt=h(),fl=Xe(),Te=p(),Js=V(),Fs=Ke(),Ws=x();function hl(n,e,t,r,s){t=t||0,Vt(t===0||t===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),s=s||0,Vt(fl(s),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),r=s>0?"none":r||"any",Vt(r==="any"||r==="all"||r==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function o(l){if(s>0){let c=0;for(let g=0;g<l.length;g++){let q=l[g];if(Te(q)&&c++,c>=s)return[]}}else if(r==="any")for(let c=0;c<l.length;c++){let g=l[c];if(Te(g))return[]}else if(r==="all"){for(let c=0;c<l.length;c++){let g=l[c];if(!Te(g))return l}return[]}return l}let i=e.copy(),u=Math.random().toString();if(t===0){i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Ws(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Te(c))return new n;Js(c)&&(c=[c]),Fs(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(t===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Ws(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Te(c))return new n;Js(c)&&(c=[c]),Fs(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}Ls.exports=hl});var Zs=a((mp,Gs)=>{var ml=Y(),Ks=h(),Qs=Q(),Ge=F(),Xs=x(),ae=G();function pl(n,e,t,r){if(r=r||0,Ks(ml(t),"The first parameter to the `apply` method must be a function."),Ks(r===0||r===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),r===0){let o=Qs(e.values).map((i,u)=>{let l=new Ge(i);return l.name=e.columns[u],l.index=e.index,t(l,u,e)});if(Xs(o).length===1){let i=new Ge(o);return i.index=ae(e.columns),i}else{let i=new n(Qs(o));return i.index=ae(e.index),i.columns=ae(e.columns),i}}else if(r===1){let s=e.values.map((o,i)=>{let u=new Ge(o);return u.name=e.index[i],u.index=e.columns,t(u,i,e)});if(Xs(s).length===1){let o=new Ge(s);return o.index=ae(e.index),o}else{let o=new n(s);return o.index=ae(e.index),o.columns=ae(e.columns),o}}}Gs.exports=pl});var Pe=a((xp,ro)=>{var{random:pp}=H(),dp=z(),m=h(),dl=G(),Hs=_e(),gp=be(),Yt=w(),A=d(),qp=D(),gl=X(),yp=Y(),Ds=f(),Se=V(),$=p(),bp=C(),Np=je(),ql=_(),ce=k(),eo=F(),to=Z(),M=x(),wp=ee(),Ct=Q(),Ze=Ot(),yl=is(),bl=At(),Nl=fs(),wl=Et(),xl=qs(),vl=ws(),Tl=Os(),Sl=Es(),Ol=Is(),Al=ks(),_t=Ke(),El=Bs(),no=Xe(),Ml=Rs(),Il=Zs();function He(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function jl(n){return n instanceof Object&&!A(n)}var v=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){m(A(r),"The new values must be a 2-dimensional array!");let s=M(r);m(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(ce(t._index.length,s[0]).map(o=>"row"+Ze(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(ce(t._columns.length,s[1]).map(o=>"col"+Ze(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){m(A(r),"The new columns list must be a 1-dimensional array of strings!"),m(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),m(M(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+He(8):o.trim()));let s=(()=>{let o=Hs(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+He(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){m(A(r),"The new index must be a 1-dimensional array of strings!"),m(r.length===t.shape[0],"The new index must be the same length as the old index!"),m(M(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+He(8):o.trim()));let s=(()=>{let o=Hs(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+He(8):o),t._index=r}}),m($(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(A(e)){let r=M(e);m(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Ct(r);let s=M(t.values);t._index=ce(0,s[0]).map(o=>"row"+Ze(o,(s[0]-1).toString().length))}}get shape(){return M(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return to(this.values).filter(t=>!$(t)).length===0}clear(){let e=this,t=new v(ql(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(Se(e)||Ds(e))&&(e=[e]),(Se(t)||Ds(t))&&(t=[t]);let s=to((e||[]).concat(t||[]).map(o=>typeof o));return m(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&m(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(m(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),m(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),$(e)||(e=e.map(o=>{if(typeof o=="string")return m(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return m(o>=0,`Index ${o} is out of bounds!`),m(parseInt(o)===o,"Row numbers must be integers!"),m(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),$(t)||(t=t.map(o=>{if(typeof o=="string")return m(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return m(o>=0,`Column ${o} is out of bounds!`),m(parseInt(o)===o,"Column numbers must be integers!"),m(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;$(e)&&(e=r.index),$(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),m(A(e)&&A(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),m(M(e).length===1&&M(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),m(e.length>0,"The `rows` array must contain at least one row name."),m(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{m(Se(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),m(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{m(Se(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),m(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return Yt(s)[0];if(e.length===1){let i=new eo(Yt(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new eo(Yt(s));return i.name=t[0],i.index=e,i}let o=new v(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;$(e)&&(e=ce(0,s[0])),$(t)&&(t=ce(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),m(A(e)&&A(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),m(M(e).length===1&&M(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),m(e.length>0,"The `rowIndices` array must contain at least one index."),m(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{m(no(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),m(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{m(no(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),m(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new v(Ct(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=ce(0,e.shape[0]).map(r=>"row"+Ze(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new v;let t=new v(dl(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;$(t)?(s=e,m(!A(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,m(Se(r),"When using two parameters for the `assign` method, the first parameter must be a string."),m(_t(s)||A(s)&&M(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),m(jl(s)||_t(s)||A(s)&&M(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(_t(s)){let i={};return m(o.isEmpty()||gl(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(A(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(l=>{let c=s[l];if(m(A(c),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),m(M(c).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=Ct([c]),i.columns=[l],u=i.shape;else{m(c.length===u[0],`Column "${l}" in the new data is not the same length as the other columns in the original DataFrame.`);let g=i.columns.indexOf(l);g<0&&(i.columns.push(l),g=i.columns.indexOf(l)),i.values.forEach((q,I)=>{q[g]=c[I]})}}),i}}apply(e,t){return Il(v,this,e,t)}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){return Ml(v,this,e,t,r)}dropNaN(e,t,r){return El(v,this,e,t,r)}drop(e,t){return Al(v,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return Ol(this)}toCSVString(e){return bl(this,e)}toCSV(e,t){return yl(this,e,t)}print(){return Sl(v,this)}sort(e,t){return Tl(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return vl(v,this,e,t)}shuffle(e){return xl(this,e)}};v.fromCSV=function(){return Nl(v,...arguments)};v.fromCSVString=function(){return wl(v,...arguments)};ro.exports=v});var ao=a((vp,uo)=>{var so=h(),oo=d(),io=w();function Ul(n,e){so(oo(n),"You must pass two arrays into the `diff` function!"),so(oo(e),"You must pass two arrays into the `diff` function!");let t=io(n),r=io(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}uo.exports=Ul});var De=a((Tp,lo)=>{var co=f(),Vl=b();function Yl(n,e){try{return co(n)?co(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}lo.exports=Vl(Yl)});var et=a((Sp,fo)=>{var Cl=he(),_l=w();function zl(n){try{return Cl(..._l(n))}catch{return NaN}}fo.exports=zl});var zt=a((Op,ho)=>{var kl=f(),Pl=b();function $l(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!kl(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}ho.exports=Pl($l)});var le=a((Ap,mo)=>{var Bl=zt();function Jl(n,e){return Bl(n,e)}mo.exports=Jl});var kt=a((Ep,po)=>{var Fl=he(),Wl=le();function Ll(n,e){return Fl(n,Wl(e,-1))}po.exports=Ll});var qo=a((Mp,go)=>{var Rl=De(),Kl=et(),Ql=Ye(),Xl=kt();function Gl(n,e){try{return Ql(Kl(Rl(Xl(n,e),2)))}catch{return NaN}}go.exports=Gl});var bo=a((Ip,yo)=>{var Zl=le(),Hl=De();function Dl(n,e){return Zl(n,Hl(e,-1))}yo.exports=Dl});var Pt=a((Up,So)=>{var Oe=h(),No=p(),wo=d(),ef=f(),jp=X(),xo=w(),vo=x(),tf=et(),nf=le(),To=Q();function tt(n,e){Oe(!No(n)&&!No(e),"You must pass two arrays of numbers into the `dot` function!"),Oe(wo(n)&&wo(e),"You must pass two arrays of numbers into the `dot` function!"),xo(n).concat(xo(e)).forEach(s=>{Oe(ef(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=vo(n),r=vo(e);if(Oe(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Oe(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return tf(nf(n,e));if(t.length===1&&r.length===2)return To(e).map(s=>tt(n,s));if(t.length===2&&r.length===1)return n.map(s=>tt(s,e));if(t.length===2&&r.length===2){let s=To(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(tt(n[i],s[l]));o.push(u)}return o}}So.exports=tt});var Eo=a((Vp,Ao)=>{var Oo=h(),rf=d(),sf=p(),of=x();function uf(n){return Oo(rf(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Oo(of(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!sf(e))}Ao.exports=uf});var Yo=a((Yp,Vo)=>{var Mo=h(),Io=p(),jo=d(),af=C(),Uo=x();function cf(n,e){Mo(jo(n)&&jo(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Mo(Uo(n).length===1&&Uo(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<af([n.length,e.length]);s++)!Io(n[s])&&!Io(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Vo.exports=cf});var Bo=a((Cp,$o)=>{var Co=h(),_o=p(),zo=d(),ko=f(),lf=C(),Po=x();function ff(n,e){Co(zo(n)&&zo(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Co(Po(n).length===1&&Po(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<lf([n.length,e.length]);s++)!_o(n[s])&&ko(n[s])&&!_o(e[s])&&ko(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}$o.exports=ff});var Fo=a((_p,Jo)=>{var hf=b(),mf=f();function pf(n){try{return mf(n)?Math.exp(n):NaN}catch{return NaN}}Jo.exports=hf(pf)});var Ro=a((zp,Lo)=>{var df=b();function Wo(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*Wo(n-1)}catch{return NaN}}Lo.exports=df(Wo)});var Qo=a((kp,Ko)=>{var gf=f(),qf=b();function yf(n){try{let e=JSON.parse(n);return gf(e)?e:NaN}catch{return NaN}}Ko.exports=qf(yf)});var $t=a((Pp,Xo)=>{var bf=f(),Nf=b();function wf(n){try{let e=JSON.parse(n);return bf(e)?parseInt(e):NaN}catch{return NaN}}Xo.exports=Nf(wf)});var Ho=a(($p,Zo)=>{var R=h(),xf=p(),Bt=d(),Jt=f(),Go=x(),vf=$t();function Ft(n,e){return R(!xf(n),"You must pass an array and an index into the `getValueAt` function!"),R(Bt(n),"You must pass an array and an index into the `getValueAt` function!"),R(Jt(e)||Bt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Bt(e)&&(R(Go(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{R(Jt(t)&&vf(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),R(e.length<=Go(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Jt(e)?(R(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(R(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Ft(n[e[0]],e.slice(1))):Ft(n,e[0])}Zo.exports=Ft});var Wt=a((Fp,Do)=>{var Bp=_(),Jp=z(),Tf=f(),Sf=se();function Of(n){Tf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Sf(e,n)}Do.exports=Of});var ti=a((Wp,ei)=>{var nt=h(),Af=p(),Ef=f(),Mf=Wt();function If(n){nt(!Af(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(Ef(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Mf([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}ei.exports=If});var Lt=a((Rp,ni)=>{var Lp=h(),jf=Z();function Uf(){return jf([...arguments])}ni.exports=Uf});var si=a((Kp,ri)=>{var Vf=d(),Yf=w(),Cf=Lt();function _f(){let n=Object.values(arguments).map(r=>Vf(r)?Yf(r):[r]),e=[];return Cf(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}ri.exports=_f});var Kt=a((Xp,ui)=>{var Ae=h(),rt=p(),oi=f(),Rt=d(),zf=k(),kf=w(),Qp=x(),Pf=We();function ii(n,e){if(Ae(!rt(n),"You must pass an array into the `slice` function!"),Ae(Rt(n),"You must pass an array into the `slice` function!"),rt(e))return n.slice();Ae(Rt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),kf(e).forEach(s=>{Ae(rt(s)||oi(s)&&Pf(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];rt(t)&&(t=zf(0,n.length)),oi(t)&&(t=[t]);let r=[];return t.forEach(s=>{Ae(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Rt(o)?r.push(ii(n[s],e.slice(1,e.length))):r.push(n[s])}),r}ui.exports=ii});var fi=a((Gp,li)=>{var B=h(),$f=p(),Bf=d(),Qt=f(),Jf=w(),Ff=x(),st=Kt(),Wf=Pt(),ai=he(),ci=le(),Xt=dt(),K=k();function Gt(n){B(!$f(n),"You must pass a square 2D array into the `inverse` function!"),B(Bf(n),"You must pass a square 2D array into the `inverse` function!"),Jf(n).forEach(t=>B(Qt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=Ff(n);if(B(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return B(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;B(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return ci(u,1/i)}else if(e[0]>1){let t=(r,s)=>Qt(r)||Qt(s)?ci(r,s):Wf(r,s);for(let r=1;r<e[0]-1;r++)try{let s=st(n,[K(0,r),K(0,r)]),o=st(n,[K(0,r),K(r,e[0])]),i=st(n,[K(r,e[0]),K(0,r)]),u=st(n,[K(r,e[0]),K(r,e[0])]),l=Gt(s),c=Gt(ai(u,t(-1,t(t(i,l),o)))),g=ai(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),I=t(-1,t(t(c,i),l)),S=c;return Xt(Xt(g,q,1),Xt(I,S,1),0)}catch{}B(!1,"This matrix cannot be inverted!")}}li.exports=Gt});var mi=a((Zp,hi)=>{var Lf=b(),Zt=f();function Rf(n,e,t){try{return Zt(n)?Zt(e)?Zt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}hi.exports=Lf(Rf)});var gi=a((Hp,di)=>{var pi=f(),Kf=p(),Qf=b();function Xf(n,e){try{return e=Kf(e)?Math.E:e,pi(n)?pi(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}di.exports=Qf(Xf)});var yi=a((Dp,qi)=>{var Ee=f(),Gf=b();function Zf(n,e,t,r,s){try{return Ee(n)?Ee(e)?Ee(t)?Ee(r)?Ee(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}qi.exports=Gf(Zf)});var Ni=a((sd,bi)=>{var ed=h(),td=p(),nd=d(),rd=f(),Hf=w(),Df=ee(),eh=be();function th(n){try{let e=Hf(n),t=eh(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=Df(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}bi.exports=th});var vi=a((od,xi)=>{var nh=w(),rh=_e(),sh=Z(),wi=ee();function oh(n){try{if(n.length===0)return NaN;let e=nh(n);if(e.length===0)return NaN;let t={},r=sh(e);r.forEach(u=>{t[u]=rh(e,u)});let s=wi(r,(u,l)=>t[l]-t[u]),o=s[0],i=wi(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}xi.exports=oh});var Ai=a((ad,Oi)=>{var ih=p(),id=_(),ud=z(),{random:Ti}=H(),uh=se(),ah=f();function Si(){let n=Ti(),e=Ti();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function ch(n){if(ih(n))return Si();ah(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Si());return uh(e,n)}Oi.exports=ch});var Mi=a((fd,Ei)=>{var cd=_(),ld=z(),lh=se(),fh=f();function hh(n){fh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return lh(e,n)}Ei.exports=hh});var Ui=a((hd,ji)=>{var Ii=d(),mh=f(),ot=h(),ph=p();function Ht(n,e){if(ot(Ii(n),"The `permute` function only works on arrays!"),ph(e)&&(e=n.length),ot(mh(e),"`r` must be a whole number!"),e>n.length)return Ht(n);if(e<=0)return[[]];if(ot(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{ot(!Ii(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Ht(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}ji.exports=Ht});var _i=a((md,Ci)=>{var dh=d(),gh=x(),Vi=Pe(),Yi=F();function qh(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(dh(e)){let t=gh(e);t.length===1?new Yi(e).print():t.length==2?new Vi(e).print():console.log(e)}else e instanceof Vi||e instanceof Yi?e.print():console.log(e)})}Ci.exports=qh});var ki=a((pd,zi)=>{var yh=f(),bh=b();function Nh(n){try{return yh(n)?Math.round(n):NaN}catch{return NaN}}zi.exports=bh(Nh)});var Dt=a((dd,Bi)=>{var Pi=h(),wh=f(),$i=d(),xh=G();function vh(n,e,t){Pi($i(n),"The first argument passed into the `setValueAt` function must be an array!"),wh(e)&&(e=[e]),Pi($i(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=xh(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}Bi.exports=vh});var Fi=a((gd,Ji)=>{var Th=f(),Sh=b();function Oh(n){try{return Th(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Ji.exports=Sh(Oh)});var Li=a((qd,Wi)=>{var Ah=f(),Eh=b();function Mh(n){try{return Ah(n)?Math.sin(n):NaN}catch{return NaN}}Wi.exports=Eh(Mh)});var Ki=a((yd,Ri)=>{var Ih=Ce();function jh(n){return Ih(n)}Ri.exports=jh});var Xi=a((bd,Qi)=>{var Uh=f(),Vh=b();function Yh(n){try{return Uh(n)?Math.tan(n):NaN}catch{return NaN}}Qi.exports=Vh(Yh)});var it=a((Nd,Zi)=>{var Gi=Y();function Ch(n,e){assert(Gi(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function _h(n,e){assert(Gi(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}Zi.exports={timeSync:Ch,timeAsync:_h}});var eu=a((wd,Di)=>{var Hi=h(),zh=d(),kh=Y(),Ph=z(),$h=ge(),Bh=Dt(),Jh=w();function Fh(n,e){Hi(zh(n),"The first argument passed into the `where` function must be an array!"),Hi(kh(e),"The second argument passed into the `where` function must be a function!");let t=Jh(n).length,r=Ph(n,e),s=[],o=0,i=!1;for(;!i;){let u=$h(r,!0);u?(s[o]=u,r=Bh(r,u,null),o++):i=!0}return o===0?null:s}Di.exports=Fh});var Wh=a((xd,en)=>{var Me={abs:ht(),add:he(),append:dt(),apply:z(),arccos:Vn(),arcsin:Cn(),arctan:zn(),argmax:Rn(),argmin:Xn(),assert:h(),ceil:Zn(),chop:er(),clamp:nr(),cohensd:ar(),combine:hr(),copy:G(),correl:wr(),cos:vr(),count:_e(),covariance:bt(),DataFrame:Pe(),diff:ao(),distance:qo(),divide:bo(),dot:Pt(),dropMissing:Eo(),dropMissingPairwise:Yo(),dropNaN:be(),dropNaNPairwise:Bo(),exp:Fo(),factorial:Ro(),flatten:w(),float:Qo(),floor:We(),getValueAt:Ho(),identity:ti(),indexOf:ge(),int:$t(),intersect:si(),inverse:fi(),isArray:d(),isBoolean:D(),isEqual:X(),isFunction:Y(),isNumber:f(),isObject:$e(),isString:V(),isUndefined:p(),lerp:mi(),log:gi(),map:yi(),MathError:re(),max:C(),mean:qe(),median:Ni(),min:je(),mode:vi(),multiply:zt(),ndarray:_(),normal:Ai(),ones:Mi(),permute:Ui(),pow:De(),print:_i(),random:H().random,range:k(),reshape:se(),reverse:me(),round:ki(),scale:le(),seed:H().seed,Series:F(),set:Z(),setValueAt:Dt(),shape:x(),shuffle:Mt(),sign:Fi(),sin:Li(),slice:Kt(),sort:ee(),sqrt:Ye(),std:Ce(),stdev:Ki(),subtract:kt(),sum:et(),tan:Xi(),time:it().timeSync,timeSync:it().timeSync,timeAsync:it().timeAsync,transpose:Q(),union:Lt(),variance:Ue(),vectorize:b(),where:eu(),zeros:Wt(),dump:function(){Object.keys(Me).forEach(n=>{typeof global<"u"&&(global[n]=Me[n]),typeof window<"u"&&(window[n]=Me[n])})}};typeof en<"u"&&(en.exports=Me);typeof window<"u"&&(window.JSMathTools=Me)});Wh();})();
