(()=>{var ct=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=a((nh,Zt)=>{function Ai(n){return typeof n=="number"&&!isNaN(n)}Zt.exports=Ai});var re=a((rh,Dt)=>{var Ht=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};Dt.exports=Ht});var m=a((sh,en)=>{var Ei=re();en.exports=function(n,e){if(!n)throw new Ei(e)}});var p=a((oh,tn)=>{function Mi(n){return n===null||typeof n>"u"}tn.exports=Mi});var g=a((ih,nn)=>{function Ii(n){return n instanceof Array}nn.exports=Ii});var x=a((uh,un)=>{var rn=m(),ji=p(),sn=g();function on(n){rn(!ji(n),"You must pass one array into the `flatten` function!"),rn(sn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){sn(t)?e=e.concat(on(t)):e.push(t)}),e}un.exports=on});var Y=a((ah,an)=>{var Vi=x(),Ui=h();function Yi(n){try{let e=Vi(n),t=-1/0;for(let r=0;r<e.length;r++){if(!Ui(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}an.exports=Yi});var C=a((ch,cn)=>{function Ci(n){return typeof n=="function"}cn.exports=Ci});var b=a((lh,ln)=>{var lt=m(),zi=p(),ft=g(),ki=Y(),Pi=C();function $i(n){return lt(!zi(n),"You must pass a function into the `vectorize` function!"),lt(Pi(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>ft(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>ft(arguments[i])).map(i=>arguments[i].length),o=ki(s);s.forEach(i=>{lt(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>ft(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}ln.exports=$i});var ht=a((fh,fn)=>{var _i=h(),Bi=b();function Ji(n){try{return _i(n)?Math.abs(n):NaN}catch{return NaN}}fn.exports=Bi(Ji)});var de=a((hh,hn)=>{var Fi=h(),Li=b();function Ri(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Fi(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}hn.exports=Li(Ri)});var T=a((mh,dn)=>{var Ve=m(),Ki=p(),mn=g(),Wi=Y();function pn(n){Ve(!Ki(n),"You must pass an array into the `shape` function!"),Ve(mn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>mn(r));if(t.indexOf(!0)>-1){Ve(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Wi(r);r.forEach(function(o){Ve(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(pn(n[0]))}return e}dn.exports=pn});var ge=a((ph,qn)=>{var gn=m(),Qi=p(),Xi=g();function Gi(n){gn(!Qi(n),"You must pass an array into the `reverse` function!"),gn(Xi(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}qn.exports=Gi});var z=a((dh,bn)=>{var qe=m(),Zi=p(),Hi=g(),Di=h(),eu=x(),ye="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function yn(n,e){if(e||(qe(!Zi(n),ye),Hi(n)||(n=[n]),n=eu(n),qe(n.length>0,ye),n.forEach(t=>{qe(Di(t),ye),qe(parseInt(t)===t,ye),qe(t>=0,ye)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(yn(n.slice(1),!0));return t}}bn.exports=yn});var se=a((gh,wn)=>{var mt=m(),tu=p(),nu=g(),ru=T(),Nn=ge(),su=z();function ou(n){mt(!tu(n),"You must pass an array into the `transpose` function!"),mt(nu(n),"You must pass an array into the `transpose` function!");let e=ru(n);if(mt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return Nn(n);if(e.length===2){let t=su(Nn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}wn.exports=ou});var dt=a((qh,Sn)=>{var U=m(),xn=p(),vn=g(),iu=h(),Tn=T(),pt=se();function On(n,e,t=0){U(!xn(n),"You must pass two arrays into the `append` function!"),U(!xn(e),"You must pass two arrays into the `append` function!"),U(vn(n),"You must pass two arrays into the `append` function!"),U(vn(e),"You must pass two arrays into the `append` function!"),U(iu(t),"The `axis` argument to the `append` function must be 0 or 1!"),U(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),U(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=Tn(n),s=Tn(e);U(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),U(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&U(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(U(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return pt(On(pt(n),pt(e),0))}}Sn.exports=On});var k=a((yh,An)=>{var uu=b();function au(n,e){try{return e(n)}catch{return NaN}}An.exports=uu(au)});var Mn=a((bh,En)=>{var cu=h(),lu=b();function fu(n){try{return cu(n)?Math.acos(n):NaN}catch{return NaN}}En.exports=lu(fu)});var jn=a((Nh,In)=>{var hu=h(),mu=b();function pu(n){try{return hu(n)?Math.asin(n):NaN}catch{return NaN}}In.exports=mu(pu)});var Un=a((wh,Vn)=>{var du=h(),gu=b();function qu(n){try{return du(n)?Math.atan(n):NaN}catch{return NaN}}Vn.exports=gu(qu)});var Q=a((vh,Cn)=>{var xh=g();function Yn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!Yn(n[u],e[u]))return!1}return!0}}}Cn.exports=Yn});var be=a((Th,_n)=>{var zn=m(),yu=p(),kn=g(),gt=T(),Pn=Q();function $n(n,e,t){if(zn(!yu(n),"You must pass an array and a value into the `indexOf` function!"),zn(kn(n),"You must pass an array and a value into the `indexOf` function!"),gt(n).length===1||kn(e)&&Pn(gt(n[0]),gt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Pn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=$n(s,e);if(o)return[r].concat(o)}return null}_n.exports=$n});var Jn=a((Oh,Bn)=>{var bu=be(),Nu=Y();function wu(n){try{return bu(n,Nu(n))}catch{return NaN}}Bn.exports=wu});var Ue=a((Sh,Fn)=>{var xu=x(),vu=h();function Tu(n){try{let e=xu(n),t=1/0;for(let r=0;r<e.length;r++){if(!vu(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Fn.exports=Tu});var Rn=a((Ah,Ln)=>{var Ou=be(),Su=Ue();function Au(n){try{return Ou(n,Su(n))}catch{return NaN}}Ln.exports=Au});var Wn=a((Eh,Kn)=>{var Eu=h(),Mu=b();function Iu(n){try{return Eu(n)?Math.ceil(n):NaN}catch{return NaN}}Kn.exports=Mu(Iu)});var Gn=a((Mh,Xn)=>{var ju=p(),Vu=ht(),Uu=b(),Qn=h();function Yu(n,e){try{if(!Qn(n))return NaN;if(ju(e))e=1e-10;else if(!Qn(e))return NaN;return Vu(n)<e?0:n}catch{return NaN}}Xn.exports=Uu(Yu)});var Hn=a((Ih,Zn)=>{var qt=h(),Cu=b();function zu(n,e,t){try{return qt(n)?qt(e)?qt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}Zn.exports=Cu(zu)});var Ne=a((jh,Dn)=>{var ku=h(),Pu=x();function $u(n){try{let e=Pu(n),t=0;for(let r=0;r<e.length;r++){if(!ku(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}Dn.exports=$u});var Ye=a((Vh,er)=>{var _u=Ne(),Bu=x(),Ju=h();function Fu(n){try{let e=Bu(n),t=_u(e),r=0;for(let s=0;s<e.length;s++){if(!Ju(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}er.exports=Fu});var sr=a((Uh,rr)=>{var tr=Ne(),nr=Ye();function Lu(n,e){try{let t=tr(n),r=tr(e),s=Math.sqrt((nr(n)+nr(e))/2);return(t-r)/s}catch{return NaN}}rr.exports=Lu});var ar=a((Yh,ur)=>{var or=g(),Ru=h(),Ce=m();function ir(n,e){if(Ce(or(n),"The `combine` function only works on arrays!"),Ce(Ru(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ce(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ce(!or(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;ir(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}ur.exports=ir});var oe=a((zh,cr)=>{var Ch=m(),Ku=p(),Wu=g();function yt(n){if(typeof n=="object"){if(Ku(n))return n;if(Wu(n))return n.map(yt);{let e={};return Object.keys(n).forEach(function(t){e[t]=yt(n[t])}),e}}else return n}cr.exports=yt});var bt=a((kh,hr)=>{var lr=Ne(),fr=p();function Qu(n,e){try{let t=lr(n),r=lr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(fr(n[i]))return NaN;if(fr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}hr.exports=Qu});var ze=a((Ph,mr)=>{var Xu=h(),Gu=b();function Zu(n){try{return Xu(n)?Math.sqrt(n):NaN}catch{return NaN}}mr.exports=Gu(Zu)});var ke=a(($h,pr)=>{var Hu=ze(),Du=Ye();function ea(n){try{return Hu(Du(n))}catch{return NaN}}pr.exports=ea});var qr=a((_h,gr)=>{var ta=bt(),dr=ke();function na(n,e){try{return ta(n,e)/(dr(n)*dr(e))}catch{return NaN}}gr.exports=na});var br=a((Bh,yr)=>{var ra=h(),sa=b();function oa(n){try{return ra(n)?Math.cos(n):NaN}catch{return NaN}}yr.exports=sa(oa)});var X=a((Jh,wr)=>{var Nr=m(),ia=p(),ua=g(),aa=x();function ca(n){Nr(!ia(n),"You must pass an array into the `set` function!"),Nr(ua(n),"You must pass an array into the `set` function!");let e=[],t={};return aa(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}wr.exports=ca});var Pe=a((Fh,Sr)=>{var xr=m(),vr=p(),Tr=g(),Or=x(),la=Q(),fa=X();function ha(n,e){xr(!vr(n),"You must pass an array and some items to count into the `count` function!"),xr(Tr(n),"You must pass an array and some items to count into the `count` function!");let t=Or(n);return e=vr(e)?fa(n):e,Tr(e)?Or(e).map(function(r){let s=t.filter(o=>la(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Sr.exports=ha});var ie=a((Lh,jr)=>{var we=m(),Ar=g(),Er=h(),ma=T(),Mr=x(),pa=n=>n.reduce((e,t)=>e*t);function Ir(n,e){if(we(Ar(n),"The first argument passed into the `reshape` function must be an array!"),Er(e)&&(e=[e]),we(Ar(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),we(ma(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{we(Er(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Mr(n);let t=Mr(n);we(pa(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Ir(i,e.slice(1)))}return r}jr.exports=Ir});var G=a((Wh,$r)=>{var Rh=z(),Kh=k(),Yr=p(),da=m(),Cr=h(),zr=oe(),ga=ie(),kr=Math.pow(2,64),N=[];Pr(parseInt(Math.random()*kr));function qa(n,e){n=O(n);function t(){n+=O("0x9e3779b97f4a7c15");let s=zr(n);return s=(s^s>>30n)*O("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*O("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function O(n){return BigInt.asUintN(64,BigInt(n))}function Vr(n,e){return n=O(n),e=BigInt(e),O(O(n<<e)|O(n>>O(64n-e)))}function Pr(n){if(Yr(n))return zr(N);{da(Cr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=qa(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function Ur(){let n=O(Vr(N[0]+N[3],23)+N[0]),e=O(N[1]<<17n);return N[2]=O(N[2]^N[0]),N[3]=O(N[3]^N[1]),N[1]=O(N[1]^N[2]),N[0]=O(N[0]^N[3]),N[2]=O(N[2]^e),N[3]=Vr(N[3],45),parseInt(n)/kr}function ya(n){if(Yr(n))return Ur();Cr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Ur());return ga(e,n)}$r.exports={random:ya,seed:Pr}});var $e=a((Qh,Br)=>{var _r=m(),ba=g(),Na=p(),wa=h(),xa=T();function va(n){return _r(ba(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),_r(xa(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Na(e)&&wa(e))}Br.exports=va});var Z=a((Xh,Jr)=>{function Ta(n){return typeof n=="boolean"}Jr.exports=Ta});var P=a((Gh,Fr)=>{function Oa(n){return typeof n=="string"}Fr.exports=Oa});var $=a((Zh,Lr)=>{var Nt=m(),wt=p(),xt=h(),Sa=ge();function Aa(n,e,t=1){Nt(!wt(n)&&!wt(e)&&!wt(t),"You must pass two numbers and optionally a step value to the `range` function!"),Nt(xt(n)&&xt(e)&&xt(t),"You must pass two numbers and optionally a step value to the `range` function!"),Nt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=Sa(s)),s}Lr.exports=Aa});var H=a((Hh,Kr)=>{var vt=m(),Rr=p(),Ea=g(),Ma=C();function Ia(n,e){return n<e?-1:n>e?1:0}function ja(n,e){Rr(e)&&(e=Ia),vt(!Rr(n),"You must pass an array into the `sort` function!"),vt(Ea(n),"You must pass an array into the `sort` function!"),vt(Ma(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Kr.exports=ja});var ae=a((tm,Zr)=>{var y=m(),_e=g(),D=p(),ue=T(),Be=se(),xe=$(),Ot=h(),ve=P(),Dh=k(),Va=C(),Ua=z(),Tt=oe(),Ya=X(),Wr=ge(),Qr=H(),Xr=Z(),em=Je();function Ca(n){return Ot(n)&&parseInt(n)===n}function za(n){return Ca(n)&&n>=0}function Gr(n,e){y(Ot(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var _=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(_e(r),"The new values must be a 1-dimensional array!");let s=ue(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(xe(t._index.length,s[0]).map(o=>"row"+Gr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(_e(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ue(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(ve(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ue(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ue(this.values)}isEmpty(){return this.values.filter(t=>!D(t)).length===0}clear(){let e=this,t=e.copy();return t.values=Ua(t.shape),t.index=e.index,t}get(e){let t=this;(ve(e)||Ot(e))&&(e=[e]);let r=Ya((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),D(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;D(e)&&(e=t.index),y(_e(e),"The `indices` array must be a 1-dimensional array of strings."),y(ue(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(ve(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new _(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;D(e)&&(e=xe(0,r[0])),y(_e(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ue(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(za(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new _(Wr(e.values));return t.index=Wr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=xe(0,e.shape[0]).map(r=>"row"+Gr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new _(Tt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(Va(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>D(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(xe(0,r/2).concat(xe(t.index.length-r/2,t.index.length)));let o=Tt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Xr(e)||ve(e)||D(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;D(e)&&(t=!0),ve(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Xr(e)&&(t=e);let r=this,s=Be([r.values,r.index]);s=Be(Qr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new _(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=Be([e.values,e.index]);t=Be(Qr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new _(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=Tt(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new _,r.name=t.name,r):(r.values=i,r.index=s,r)}};Zr.exports=_});var St=a((nm,Hr)=>{var ka=m(),Pa=h();function $a(n,e){ka(Pa(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}Hr.exports=$a});var Fe=a((rm,Dr)=>{var _a=g(),Ba=p();function Ja(n){return typeof n=="object"&&!Ba(n)&&!_a(n)}Dr.exports=Ja});var At=a((sm,es)=>{var Fa=P(),La=Fe(),Ra=Z(),Ka=p(),Wa=re();function Qa(n,e){e=(()=>{if(Ka(e))return!0;if(Ra(e))return e;throw new Wa("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>Fa(u)?JSON.stringify(u):La(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}es.exports=Qa});var ns=a((om,ts)=>{var Xa=At();function Ga(n,e,t){let r=Xa(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ct("fs"),o=ct("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}ts.exports=Ga});var Et=a((am,os)=>{var L=g(),rs=Z(),im=Fe(),um=St(),Za=Y(),ss=$(),Le=P(),Re=re(),Ke=p(),R=m();function Ha(n,e,t,r,s,o){return t=(()=>{if(Ke(t))return!1;if(rs(t))return t;throw new Re("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Ke(r))return!1;if(rs(r))return r;throw new Re("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Ke(s))return",";if(Le(s))return R(s.length===1,u),s;if(L(s))return R(s.length===2,u),R(s[0].length===1,u),R(s[1].length===1,u),s;throw new Re(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Ke(o))return'"';if(Le(o))return R(o.length===1,u),o;if(L(o))return R(o.length===2,u),R(o[0].length===1,u),R(o[1].length===1,u),o;throw new Re(u)})(),(()=>{let l=e.split(`
`).filter(E=>E.length>0).map(E=>{let M=[],ne="",pe=!1;for(let F=0;F<E.length;F++){let I=E[F];if(I.match(/\\/g))F++;else if(L(o)&&I===o[0])pe=!0;else if(L(o)&&I===o[1])pe=!1;else if(Le(o)&&I===o)pe=!pe;else if(L(s)&&I===s[0]||L(s)&&I===s[1]||Le(s)&&I===s)if(pe)ne+=I;else{let ut=ne;try{let at=JSON.parse(ut);L(at)?M.push(ut.trim()):M.push(at)}catch{M.push(ut.trim())}ne=""}else ne+=I}if(ne.length>0){let F=ne;try{let I=JSON.parse(F);L(I)?M.push(F.trim()):M.push(I)}catch{M.push(F.trim())}}return M}),c=(()=>{let E=t?l.shift():ss(0,l[0].length).map(M=>"col"+M);return r&&E.shift(),E})(),d=(()=>r?l.map(M=>M.shift()):ss(0,l.length).map(M=>"row"+M))(),q=Za(l.map(E=>E.length)),j=new n(l.map(E=>(E.length=q,E)));return t&&(j.columns=c),r&&(j.index=d),j})()}os.exports=Ha});var us=a((cm,is)=>{var Da=m(),ec=Et(),tc=P(),nc=p(),rc=re();async function sc(n,e,t,r,s,o,i){t=(()=>nc(t)?"utf8":(Da(tc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ct("fs").readFileSync(e,t)}catch{}throw new rc(`The path "${e}" could not be loaded!`)})();return ec(n,u,r,s,o,i)}is.exports=sc});var We=a((lm,as)=>{var oc=h(),ic=b();function uc(n){try{return oc(n)?Math.floor(n):NaN}catch{return NaN}}as.exports=ic(uc)});var Mt=a((hm,ls)=>{var cs=m(),ac=p(),cc=g(),fm=We(),{random:lc}=G();function fc(n){cs(!ac(n),"You must pass an array into the `shuffle` function!"),cs(cc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(lc()*t.length);e.push(t.splice(s,1)[0])}return e}ls.exports=fc});var ms=a((mm,hs)=>{var hc=p(),mc=m(),fs=Mt();function pc(n,e){return hc(e)&&(e=0),mc(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?fs(n.index):null,e===1?fs(n.columns):null)}hs.exports=pc});var qs=a((pm,gs)=>{var ps=m(),dc=C(),gc=p(),Qe=ae(),Te=x();function ds(n){let e={};return Te(n).forEach((t,r)=>{e[t]=r}),e}function ce(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function qc(n,e,t,r){ps(dc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),gc(r)&&(r=0),ps(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=ds(s.index),i=ds(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let d=new Qe(l);d.name=e.index[c],d.index=e.columns;let q=t(d,c,e);return q||delete o[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Qe(Te(u));return l.name=ce(o)[0],l.index=ce(i),l}s.values=u,s.index=ce(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let d=new Qe(l);d.name=e.columns[c],d.index=e.index;let q=t(d,c,e);return q||delete i[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Qe(Te(u));return l.name=ce(i)[0],l.index=ce(o),l}s.values=u,s.index=ce(i),s=s.transpose()}return s}gs.exports=qc});var xs=a((dm,ws)=>{var{random:yc}=G(),ys=p(),It=h(),le=P(),jt=Z(),bs=g(),V=m(),Ns=T(),bc=$(),Nc=H(),wc=x();function xc(n,e,t){let r=n.copy(),s=yc().toString();return r=r.assign(s,r.index),ys(e)&&(e=[s],t=[!0]),(It(e)||le(e))&&(e=[e],(jt(t)||le(t))&&(t=[t])),V(bs(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),V(Ns(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),ys(t)&&(t=bc(0,e.length).map(o=>!0)),V(bs(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(Ns(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(V(le(o)||It(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),le(o)){let i=r.columns.indexOf(o);return V(i>-1,`The column "${o}" does not exist!`),i}if(It(o))return V(parseInt(o)===o,"Column indices must be whole numbers!"),V(o>=0,`The column index ${o} is out of bounds!`),V(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(V(le(o)||jt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),le(o)){let i=o.trim().toLowerCase();return V(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(jt(o))return o}),r.values=Nc(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=wc(r.get(null,s).values),r=r.dropColumns(s),r}ws.exports=xc});var Ts=a((gm,vs)=>{var vc=P(),Tc=Q(),Oe=$(),Xe=ae();function Oc(n,e){function t(q,j){return vc(q)&&q.length>j?q.substring(0,j-3)+"...":q}if(Tc(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Oe(0,s).concat(Oe(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Oe(0,i).concat(Oe(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Xe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Xe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Xe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Oe(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let d=28;return c instanceof Xe?(c.values=c.values.map(q=>t(q,d)),c.name=t(c.name,d),c.index=c.index.map(q=>t(q,d))):(c.values=c.values.map(q=>q.map(j=>t(j,d))),c.columns=c.columns.map(q=>t(q,d)),c.index=c.index.map(q=>t(q,d))),console.table(c.toObject()),e}vs.exports=Oc});var Ss=a((qm,Os)=>{function Sc(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}Os.exports=Sc});var Je=a((Tm,Ms)=>{var{random:ym}=G(),bm=k(),f=m(),ee=oe(),As=Pe(),Ac=$e(),Vt=x(),A=g(),Nm=Z(),Ec=Q(),Mc=C(),Ae=h(),B=P(),S=p(),wm=Y(),xm=Ue(),Ic=z(),fe=$(),te=ae(),Es=X(),v=T(),vm=H(),Se=se(),Ge=St(),jc=ns(),Vc=At(),Uc=us(),Yc=Et(),Cc=ms(),zc=qs(),kc=xs(),Pc=Ts(),$c=Ss();function Ze(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function _c(n){return Ae(n)&&parseInt(n)===n}function He(n){return _c(n)&&n>=0}function Bc(n){return n instanceof Object&&!A(n)}function he(n){return n instanceof te}var w=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){f(A(r),"The new values must be a 2-dimensional array!");let s=v(r);f(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(fe(t._index.length,s[0]).map(o=>"row"+Ge(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(fe(t._columns.length,s[1]).map(o=>"col"+Ge(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){f(A(r),"The new columns list must be a 1-dimensional array of strings!"),f(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),f(v(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ze(8):o.trim()));let s=(()=>{let o=As(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ze(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){f(A(r),"The new index must be a 1-dimensional array of strings!"),f(r.length===t.shape[0],"The new index must be the same length as the old index!"),f(v(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ze(8):o.trim()));let s=(()=>{let o=As(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ze(8):o),t._index=r}}),f(S(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(A(e)){let r=v(e);f(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Se(r);let s=v(t.values);t._index=fe(0,s[0]).map(o=>"row"+Ge(o,(s[0]-1).toString().length))}}get shape(){return v(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Es(this.values).filter(t=>!S(t)).length===0}clear(){let e=this,t=new w(Ic(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(B(e)||Ae(e))&&(e=[e]),(B(t)||Ae(t))&&(t=[t]);let s=Es((e||[]).concat(t||[]).map(o=>typeof o));return f(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&f(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(f(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),f(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),S(e)||(e=e.map(o=>{if(typeof o=="string")return f(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Index ${o} is out of bounds!`),f(parseInt(o)===o,"Row numbers must be integers!"),f(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),S(t)||(t=t.map(o=>{if(typeof o=="string")return f(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Column ${o} is out of bounds!`),f(parseInt(o)===o,"Column numbers must be integers!"),f(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;S(e)&&(e=r.index),S(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),f(A(e)&&A(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(v(e).length===1&&v(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(e.length>0,"The `rows` array must contain at least one row name."),f(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{f(B(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{f(B(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return Vt(s)[0];if(e.length===1){let i=new te(Vt(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new te(Vt(s));return i.name=t[0],i.index=e,i}let o=new w(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;S(e)&&(e=fe(0,s[0])),S(t)&&(t=fe(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),f(A(e)&&A(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(v(e).length===1&&v(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(e.length>0,"The `rowIndices` array must contain at least one index."),f(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{f(He(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{f(He(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new w(Se(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=fe(0,e.shape[0]).map(r=>"row"+Ge(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new w;let t=new w(ee(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;S(t)?(s=e,f(!A(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,f(B(r),"When using two parameters for the `assign` method, the first parameter must be a string."),f(he(s)||A(s)&&v(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),f(Bc(s)||he(s)||A(s)&&v(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(he(s)){let i={};return f(o.isEmpty()||Ec(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(A(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(l=>{let c=s[l];if(f(A(c),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),f(v(c).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=Se([c]),i.columns=[l],u=i.shape;else{f(c.length===u[0],`Column "${l}" in the new data is not the same length as the other columns in the original DataFrame.`);let d=i.columns.indexOf(l);d<0&&(i.columns.push(l),d=i.columns.indexOf(l)),i.values.forEach((q,j)=>{q[d]=c[j]})}}),i}}apply(e,t){t=t||0,f(Mc(e),"The first parameter to the `apply` method must be a function."),f(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=Se(r.values).map((i,u)=>{let l=new te(i);return l.name=r.columns[u],l.index=r.index,e(l,u,r)});if(v(o).length===1){let i=new te(o);return i.index=ee(r.columns),i}else{let i=new w(Se(o));return i.index=ee(r.index),i.columns=ee(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new te(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(v(s).length===1){let o=new te(s);return o.index=ee(r.index),o}else{let o=new w(s);return o.index=ee(r.index),o.columns=ee(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,f(He(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(l){if(r>0){let c=0;for(let d=0;d<l.length;d++){let q=l[d];if(S(q)&&c++,c>=r)return[]}}else if(t==="any")for(let c=0;c<l.length;c++){let d=l[c];if(S(d))return[]}else if(t==="all"){for(let c=0;c<l.length;c++){let d=l[c];if(!S(d))return l}return[]}return l}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let l=i.values.map(s).filter(d=>d.length>0);if(v(l).length<2)return new w;i.values=l;let c=i.get(null,u);if(S(c))return new w;B(c)&&(c=[c]),he(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(s).filter(d=>d.length>0);if(v(l).length<2)return new w;i.values=l;let c=i.get(null,u);if(S(c))return new w;B(c)&&(c=[c]),he(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,f(He(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(l){let c=Ac(l);return r>0?l.length-c.length<r:t==="any"?c.length===l.length:t==="all"?c.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let l=i.index.filter(c=>{let d=i.get(c,null).values;return s(d)});return l.length>0?i.get(l,null):new w}else if(e===1){let l=i.columns.filter(c=>{let d=i.get(null,c).values;return s(d)});return l.length>0?i.get(null,l):new w}return i}drop(e,t){let r=this;S(e)&&(e=[]),S(t)&&(t=[]),(B(e)||Ae(e))&&(e=[e]),(B(t)||Ae(t))&&(t=[t]),f(A(e),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(A(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(v(e).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(v(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;r.index.forEach((u,l)=>{e.indexOf(u)<0&&e.indexOf(l)<0&&(s||(s=[]),s.push(u))}),r.columns.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=r.get(s,o);if(he(i)){let u=new w;u=u.assign(i),r.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return $c(this)}toCSVString(e){return Vc(this,e)}toCSV(e,t){return jc(this,e,t)}print(){return Pc(w,this)}sort(e,t){return kc(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return zc(w,this,e,t)}shuffle(e){return Cc(this,e)}};w.fromCSV=function(){return Uc(w,...arguments)};w.fromCSVString=function(){return Yc(w,...arguments)};Ms.exports=w});var Ys=a((Om,Us)=>{var Is=m(),js=g(),Vs=x();function Jc(n,e){Is(js(n),"You must pass two arrays into the `diff` function!"),Is(js(e),"You must pass two arrays into the `diff` function!");let t=Vs(n),r=Vs(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}Us.exports=Jc});var De=a((Sm,zs)=>{var Cs=h(),Fc=b();function Lc(n,e){try{return Cs(n)?Cs(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}zs.exports=Fc(Lc)});var et=a((Am,ks)=>{var Rc=de(),Kc=x();function Wc(n){try{return Rc(...Kc(n))}catch{return NaN}}ks.exports=Wc});var Ut=a((Em,Ps)=>{var Qc=h(),Xc=b();function Gc(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Qc(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}Ps.exports=Xc(Gc)});var me=a((Mm,$s)=>{var Zc=Ut();function Hc(n,e){return Zc(n,e)}$s.exports=Hc});var Yt=a((Im,_s)=>{var Dc=de(),el=me();function tl(n,e){return Dc(n,el(e,-1))}_s.exports=tl});var Js=a((jm,Bs)=>{var nl=De(),rl=et(),sl=ze(),ol=Yt();function il(n,e){try{return sl(rl(nl(ol(n,e),2)))}catch{return NaN}}Bs.exports=il});var Ls=a((Vm,Fs)=>{var ul=me(),al=De();function cl(n,e){return ul(n,al(e,-1))}Fs.exports=cl});var Ct=a((Ym,Gs)=>{var Ee=m(),Rs=p(),Ks=g(),ll=h(),Um=Q(),Ws=x(),Qs=T(),fl=et(),hl=me(),Xs=se();function tt(n,e){Ee(!Rs(n)&&!Rs(e),"You must pass two arrays of numbers into the `dot` function!"),Ee(Ks(n)&&Ks(e),"You must pass two arrays of numbers into the `dot` function!"),Ws(n).concat(Ws(e)).forEach(s=>{Ee(ll(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Qs(n),r=Qs(e);if(Ee(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Ee(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return fl(hl(n,e));if(t.length===1&&r.length===2)return Xs(e).map(s=>tt(n,s));if(t.length===2&&r.length===1)return n.map(s=>tt(s,e));if(t.length===2&&r.length===2){let s=Xs(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(tt(n[i],s[l]));o.push(u)}return o}}Gs.exports=tt});var Ds=a((Cm,Hs)=>{var Zs=m(),ml=g(),pl=p(),dl=T();function gl(n){return Zs(ml(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Zs(dl(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!pl(e))}Hs.exports=gl});var oo=a((zm,so)=>{var eo=m(),to=p(),no=g(),ql=Y(),ro=T();function yl(n,e){eo(no(n)&&no(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),eo(ro(n).length===1&&ro(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<ql([n.length,e.length]);s++)!to(n[s])&&!to(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}so.exports=yl});var ho=a((km,fo)=>{var io=m(),uo=p(),ao=g(),co=h(),bl=Y(),lo=T();function Nl(n,e){io(ao(n)&&ao(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),io(lo(n).length===1&&lo(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<bl([n.length,e.length]);s++)!uo(n[s])&&co(n[s])&&!uo(e[s])&&co(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}fo.exports=Nl});var po=a((Pm,mo)=>{var wl=b(),xl=h();function vl(n){try{return xl(n)?Math.exp(n):NaN}catch{return NaN}}mo.exports=wl(vl)});var yo=a(($m,qo)=>{var Tl=b();function go(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*go(n-1)}catch{return NaN}}qo.exports=Tl(go)});var No=a((_m,bo)=>{var Ol=h(),Sl=b();function Al(n){try{let e=JSON.parse(n);return Ol(e)?e:NaN}catch{return NaN}}bo.exports=Sl(Al)});var zt=a((Bm,wo)=>{var El=h(),Ml=b();function Il(n){try{let e=JSON.parse(n);return El(e)?parseInt(e):NaN}catch{return NaN}}wo.exports=Ml(Il)});var To=a((Jm,vo)=>{var K=m(),jl=p(),kt=g(),Pt=h(),xo=T(),Vl=zt();function $t(n,e){return K(!jl(n),"You must pass an array and an index into the `getValueAt` function!"),K(kt(n),"You must pass an array and an index into the `getValueAt` function!"),K(Pt(e)||kt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),kt(e)&&(K(xo(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{K(Pt(t)&&Vl(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),K(e.length<=xo(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Pt(e)?(K(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(K(e[0]<n.length,`The index ${e[0]} is out of bounds!`),$t(n[e[0]],e.slice(1))):$t(n,e[0])}vo.exports=$t});var _t=a((Rm,Oo)=>{var Fm=z(),Lm=k(),Ul=h(),Yl=ie();function Cl(n){Ul(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Yl(e,n)}Oo.exports=Cl});var Ao=a((Km,So)=>{var nt=m(),zl=p(),kl=h(),Pl=_t();function $l(n){nt(!zl(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(kl(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Pl([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}So.exports=$l});var Bt=a((Qm,Eo)=>{var Wm=m(),_l=X();function Bl(){return _l([...arguments])}Eo.exports=Bl});var Io=a((Xm,Mo)=>{var Jl=g(),Fl=x(),Ll=Bt();function Rl(){let n=Object.values(arguments).map(r=>Jl(r)?Fl(r):[r]),e=[];return Ll(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}Mo.exports=Rl});var Ft=a((Zm,Uo)=>{var Me=m(),rt=p(),jo=h(),Jt=g(),Kl=$(),Wl=x(),Gm=T(),Ql=We();function Vo(n,e){if(Me(!rt(n),"You must pass an array into the `slice` function!"),Me(Jt(n),"You must pass an array into the `slice` function!"),rt(e))return n.slice();Me(Jt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),Wl(e).forEach(s=>{Me(rt(s)||jo(s)&&Ql(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];rt(t)&&(t=Kl(0,n.length)),jo(t)&&(t=[t]);let r=[];return t.forEach(s=>{Me(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Jt(o)?r.push(Vo(n[s],e.slice(1,e.length))):r.push(n[s])}),r}Uo.exports=Vo});var ko=a((Hm,zo)=>{var J=m(),Xl=p(),Gl=g(),Lt=h(),Zl=x(),Hl=T(),st=Ft(),Dl=Ct(),Yo=de(),Co=me(),Rt=dt(),W=$();function Kt(n){J(!Xl(n),"You must pass a square 2D array into the `inverse` function!"),J(Gl(n),"You must pass a square 2D array into the `inverse` function!"),Zl(n).forEach(t=>J(Lt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=Hl(n);if(J(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),J(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),J(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return J(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;J(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return Co(u,1/i)}else if(e[0]>1){let t=(r,s)=>Lt(r)||Lt(s)?Co(r,s):Dl(r,s);for(let r=1;r<e[0]-1;r++)try{let s=st(n,[W(0,r),W(0,r)]),o=st(n,[W(0,r),W(r,e[0])]),i=st(n,[W(r,e[0]),W(0,r)]),u=st(n,[W(r,e[0]),W(r,e[0])]),l=Kt(s),c=Kt(Yo(u,t(-1,t(t(i,l),o)))),d=Yo(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),j=t(-1,t(t(c,i),l)),E=c;return Rt(Rt(d,q,1),Rt(j,E,1),0)}catch{}J(!1,"This matrix cannot be inverted!")}}zo.exports=Kt});var $o=a((Dm,Po)=>{var ef=b(),Wt=h();function tf(n,e,t){try{return Wt(n)?Wt(e)?Wt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}Po.exports=ef(tf)});var Jo=a((ep,Bo)=>{var _o=h(),nf=p(),rf=b();function sf(n,e){try{return e=nf(e)?Math.E:e,_o(n)?_o(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}Bo.exports=rf(sf)});var Lo=a((tp,Fo)=>{var Ie=h(),of=b();function uf(n,e,t,r,s){try{return Ie(n)?Ie(e)?Ie(t)?Ie(r)?Ie(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Fo.exports=of(uf)});var Ko=a((ip,Ro)=>{var np=m(),rp=p(),sp=g(),op=h(),af=x(),cf=H(),lf=$e();function ff(n){try{let e=af(n),t=lf(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=cf(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Ro.exports=ff});var Xo=a((up,Qo)=>{var hf=x(),mf=Pe(),pf=X(),Wo=H();function df(n){try{if(n.length===0)return NaN;let e=hf(n);if(e.length===0)return NaN;let t={},r=pf(e);r.forEach(u=>{t[u]=mf(e,u)});let s=Wo(r,(u,l)=>t[l]-t[u]),o=s[0],i=Wo(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Qo.exports=df});var Do=a((lp,Ho)=>{var gf=p(),ap=z(),cp=k(),{random:Go}=G(),qf=ie(),yf=h();function Zo(){let n=Go(),e=Go();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function bf(n){if(gf(n))return Zo();yf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Zo());return qf(e,n)}Ho.exports=bf});var ti=a((mp,ei)=>{var fp=z(),hp=k(),Nf=ie(),wf=h();function xf(n){wf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Nf(e,n)}ei.exports=xf});var si=a((pp,ri)=>{var ni=g(),vf=h(),ot=m(),Tf=p();function Qt(n,e){if(ot(ni(n),"The `permute` function only works on arrays!"),Tf(e)&&(e=n.length),ot(vf(e),"`r` must be a whole number!"),e>n.length)return Qt(n);if(e<=0)return[[]];if(ot(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{ot(!ni(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Qt(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}ri.exports=Qt});var ai=a((dp,ui)=>{var Of=g(),Sf=T(),oi=Je(),ii=ae();function Af(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(Of(e)){let t=Sf(e);t.length===1?new ii(e).print():t.length==2?new oi(e).print():console.log(e)}else e instanceof oi||e instanceof ii?e.print():console.log(e)})}ui.exports=Af});var li=a((gp,ci)=>{var Ef=h(),Mf=b();function If(n){try{return Ef(n)?Math.round(n):NaN}catch{return NaN}}ci.exports=Mf(If)});var Xt=a((qp,mi)=>{var fi=m(),jf=h(),hi=g(),Vf=oe();function Uf(n,e,t){fi(hi(n),"The first argument passed into the `setValueAt` function must be an array!"),jf(e)&&(e=[e]),fi(hi(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Vf(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}mi.exports=Uf});var di=a((yp,pi)=>{var Yf=h(),Cf=b();function zf(n){try{return Yf(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}pi.exports=Cf(zf)});var qi=a((bp,gi)=>{var kf=h(),Pf=b();function $f(n){try{return kf(n)?Math.sin(n):NaN}catch{return NaN}}gi.exports=Pf($f)});var bi=a((Np,yi)=>{var _f=ke();function Bf(n){return _f(n)}yi.exports=Bf});var wi=a((wp,Ni)=>{var Jf=h(),Ff=b();function Lf(n){try{return Jf(n)?Math.tan(n):NaN}catch{return NaN}}Ni.exports=Ff(Lf)});var it=a((xp,vi)=>{var xi=C();function Rf(n,e){assert(xi(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function Kf(n,e){assert(xi(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}vi.exports={timeSync:Rf,timeAsync:Kf}});var Si=a((vp,Oi)=>{var Ti=m(),Wf=g(),Qf=C(),Xf=k(),Gf=be(),Zf=Xt(),Hf=x();function Df(n,e){Ti(Wf(n),"The first argument passed into the `where` function must be an array!"),Ti(Qf(e),"The second argument passed into the `where` function must be a function!");let t=Hf(n).length,r=Xf(n,e),s=[],o=0,i=!1;for(;!i;){let u=Gf(r,!0);u?(s[o]=u,r=Zf(r,u,null),o++):i=!0}return o===0?null:s}Oi.exports=Df});var eh=a((Tp,Gt)=>{var je={abs:ht(),add:de(),append:dt(),apply:k(),arccos:Mn(),arcsin:jn(),arctan:Un(),argmax:Jn(),argmin:Rn(),assert:m(),ceil:Wn(),chop:Gn(),clamp:Hn(),cohensd:sr(),combine:ar(),copy:oe(),correl:qr(),cos:br(),count:Pe(),covariance:bt(),DataFrame:Je(),diff:Ys(),distance:Js(),divide:Ls(),dot:Ct(),dropMissing:Ds(),dropMissingPairwise:oo(),dropNaN:$e(),dropNaNPairwise:ho(),exp:po(),factorial:yo(),flatten:x(),float:No(),floor:We(),getValueAt:To(),identity:Ao(),indexOf:be(),int:zt(),intersect:Io(),inverse:ko(),isArray:g(),isBoolean:Z(),isEqual:Q(),isFunction:C(),isNumber:h(),isObject:Fe(),isString:P(),isUndefined:p(),lerp:$o(),log:Jo(),map:Lo(),MathError:re(),max:Y(),mean:Ne(),median:Ko(),min:Ue(),mode:Xo(),multiply:Ut(),ndarray:z(),normal:Do(),ones:ti(),permute:si(),pow:De(),print:ai(),random:G().random,range:$(),reshape:ie(),reverse:ge(),round:li(),scale:me(),seed:G().seed,Series:ae(),set:X(),setValueAt:Xt(),shape:T(),shuffle:Mt(),sign:di(),sin:qi(),slice:Ft(),sort:H(),sqrt:ze(),std:ke(),stdev:bi(),subtract:Yt(),sum:et(),tan:wi(),time:it().timeSync,timeSync:it().timeSync,timeAsync:it().timeAsync,transpose:se(),union:Bt(),variance:Ye(),vectorize:b(),where:Si(),zeros:_t(),dump:function(){Object.keys(je).forEach(n=>{typeof global<"u"&&(global[n]=je[n]),typeof window<"u"&&(window[n]=je[n])})}};typeof Gt<"u"&&(Gt.exports=je);typeof window<"u"&&(window.JSMathTools=je)});eh();})();
