(()=>{var ht=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var f=a((jm,on)=>{function Su(n){return typeof n=="number"&&!isNaN(n)}on.exports=Su});var re=a((Um,an)=>{var un=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};an.exports=un});var h=a((Vm,cn)=>{var Ou=re();cn.exports=function(n,e){if(!n)throw new Ou(e)}});var m=a((Ym,ln)=>{function Au(n){return n===null||typeof n>"u"}ln.exports=Au});var p=a((Cm,fn)=>{function Eu(n){return n instanceof Array}fn.exports=Eu});var x=a((_m,dn)=>{var hn=h(),Mu=m(),mn=p();function pn(n){hn(!Mu(n),"You must pass one array into the `flatten` function!"),hn(mn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){mn(t)?e=e.concat(pn(t)):e.push(t)}),e}dn.exports=pn});var Y=a((zm,gn)=>{var Iu=x(),ju=f();function Uu(n){try{let e=Iu(n),t=-1/0;for(let r=0;r<e.length;r++){if(!ju(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}gn.exports=Uu});var V=a((Pm,qn)=>{function Vu(n){return typeof n=="function"}qn.exports=Vu});var y=a((km,yn)=>{var mt=h(),Yu=m(),pt=p(),Cu=Y(),_u=V();function zu(n){return mt(!Yu(n),"You must pass a function into the `vectorize` function!"),mt(_u(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>pt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>pt(arguments[i])).map(i=>arguments[i].length),o=Cu(s);s.forEach(i=>{mt(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>pt(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}yn.exports=zu});var dt=a(($m,bn)=>{var Pu=f(),ku=y();function $u(n){try{return Pu(n)?Math.abs(n):NaN}catch{return NaN}}bn.exports=ku($u)});var he=a((Bm,Nn)=>{var Bu=f(),Ju=y();function Ru(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Bu(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}Nn.exports=Ju(Ru)});var N=a((Jm,vn)=>{var Ve=h(),Wu=m(),xn=p(),Fu=Y();function wn(n){Ve(!Wu(n),"You must pass an array into the `shape` function!"),Ve(xn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>xn(r));if(t.indexOf(!0)>-1){Ve(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Fu(r);r.forEach(function(o){Ve(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(wn(n[0]))}return e}vn.exports=wn});var me=a((Rm,Sn)=>{var Tn=h(),Lu=m(),Ku=p();function Gu(n){Tn(!Lu(n),"You must pass an array into the `reverse` function!"),Tn(Ku(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}Sn.exports=Gu});var C=a((Wm,An)=>{var pe=h(),Qu=m(),Xu=p(),Zu=f(),Hu=x(),de="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function On(n,e){if(e||(pe(!Qu(n),de),Xu(n)||(n=[n]),n=Hu(n),pe(n.length>0,de),n.forEach(t=>{pe(Zu(t),de),pe(parseInt(t)===t,de),pe(t>=0,de)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(On(n.slice(1),!0));return t}}An.exports=On});var B=a((Fm,Mn)=>{var gt=h(),Du=m(),ea=p(),ta=N(),En=me(),na=C();function ra(n){gt(!Du(n),"You must pass an array into the `transpose` function!"),gt(ea(n),"You must pass an array into the `transpose` function!");let e=ta(n);if(gt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return En(n);if(e.length===2){let t=na(En(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}Mn.exports=ra});var yt=a((Lm,Yn)=>{var I=h(),In=m(),jn=p(),sa=f(),Un=N(),qt=B();function Vn(n,e,t=0){I(!In(n),"You must pass two arrays into the `append` function!"),I(!In(e),"You must pass two arrays into the `append` function!"),I(jn(n),"You must pass two arrays into the `append` function!"),I(jn(e),"You must pass two arrays into the `append` function!"),I(sa(t),"The `axis` argument to the `append` function must be 0 or 1!"),I(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),I(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=Un(n),s=Un(e);I(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),I(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&I(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(I(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return qt(Vn(qt(n),qt(e),0))}}Yn.exports=Vn});var _=a((Km,Cn)=>{var oa=y();function ia(n,e){try{return e(n)}catch{return NaN}}Cn.exports=oa(ia)});var zn=a((Gm,_n)=>{var ua=f(),aa=y();function ca(n){try{return ua(n)?Math.acos(n):NaN}catch{return NaN}}_n.exports=aa(ca)});var kn=a((Qm,Pn)=>{var la=f(),fa=y();function ha(n){try{return la(n)?Math.asin(n):NaN}catch{return NaN}}Pn.exports=fa(ha)});var Bn=a((Xm,$n)=>{var ma=f(),pa=y();function da(n){try{return ma(n)?Math.atan(n):NaN}catch{return NaN}}$n.exports=pa(da)});var J=a((Hm,Rn)=>{var Zm=p();function Jn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!Jn(n[u],e[u]))return!1}return!0}}}Rn.exports=Jn});var ge=a((Dm,Gn)=>{var Wn=h(),ga=m(),Fn=p(),bt=N(),Ln=J();function Kn(n,e,t){if(Wn(!ga(n),"You must pass an array and a value into the `indexOf` function!"),Wn(Fn(n),"You must pass an array and a value into the `indexOf` function!"),bt(n).length===1||Fn(e)&&Ln(bt(n[0]),bt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Ln(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Kn(s,e);if(o)return[r].concat(o)}return null}Gn.exports=Kn});var Xn=a((ep,Qn)=>{var qa=ge(),ya=Y();function ba(n){try{return qa(n,ya(n))}catch{return NaN}}Qn.exports=ba});var Ye=a((tp,Zn)=>{var Na=x(),xa=f();function wa(n){try{let e=Na(n),t=1/0;for(let r=0;r<e.length;r++){if(!xa(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Zn.exports=wa});var Dn=a((np,Hn)=>{var va=ge(),Ta=Ye();function Sa(n){try{return va(n,Ta(n))}catch{return NaN}}Hn.exports=Sa});var tr=a((rp,er)=>{var Oa=f(),Aa=y();function Ea(n){try{return Oa(n)?Math.ceil(n):NaN}catch{return NaN}}er.exports=Aa(Ea)});var sr=a((sp,rr)=>{var Ma=m(),Ia=dt(),ja=y(),nr=f();function Ua(n,e){try{if(!nr(n))return NaN;if(Ma(e))e=1e-10;else if(!nr(e))return NaN;return Ia(n)<e?0:n}catch{return NaN}}rr.exports=ja(Ua)});var ir=a((op,or)=>{var Nt=f(),Va=y();function Ya(n,e,t){try{return Nt(n)?Nt(e)?Nt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}or.exports=Va(Ya)});var qe=a((ip,ur)=>{var Ca=f(),_a=x();function za(n){try{let e=_a(n),t=0;for(let r=0;r<e.length;r++){if(!Ca(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}ur.exports=za});var Ce=a((up,ar)=>{var Pa=qe(),ka=x(),$a=f();function Ba(n){try{let e=ka(n),t=Pa(e),r=0;for(let s=0;s<e.length;s++){if(!$a(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}ar.exports=Ba});var hr=a((ap,fr)=>{var cr=qe(),lr=Ce();function Ja(n,e){try{let t=cr(n),r=cr(e),s=Math.sqrt((lr(n)+lr(e))/2);return(t-r)/s}catch{return NaN}}fr.exports=Ja});var gr=a((cp,dr)=>{var mr=p(),Ra=f(),_e=h();function pr(n,e){if(_e(mr(n),"The `combine` function only works on arrays!"),_e(Ra(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(_e(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{_e(!mr(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;pr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}dr.exports=pr});var R=a((fp,qr)=>{var lp=h(),Wa=m(),Fa=p();function xt(n){if(typeof n=="object"){if(Wa(n))return n;if(Fa(n))return n.map(xt);{let e={};return Object.keys(n).forEach(function(t){e[t]=xt(n[t])}),e}}else return n}qr.exports=xt});var wt=a((hp,Nr)=>{var yr=qe(),br=m();function La(n,e){try{let t=yr(n),r=yr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(br(n[i]))return NaN;if(br(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}Nr.exports=La});var ze=a((mp,xr)=>{var Ka=f(),Ga=y();function Qa(n){try{return Ka(n)?Math.sqrt(n):NaN}catch{return NaN}}xr.exports=Ga(Qa)});var Pe=a((pp,wr)=>{var Xa=ze(),Za=Ce();function Ha(n){try{return Xa(Za(n))}catch{return NaN}}wr.exports=Ha});var Sr=a((dp,Tr)=>{var Da=wt(),vr=Pe();function ec(n,e){try{return Da(n,e)/(vr(n)*vr(e))}catch{return NaN}}Tr.exports=ec});var Ar=a((gp,Or)=>{var tc=f(),nc=y();function rc(n){try{return tc(n)?Math.cos(n):NaN}catch{return NaN}}Or.exports=nc(rc)});var Z=a((qp,Mr)=>{var Er=h(),sc=m(),oc=p(),ic=x();function uc(n){Er(!sc(n),"You must pass an array into the `set` function!"),Er(oc(n),"You must pass an array into the `set` function!");let e=[],t={};return ic(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Mr.exports=uc});var ke=a((yp,Yr)=>{var Ir=h(),jr=m(),Ur=p(),Vr=x(),ac=J(),cc=Z();function lc(n,e){Ir(!jr(n),"You must pass an array and some items to count into the `count` function!"),Ir(Ur(n),"You must pass an array and some items to count into the `count` function!");let t=Vr(n);return e=jr(e)?cc(n):e,Ur(e)?Vr(e).map(function(r){let s=t.filter(o=>ac(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Yr.exports=lc});var se=a((bp,kr)=>{var ye=h(),Cr=p(),_r=f(),fc=N(),zr=x(),hc=n=>n.reduce((e,t)=>e*t);function Pr(n,e){if(ye(Cr(n),"The first argument passed into the `reshape` function must be an array!"),_r(e)&&(e=[e]),ye(Cr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),ye(fc(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{ye(_r(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return zr(n);let t=zr(n);ye(hc(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Pr(i,e.slice(1)))}return r}kr.exports=Pr});var H=a((wp,Kr)=>{var Np=C(),xp=_(),Jr=m(),mc=h(),Rr=f(),Wr=R(),pc=se(),Fr=Math.pow(2,64),b=[];Lr(parseInt(Math.random()*Fr));function dc(n,e){n=T(n);function t(){n+=T("0x9e3779b97f4a7c15");let s=Wr(n);return s=(s^s>>30n)*T("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*T("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function T(n){return BigInt.asUintN(64,BigInt(n))}function $r(n,e){return n=T(n),e=BigInt(e),T(T(n<<e)|T(n>>T(64n-e)))}function Lr(n){if(Jr(n))return Wr(b);{mc(Rr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=dc(parseInt(n),4);b[0]=e[0],b[1]=e[1],b[2]=e[2],b[3]=e[3]}}function Br(){let n=T($r(b[0]+b[3],23)+b[0]),e=T(b[1]<<17n);return b[2]=T(b[2]^b[0]),b[3]=T(b[3]^b[1]),b[1]=T(b[1]^b[2]),b[0]=T(b[0]^b[3]),b[2]=T(b[2]^e),b[3]=$r(b[3],45),parseInt(n)/Fr}function gc(n){if(Jr(n))return Br();Rr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Br());return pc(e,n)}Kr.exports={random:gc,seed:Lr}});var be=a((vp,Qr)=>{var Gr=h(),qc=p(),yc=m(),bc=f(),Nc=N();function xc(n){return Gr(qc(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Gr(Nc(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!yc(e)&&bc(e))}Qr.exports=xc});var D=a((Tp,Xr)=>{function wc(n){return typeof n=="boolean"}Xr.exports=wc});var E=a((Sp,Zr)=>{function vc(n){return typeof n=="string"}Zr.exports=vc});var j=a((Op,Hr)=>{var vt=h(),Tt=m(),St=f(),Tc=me();function Sc(n,e,t=1){vt(!Tt(n)&&!Tt(e)&&!Tt(t),"You must pass two numbers and optionally a step value to the `range` function!"),vt(St(n)&&St(e)&&St(t),"You must pass two numbers and optionally a step value to the `range` function!"),vt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=Tc(s)),s}Hr.exports=Sc});var ee=a((Ap,es)=>{var Ot=h(),Dr=m(),Oc=p(),Ac=V();function Ec(n,e){return n<e?-1:n>e?1:0}function Mc(n,e){Dr(e)&&(e=Ec),Ot(!Dr(n),"You must pass an array into the `sort` function!"),Ot(Oc(n),"You must pass an array into the `sort` function!"),Ot(Ac(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}es.exports=Mc});var P=a((Ip,os)=>{var q=h(),$e=p(),te=m(),oe=N(),Be=B(),Ne=j(),Et=f(),xe=E(),Ep=_(),Ic=V(),jc=C(),At=R(),Uc=Z(),ts=me(),ns=ee(),rs=D(),Mp=Je();function Vc(n){return Et(n)&&parseInt(n)===n}function Yc(n){return Vc(n)&&n>=0}function ss(n,e){q(Et(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var z=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){q($e(r),"The new values must be a 1-dimensional array!");let s=oe(r);q(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(Ne(t._index.length,s[0]).map(o=>"row"+ss(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){q($e(r),"The new index must be a 1-dimensional array of strings!"),q(r.length===t.shape[0],"The new index must be the same length as the old index!"),q(oe(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{q(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=oe(e);q(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return oe(this.values)}isEmpty(){return this.values.filter(t=>!te(t)).length===0}clear(){let e=this,t=e.copy();return t.values=jc(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||Et(e))&&(e=[e]);let r=Uc((e||[]).map(s=>typeof s));return q(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&q(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(q(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),q(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),te(e)||(e=e.map(s=>{if(typeof s=="string")return q(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return q(s>=0,`Index ${s} is out of bounds!`),q(parseInt(s)===s,"Indices must be integers!"),q(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;te(e)&&(e=t.index),q($e(e),"The `indices` array must be a 1-dimensional array of strings."),q(oe(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),q(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{q(xe(o),"The `indices` array must contain only strings."),q(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new z(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;te(e)&&(e=Ne(0,r[0])),q($e(e),"The `indices` array must be 1-dimensional array of whole numbers."),q(oe(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),q(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{q(Yc(o),"The `indices` array must be a 1-dimensional array of whole numbers."),q(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new z(ts(e.values));return t.index=ts(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=Ne(0,e.shape[0]).map(r=>"row"+ss(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new z(At(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){q(Ic(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>te(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(Ne(0,r/2).concat(Ne(t.index.length-r/2,t.index.length)));let o=At(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){q(rs(e)||xe(e)||te(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;te(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),q(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),rs(e)&&(t=e);let r=this,s=Be([r.values,r.index]);s=Be(ns(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new z(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=Be([e.values,e.index]);t=Be(ns(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new z(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=At(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new z,r.name=t.name,r):(r.values=i,r.index=s,r)}};os.exports=z});var Re=a((jp,is)=>{var Cc=h(),_c=f();function zc(n,e){Cc(_c(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}is.exports=zc});var we=a((Up,us)=>{var Pc=p(),kc=m();function $c(n){return typeof n=="object"&&!kc(n)&&!Pc(n)}us.exports=$c});var Mt=a((Vp,as)=>{var Bc=E(),Jc=we(),Rc=D(),Wc=m(),Fc=re();function Lc(n,e){e=(()=>{if(Wc(e))return!0;if(Rc(e))return e;throw new Fc("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>Bc(u)?JSON.stringify(u):Jc(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}as.exports=Lc});var ls=a((Yp,cs)=>{var Kc=Mt();function Gc(n,e,t){let r=Kc(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ht("fs"),o=ht("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}cs.exports=Gc});var It=a((zp,ms)=>{var W=p(),fs=D(),Cp=we(),_p=Re(),Qc=Y(),hs=j(),We=E(),Fe=re(),Le=m(),F=h();function Xc(n,e,t,r,s,o){return t=(()=>{if(Le(t))return!1;if(fs(t))return t;throw new Fe("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Le(r))return!1;if(fs(r))return r;throw new Fe("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Le(s))return",";if(We(s))return F(s.length===1,u),s;if(W(s))return F(s.length===2,u),F(s[0].length===1,u),F(s[1].length===1,u),s;throw new Fe(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Le(o))return'"';if(We(o))return F(o.length===1,u),o;if(W(o))return F(o.length===2,u),F(o[0].length===1,u),F(o[1].length===1,u),o;throw new Fe(u)})(),(()=>{let l=e.split(`
`).filter(S=>S.length>0).map(S=>{let O=[],ne="",fe=!1;for(let $=0;$<S.length;$++){let A=S[$];if(A.match(/\\/g))$++;else if(W(o)&&A===o[0])fe=!0;else if(W(o)&&A===o[1])fe=!1;else if(We(o)&&A===o)fe=!fe;else if(W(s)&&A===s[0]||W(s)&&A===s[1]||We(s)&&A===s)if(fe)ne+=A;else{let lt=ne;try{let ft=JSON.parse(lt);W(ft)?O.push(lt.trim()):O.push(ft)}catch{O.push(lt.trim())}ne=""}else ne+=A}if(ne.length>0){let $=ne;try{let A=JSON.parse($);W(A)?O.push($.trim()):O.push(A)}catch{O.push($.trim())}}return O}),c=(()=>{let S=t?l.shift():hs(0,l[0].length).map(O=>"col"+O);return r&&S.shift(),S})(),d=(()=>r?l.map(O=>O.shift()):hs(0,l.length).map(O=>"row"+O))(),g=Qc(l.map(S=>S.length)),U=new n(l.map(S=>(S.length=g,S)));return t&&(U.columns=c),r&&(U.index=d),U})()}ms.exports=Xc});var ds=a((Pp,ps)=>{var Zc=h(),Hc=It(),Dc=E(),el=m(),tl=re();async function nl(n,e,t,r,s,o,i){t=(()=>el(t)?"utf8":(Zc(Dc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ht("fs").readFileSync(e,t)}catch{}throw new tl(`The path "${e}" could not be loaded!`)})();return Hc(n,u,r,s,o,i)}ps.exports=nl});var Ke=a((kp,gs)=>{var rl=f(),sl=y();function ol(n){try{return rl(n)?Math.floor(n):NaN}catch{return NaN}}gs.exports=sl(ol)});var jt=a((Bp,ys)=>{var qs=h(),il=m(),ul=p(),$p=Ke(),{random:al}=H();function cl(n){qs(!il(n),"You must pass an array into the `shuffle` function!"),qs(ul(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(al()*t.length);e.push(t.splice(s,1)[0])}return e}ys.exports=cl});var xs=a((Jp,Ns)=>{var ll=m(),fl=h(),bs=jt();function hl(n,e){return ll(e)&&(e=0),fl(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?bs(n.index):null,e===1?bs(n.columns):null)}Ns.exports=hl});var Ss=a((Rp,Ts)=>{var ws=h(),ml=V(),pl=m(),Ge=P(),ve=x();function vs(n){let e={};return ve(n).forEach((t,r)=>{e[t]=r}),e}function ie(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function dl(n,e,t,r){ws(ml(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),pl(r)&&(r=0),ws(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=vs(s.index),i=vs(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let d=new Ge(l);d.name=e.index[c],d.index=e.columns;let g=t(d,c,e);return g||delete o[s.index[c]],g});if(ve(u).length===0)return new n;if(u.length===1){let l=new Ge(ve(u));return l.name=ie(o)[0],l.index=ie(i),l}s.values=u,s.index=ie(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let d=new Ge(l);d.name=e.columns[c],d.index=e.index;let g=t(d,c,e);return g||delete i[s.index[c]],g});if(ve(u).length===0)return new n;if(u.length===1){let l=new Ge(ve(u));return l.name=ie(i)[0],l.index=ie(o),l}s.values=u,s.index=ie(i),s=s.transpose()}return s}Ts.exports=dl});var Is=a((Wp,Ms)=>{var{random:gl}=H(),Os=m(),Ut=f(),ue=E(),Vt=D(),As=p(),M=h(),Es=N(),ql=j(),yl=ee(),bl=x();function Nl(n,e,t){let r=n.copy(),s=gl().toString();return r=r.assign(s,r.index),Os(e)&&(e=[s],t=[!0]),(Ut(e)||ue(e))&&(e=[e],(Vt(t)||ue(t))&&(t=[t])),M(As(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),M(Es(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),Os(t)&&(t=ql(0,e.length).map(o=>!0)),M(As(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(Es(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(M(ue(o)||Ut(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ue(o)){let i=r.columns.indexOf(o);return M(i>-1,`The column "${o}" does not exist!`),i}if(Ut(o))return M(parseInt(o)===o,"Column indices must be whole numbers!"),M(o>=0,`The column index ${o} is out of bounds!`),M(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(M(ue(o)||Vt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ue(o)){let i=o.trim().toLowerCase();return M(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(Vt(o))return o}),r.values=yl(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=bl(r.get(null,s).values),r=r.dropColumns(s),r}Ms.exports=Nl});var Us=a((Fp,js)=>{var xl=E(),wl=J(),Te=j(),Qe=P();function vl(n,e){function t(g,U){return xl(g)&&g.length>U?g.substring(0,U-3)+"...":g}if(wl(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Te(0,s).concat(Te(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Te(0,i).concat(Te(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Qe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Qe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Qe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Te(0,c.columns.length).map(g=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(g=>(g.splice(i,0,"..."),g)));let d=28;return c instanceof Qe?(c.values=c.values.map(g=>t(g,d)),c.name=t(c.name,d),c.index=c.index.map(g=>t(g,d))):(c.values=c.values.map(g=>g.map(U=>t(U,d))),c.columns=c.columns.map(g=>t(g,d)),c.index=c.index.map(g=>t(g,d))),console.table(c.toObject()),e}js.exports=vl});var Ys=a((Lp,Vs)=>{function Tl(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}Vs.exports=Tl});var Se=a((Kp,Cs)=>{var Sl=P();function Ol(n){return n instanceof Sl}Cs.exports=Ol});var Js=a((Gp,Bs)=>{var _s=m(),zs=E(),Ps=f(),Xe=h(),ks=p(),$s=N(),Al=Se();function El(n,e,t,r){_s(t)&&(t=[]),_s(r)&&(r=[]),(zs(t)||Ps(t))&&(t=[t]),(zs(r)||Ps(r))&&(r=[r]),Xe(ks(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(ks(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe($s(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe($s(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if(Al(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}Bs.exports=El});var Oe=a((Qp,Rs)=>{var Ml=f();function Il(n){return Ml(n)&&parseInt(n)===n}function jl(n){return Il(n)&&n>=0}Rs.exports=jl});var Fs=a((Xp,Ws)=>{var Yt=h(),Ul=Oe(),Vl=be();function Yl(n,e,t,r,s){t=t||0,Yt(t===0||t===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,Yt(Ul(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",Yt(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(l){let c=Vl(l);return s>0?l.length-c.length<s:r==="any"?c.length===l.length:r==="all"?c.length>0:!0}let i=e.copy(),u=Math.random().toString();if(t===0){let l=i.index.filter(c=>{let d=i.get(c,null).values;return o(d)});return l.length>0?i.get(l,null):new n}else if(t===1){let l=i.columns.filter(c=>{let d=i.get(null,c).values;return o(d)});return l.length>0?i.get(null,l):new n}return i}Ws.exports=Yl});var Xs=a((Zp,Qs)=>{var Ct=h(),Cl=Oe(),Ae=m(),Ls=E(),Ks=Se(),Gs=N();function _l(n,e,t,r,s){t=t||0,Ct(t===0||t===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),s=s||0,Ct(Cl(s),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),r=s>0?"none":r||"any",Ct(r==="any"||r==="all"||r==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function o(l){if(s>0){let c=0;for(let d=0;d<l.length;d++){let g=l[d];if(Ae(g)&&c++,c>=s)return[]}}else if(r==="any")for(let c=0;c<l.length;c++){let d=l[c];if(Ae(d))return[]}else if(r==="all"){for(let c=0;c<l.length;c++){let d=l[c];if(!Ae(d))return l}return[]}return l}let i=e.copy(),u=Math.random().toString();if(t===0){i=i.assign(u,i.index);let l=i.values.map(o).filter(d=>d.length>0);if(Gs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Ae(c))return new n;Ls(c)&&(c=[c]),Ks(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(t===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(o).filter(d=>d.length>0);if(Gs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Ae(c))return new n;Ls(c)&&(c=[c]),Ks(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}Qs.exports=_l});var to=a((Hp,eo)=>{var zl=V(),Zs=h(),Hs=B(),Ze=P(),Ds=N(),ae=R();function Pl(n,e,t,r){if(r=r||0,Zs(zl(t),"The first parameter to the `apply` method must be a function."),Zs(r===0||r===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),r===0){let o=Hs(e.values).map((i,u)=>{let l=new Ze(i);return l.name=e.columns[u],l.index=e.index,t(l,u,e)});if(Ds(o).length===1){let i=new Ze(o);return i.index=ae(e.columns),i}else{let i=new n(Hs(o));return i.index=ae(e.index),i.columns=ae(e.columns),i}}else if(r===1){let s=e.values.map((o,i)=>{let u=new Ze(o);return u.name=e.index[i],u.index=e.columns,t(u,i,e)});if(Ds(s).length===1){let o=new Ze(s);return o.index=ae(e.index),o}else{let o=new n(s);return o.index=ae(e.index),o.columns=ae(e.columns),o}}}eo.exports=Pl});var ro=a((Dp,no)=>{var kl=m(),L=h(),$l=E(),_t=Se(),Ee=p(),zt=N(),Bl=we(),Jl=J(),Rl=B();function Wl(n,e,t){let r,s;if(kl(t)?(s=e,L(!Ee(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,L($l(r),"When using two parameters for the `assign` method, the first parameter must be a string."),L(_t(s)||Ee(s)&&zt(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),L(Bl(s)||_t(s)||Ee(s)&&zt(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method."),_t(s)){let o={};return L(n.isEmpty()||Jl(s.index,n.index),"The index of the new data does not match the index of the DataFrame."),o[r||s.name]=s.values,n.assign(o)}else if(Ee(s)){let o={};return o[r||"data"]=s,n.assign(o)}else{let o=n.copy(),i=o.shape;return Object.keys(s).forEach(u=>{let l=s[u];if(L(Ee(l),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),L(zt(l).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),o.isEmpty())o.values=Rl([l]),o.columns=[u],i=o.shape;else{L(l.length===i[0],`Column "${u}" in the new data is not the same length as the other columns in the original DataFrame.`);let c=o.columns.indexOf(u);c<0&&(o.columns.push(u),c=o.columns.indexOf(u)),o.values.forEach((d,g)=>{d[c]=l[g]})}}),o}}no.exports=Wl});var oo=a((ed,so)=>{var Fl=R();function Ll(n,e){if(e.isEmpty())return new n;let t=new n(Fl(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}so.exports=Ll});var uo=a((td,io)=>{var Kl=j(),Gl=Re();function Ql(n){let e=n.copy();return e.index=Kl(0,n.shape[0]).map(t=>"row"+Gl(t,(e.index.length-1).toString().length)),e}io.exports=Ql});var go=a((nd,po)=>{var ao=m(),co=j(),lo=p(),fo=f(),K=h(),ho=N(),mo=Oe();function Xl(n,e,t){let r=n.shape;ao(e)&&(e=co(0,r[0])),ao(t)&&(t=co(0,r[1])),fo(e)&&(e=[e]),fo(t)&&(t=[t]),K(lo(e)&&lo(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(ho(e).length===1&&ho(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(e.length>0,"The `rowIndices` array must contain at least one index."),K(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(i=>{K(mo(i),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(i<n.index.length,`The row index ${i} is out of bounds.`)}),t.forEach(i=>{K(mo(i),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),K(i<n.columns.length,`The column index ${i} is out of bounds.`)});let s=e.map(i=>n.index[i]),o=t.map(i=>n.columns[i]);return n.getSubsetByNames(s,o)}po.exports=Xl});var wo=a((rd,xo)=>{var qo=m(),He=E(),yo=p(),bo=N(),G=h(),Pt=x(),No=P();function Zl(n,e,t,r){qo(t)&&(t=e.index),qo(r)&&(r=e.columns),He(t)&&(t=[t]),He(r)&&(r=[r]),G(yo(t)&&yo(r),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),G(bo(t).length===1&&bo(r).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),G(t.length>0,"The `rows` array must contain at least one row name."),G(r.length>0,"The `cols` array must contain at least one column name."),t.forEach(i=>{G(He(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),G(e.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),r.forEach(i=>{G(He(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),G(e.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=t.map(i=>r.map(u=>e.values[e.index.indexOf(i)][e.columns.indexOf(u)]));if(t.length===1&&r.length===1)return Pt(s)[0];if(t.length===1){let i=new No(Pt(s));return i.name=t[0],i.index=r,i}if(r.length===1){let i=new No(Pt(s));return i.name=r[0],i.index=t,i}let o=new n(s);return o.columns=r,o.index=t,o}xo.exports=Zl});var Je=a((yd,Eo)=>{var{random:sd}=H(),od=_(),w=h(),id=R(),vo=ke(),ud=be(),ad=x(),De=p(),cd=D(),ld=J(),fd=V(),To=f(),So=E(),et=m(),hd=Y(),md=Ye(),Hl=C(),kt=j(),pd=P(),Oo=Z(),ce=N(),dd=ee(),Ao=B(),$t=Re(),Dl=ls(),ef=Mt(),tf=ds(),nf=It(),rf=xs(),sf=Ss(),of=Is(),uf=Us(),af=Ys(),cf=Js(),gd=Se(),lf=Fs(),qd=Oe(),ff=Xs(),hf=to(),mf=ro(),pf=oo(),df=uo(),gf=go(),qf=wo();function tt(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}var v=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){w(De(r),"The new values must be a 2-dimensional array!");let s=ce(r);w(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(kt(t._index.length,s[0]).map(o=>"row"+$t(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(kt(t._columns.length,s[1]).map(o=>"col"+$t(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){w(De(r),"The new columns list must be a 1-dimensional array of strings!"),w(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),w(ce(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+tt(8):o.trim()));let s=(()=>{let o=vo(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+tt(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){w(De(r),"The new index must be a 1-dimensional array of strings!"),w(r.length===t.shape[0],"The new index must be the same length as the old index!"),w(ce(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+tt(8):o.trim()));let s=(()=>{let o=vo(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+tt(8):o),t._index=r}}),w(et(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(De(e)){let r=ce(e);w(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Ao(r);let s=ce(t.values);t._index=kt(0,s[0]).map(o=>"row"+$t(o,(s[0]-1).toString().length))}}get shape(){return ce(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Oo(this.values).filter(t=>!et(t)).length===0}clear(){let e=this,t=new v(Hl(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(So(e)||To(e))&&(e=[e]),(So(t)||To(t))&&(t=[t]);let s=Oo((e||[]).concat(t||[]).map(o=>typeof o));return w(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&w(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(w(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),w(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),et(e)||(e=e.map(o=>{if(typeof o=="string")return w(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return w(o>=0,`Index ${o} is out of bounds!`),w(parseInt(o)===o,"Row numbers must be integers!"),w(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),et(t)||(t=t.map(o=>{if(typeof o=="string")return w(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return w(o>=0,`Column ${o} is out of bounds!`),w(parseInt(o)===o,"Column numbers must be integers!"),w(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){return qf(v,this,e,t)}getSubsetByIndices(e,t){return gf(this,e,t)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new v(Ao(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){return df(this)}copy(){return pf(v,this)}assign(e,t){return mf(this,e,t)}apply(e,t){return hf(v,this,e,t)}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){return ff(v,this,e,t,r)}dropNaN(e,t,r){return lf(v,this,e,t,r)}drop(e,t){return cf(v,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return af(this)}toCSVString(e){return ef(this,e)}toCSV(e,t){return Dl(this,e,t)}print(){return uf(v,this)}sort(e,t){return of(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return sf(v,this,e,t)}shuffle(e){return rf(this,e)}};v.fromCSV=function(){return tf(v,...arguments)};v.fromCSVString=function(){return nf(v,...arguments)};Eo.exports=v});var Vo=a((bd,Uo)=>{var Mo=h(),Io=p(),jo=x();function yf(n,e){Mo(Io(n),"You must pass two arrays into the `diff` function!"),Mo(Io(e),"You must pass two arrays into the `diff` function!");let t=jo(n),r=jo(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}Uo.exports=yf});var nt=a((Nd,Co)=>{var Yo=f(),bf=y();function Nf(n,e){try{return Yo(n)?Yo(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}Co.exports=bf(Nf)});var rt=a((xd,_o)=>{var xf=he(),wf=x();function vf(n){try{return xf(...wf(n))}catch{return NaN}}_o.exports=vf});var Bt=a((wd,zo)=>{var Tf=f(),Sf=y();function Of(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Tf(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}zo.exports=Sf(Of)});var le=a((vd,Po)=>{var Af=Bt();function Ef(n,e){return Af(n,e)}Po.exports=Ef});var Jt=a((Td,ko)=>{var Mf=he(),If=le();function jf(n,e){return Mf(n,If(e,-1))}ko.exports=jf});var Bo=a((Sd,$o)=>{var Uf=nt(),Vf=rt(),Yf=ze(),Cf=Jt();function _f(n,e){try{return Yf(Vf(Uf(Cf(n,e),2)))}catch{return NaN}}$o.exports=_f});var Ro=a((Od,Jo)=>{var zf=le(),Pf=nt();function kf(n,e){return zf(n,Pf(e,-1))}Jo.exports=kf});var Rt=a((Ed,Qo)=>{var Me=h(),Wo=m(),Fo=p(),$f=f(),Ad=J(),Lo=x(),Ko=N(),Bf=rt(),Jf=le(),Go=B();function st(n,e){Me(!Wo(n)&&!Wo(e),"You must pass two arrays of numbers into the `dot` function!"),Me(Fo(n)&&Fo(e),"You must pass two arrays of numbers into the `dot` function!"),Lo(n).concat(Lo(e)).forEach(s=>{Me($f(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Ko(n),r=Ko(e);if(Me(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Me(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return Bf(Jf(n,e));if(t.length===1&&r.length===2)return Go(e).map(s=>st(n,s));if(t.length===2&&r.length===1)return n.map(s=>st(s,e));if(t.length===2&&r.length===2){let s=Go(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(st(n[i],s[l]));o.push(u)}return o}}Qo.exports=st});var Ho=a((Md,Zo)=>{var Xo=h(),Rf=p(),Wf=m(),Ff=N();function Lf(n){return Xo(Rf(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Xo(Ff(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!Wf(e))}Zo.exports=Lf});var si=a((Id,ri)=>{var Do=h(),ei=m(),ti=p(),Kf=Y(),ni=N();function Gf(n,e){Do(ti(n)&&ti(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Do(ni(n).length===1&&ni(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Kf([n.length,e.length]);s++)!ei(n[s])&&!ei(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}ri.exports=Gf});var fi=a((jd,li)=>{var oi=h(),ii=m(),ui=p(),ai=f(),Qf=Y(),ci=N();function Xf(n,e){oi(ui(n)&&ui(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),oi(ci(n).length===1&&ci(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Qf([n.length,e.length]);s++)!ii(n[s])&&ai(n[s])&&!ii(e[s])&&ai(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}li.exports=Xf});var mi=a((Ud,hi)=>{var Zf=y(),Hf=f();function Df(n){try{return Hf(n)?Math.exp(n):NaN}catch{return NaN}}hi.exports=Zf(Df)});var gi=a((Vd,di)=>{var eh=y();function pi(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*pi(n-1)}catch{return NaN}}di.exports=eh(pi)});var yi=a((Yd,qi)=>{var th=f(),nh=y();function rh(n){try{let e=JSON.parse(n);return th(e)?e:NaN}catch{return NaN}}qi.exports=nh(rh)});var Wt=a((Cd,bi)=>{var sh=f(),oh=y();function ih(n){try{let e=JSON.parse(n);return sh(e)?parseInt(e):NaN}catch{return NaN}}bi.exports=oh(ih)});var wi=a((_d,xi)=>{var Q=h(),uh=m(),Ft=p(),Lt=f(),Ni=N(),ah=Wt();function Kt(n,e){return Q(!uh(n),"You must pass an array and an index into the `getValueAt` function!"),Q(Ft(n),"You must pass an array and an index into the `getValueAt` function!"),Q(Lt(e)||Ft(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Ft(e)&&(Q(Ni(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{Q(Lt(t)&&ah(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),Q(e.length<=Ni(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Lt(e)?(Q(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(Q(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Kt(n[e[0]],e.slice(1))):Kt(n,e[0])}xi.exports=Kt});var Gt=a((kd,vi)=>{var zd=C(),Pd=_(),ch=f(),lh=se();function fh(n){ch(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return lh(e,n)}vi.exports=fh});var Si=a(($d,Ti)=>{var ot=h(),hh=m(),mh=f(),ph=Gt();function dh(n){ot(!hh(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),ot(mh(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),ot(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),ot(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=ph([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}Ti.exports=dh});var Qt=a((Jd,Oi)=>{var Bd=h(),gh=Z();function qh(){return gh([...arguments])}Oi.exports=qh});var Ei=a((Rd,Ai)=>{var yh=p(),bh=x(),Nh=Qt();function xh(){let n=Object.values(arguments).map(r=>yh(r)?bh(r):[r]),e=[];return Nh(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}Ai.exports=xh});var Zt=a((Fd,ji)=>{var Ie=h(),it=m(),Mi=f(),Xt=p(),wh=j(),vh=x(),Wd=N(),Th=Ke();function Ii(n,e){if(Ie(!it(n),"You must pass an array into the `slice` function!"),Ie(Xt(n),"You must pass an array into the `slice` function!"),it(e))return n.slice();Ie(Xt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),vh(e).forEach(s=>{Ie(it(s)||Mi(s)&&Th(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];it(t)&&(t=wh(0,n.length)),Mi(t)&&(t=[t]);let r=[];return t.forEach(s=>{Ie(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Xt(o)?r.push(Ii(n[s],e.slice(1,e.length))):r.push(n[s])}),r}ji.exports=Ii});var Ci=a((Ld,Yi)=>{var k=h(),Sh=m(),Oh=p(),Ht=f(),Ah=x(),Eh=N(),ut=Zt(),Mh=Rt(),Ui=he(),Vi=le(),Dt=yt(),X=j();function en(n){k(!Sh(n),"You must pass a square 2D array into the `inverse` function!"),k(Oh(n),"You must pass a square 2D array into the `inverse` function!"),Ah(n).forEach(t=>k(Ht(t),"The array passed into the `inverse` function must contain only numbers!"));let e=Eh(n);if(k(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),k(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),k(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return k(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;k(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return Vi(u,1/i)}else if(e[0]>1){let t=(r,s)=>Ht(r)||Ht(s)?Vi(r,s):Mh(r,s);for(let r=1;r<e[0]-1;r++)try{let s=ut(n,[X(0,r),X(0,r)]),o=ut(n,[X(0,r),X(r,e[0])]),i=ut(n,[X(r,e[0]),X(0,r)]),u=ut(n,[X(r,e[0]),X(r,e[0])]),l=en(s),c=en(Ui(u,t(-1,t(t(i,l),o)))),d=Ui(l,t(t(t(t(l,o),c),i),l)),g=t(-1,t(t(l,o),c)),U=t(-1,t(t(c,i),l)),S=c;return Dt(Dt(d,g,1),Dt(U,S,1),0)}catch{}k(!1,"This matrix cannot be inverted!")}}Yi.exports=en});var zi=a((Kd,_i)=>{var Ih=y(),tn=f();function jh(n,e,t){try{return tn(n)?tn(e)?tn(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}_i.exports=Ih(jh)});var $i=a((Gd,ki)=>{var Pi=f(),Uh=m(),Vh=y();function Yh(n,e){try{return e=Uh(e)?Math.E:e,Pi(n)?Pi(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}ki.exports=Vh(Yh)});var Ji=a((Qd,Bi)=>{var je=f(),Ch=y();function _h(n,e,t,r,s){try{return je(n)?je(e)?je(t)?je(r)?je(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Bi.exports=Ch(_h)});var Wi=a((eg,Ri)=>{var Xd=h(),Zd=m(),Hd=p(),Dd=f(),zh=x(),Ph=ee(),kh=be();function $h(n){try{let e=zh(n),t=kh(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=Ph(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Ri.exports=$h});var Ki=a((tg,Li)=>{var Bh=x(),Jh=ke(),Rh=Z(),Fi=ee();function Wh(n){try{if(n.length===0)return NaN;let e=Bh(n);if(e.length===0)return NaN;let t={},r=Rh(e);r.forEach(u=>{t[u]=Jh(e,u)});let s=Fi(r,(u,l)=>t[l]-t[u]),o=s[0],i=Fi(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Li.exports=Wh});var Zi=a((sg,Xi)=>{var Fh=m(),ng=C(),rg=_(),{random:Gi}=H(),Lh=se(),Kh=f();function Qi(){let n=Gi(),e=Gi();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function Gh(n){if(Fh(n))return Qi();Kh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Qi());return Lh(e,n)}Xi.exports=Gh});var Di=a((ug,Hi)=>{var og=C(),ig=_(),Qh=se(),Xh=f();function Zh(n){Xh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Qh(e,n)}Hi.exports=Zh});var nu=a((ag,tu)=>{var eu=p(),Hh=f(),at=h(),Dh=m();function nn(n,e){if(at(eu(n),"The `permute` function only works on arrays!"),Dh(e)&&(e=n.length),at(Hh(e),"`r` must be a whole number!"),e>n.length)return nn(n);if(e<=0)return[[]];if(at(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{at(!eu(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);nn(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}tu.exports=nn});var iu=a((cg,ou)=>{var em=p(),tm=N(),ru=Je(),su=P();function nm(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(em(e)){let t=tm(e);t.length===1?new su(e).print():t.length==2?new ru(e).print():console.log(e)}else e instanceof ru||e instanceof su?e.print():console.log(e)})}ou.exports=nm});var au=a((lg,uu)=>{var rm=f(),sm=y();function om(n){try{return rm(n)?Math.round(n):NaN}catch{return NaN}}uu.exports=sm(om)});var rn=a((fg,fu)=>{var cu=h(),im=f(),lu=p(),um=R();function am(n,e,t){cu(lu(n),"The first argument passed into the `setValueAt` function must be an array!"),im(e)&&(e=[e]),cu(lu(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=um(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}fu.exports=am});var mu=a((hg,hu)=>{var cm=f(),lm=y();function fm(n){try{return cm(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}hu.exports=lm(fm)});var du=a((mg,pu)=>{var hm=f(),mm=y();function pm(n){try{return hm(n)?Math.sin(n):NaN}catch{return NaN}}pu.exports=mm(pm)});var qu=a((pg,gu)=>{var dm=Pe();function gm(n){return dm(n)}gu.exports=gm});var bu=a((dg,yu)=>{var qm=f(),ym=y();function bm(n){try{return qm(n)?Math.tan(n):NaN}catch{return NaN}}yu.exports=ym(bm)});var ct=a((gg,xu)=>{var Nu=V();function Nm(n,e){assert(Nu(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function xm(n,e){assert(Nu(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}xu.exports={timeSync:Nm,timeAsync:xm}});var Tu=a((qg,vu)=>{var wu=h(),wm=p(),vm=V(),Tm=_(),Sm=ge(),Om=rn(),Am=x();function Em(n,e){wu(wm(n),"The first argument passed into the `where` function must be an array!"),wu(vm(e),"The second argument passed into the `where` function must be a function!");let t=Am(n).length,r=Tm(n,e),s=[],o=0,i=!1;for(;!i;){let u=Sm(r,!0);u?(s[o]=u,r=Om(r,u,null),o++):i=!0}return o===0?null:s}vu.exports=Em});var Mm=a((yg,sn)=>{var Ue={abs:dt(),add:he(),append:yt(),apply:_(),arccos:zn(),arcsin:kn(),arctan:Bn(),argmax:Xn(),argmin:Dn(),assert:h(),ceil:tr(),chop:sr(),clamp:ir(),cohensd:hr(),combine:gr(),copy:R(),correl:Sr(),cos:Ar(),count:ke(),covariance:wt(),DataFrame:Je(),diff:Vo(),distance:Bo(),divide:Ro(),dot:Rt(),dropMissing:Ho(),dropMissingPairwise:si(),dropNaN:be(),dropNaNPairwise:fi(),exp:mi(),factorial:gi(),flatten:x(),float:yi(),floor:Ke(),getValueAt:wi(),identity:Si(),indexOf:ge(),int:Wt(),intersect:Ei(),inverse:Ci(),isArray:p(),isBoolean:D(),isEqual:J(),isFunction:V(),isNumber:f(),isObject:we(),isString:E(),isUndefined:m(),lerp:zi(),log:$i(),map:Ji(),MathError:re(),max:Y(),mean:qe(),median:Wi(),min:Ye(),mode:Ki(),multiply:Bt(),ndarray:C(),normal:Zi(),ones:Di(),permute:nu(),pow:nt(),print:iu(),random:H().random,range:j(),reshape:se(),reverse:me(),round:au(),scale:le(),seed:H().seed,Series:P(),set:Z(),setValueAt:rn(),shape:N(),shuffle:jt(),sign:mu(),sin:du(),slice:Zt(),sort:ee(),sqrt:ze(),std:Pe(),stdev:qu(),subtract:Jt(),sum:rt(),tan:bu(),time:ct().timeSync,timeSync:ct().timeSync,timeAsync:ct().timeAsync,transpose:B(),union:Qt(),variance:Ce(),vectorize:y(),where:Tu(),zeros:Gt(),dump:function(){Object.keys(Ue).forEach(n=>{typeof global<"u"&&(global[n]=Ue[n]),typeof window<"u"&&(window[n]=Ue[n])})}};typeof sn<"u"&&(sn.exports=Ue);typeof window<"u"&&(window.JSMathTools=Ue)});Mm();})();
