(()=>{var ct=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=a((qh,Dt)=>{function ki(n){return typeof n=="number"&&!isNaN(n)}Dt.exports=ki});var re=a((yh,tn)=>{var en=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};tn.exports=en});var m=a((bh,nn)=>{var Pi=re();nn.exports=function(n,e){if(!n)throw new Pi(e)}});var p=a((Nh,rn)=>{function $i(n){return n===null||typeof n>"u"}rn.exports=$i});var d=a((wh,sn)=>{function _i(n){return n instanceof Array}sn.exports=_i});var x=a((xh,cn)=>{var on=m(),Bi=p(),un=d();function an(n){on(!Bi(n),"You must pass one array into the `flatten` function!"),on(un(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){un(t)?e=e.concat(an(t)):e.push(t)}),e}cn.exports=an});var C=a((vh,ln)=>{var Ji=x(),Fi=h();function Li(n){try{let e=Ji(n),t=-1/0;for(let r=0;r<e.length;r++){if(!Fi(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}ln.exports=Li});var z=a((Th,fn)=>{function Ri(n){return typeof n=="function"}fn.exports=Ri});var b=a((Sh,hn)=>{var lt=m(),Ki=p(),ft=d(),Wi=C(),Qi=z();function Xi(n){return lt(!Ki(n),"You must pass a function into the `vectorize` function!"),lt(Qi(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>ft(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>ft(arguments[i])).map(i=>arguments[i].length),o=Wi(s);s.forEach(i=>{lt(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>ft(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}hn.exports=Xi});var ht=a((Oh,mn)=>{var Gi=h(),Zi=b();function Hi(n){try{return Gi(n)?Math.abs(n):NaN}catch{return NaN}}mn.exports=Zi(Hi)});var pe=a((Ah,pn)=>{var Di=h(),eu=b();function tu(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Di(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}pn.exports=eu(tu)});var v=a((Eh,qn)=>{var je=m(),nu=p(),dn=d(),ru=C();function gn(n){je(!nu(n),"You must pass an array into the `shape` function!"),je(dn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>dn(r));if(t.indexOf(!0)>-1){je(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=ru(r);r.forEach(function(o){je(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(gn(n[0]))}return e}qn.exports=gn});var de=a((Mh,bn)=>{var yn=m(),su=p(),ou=d();function iu(n){yn(!su(n),"You must pass an array into the `reverse` function!"),yn(ou(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}bn.exports=iu});var k=a((Ih,wn)=>{var ge=m(),uu=p(),au=d(),cu=h(),lu=x(),qe="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function Nn(n,e){if(e||(ge(!uu(n),qe),au(n)||(n=[n]),n=lu(n),ge(n.length>0,qe),n.forEach(t=>{ge(cu(t),qe),ge(parseInt(t)===t,qe),ge(t>=0,qe)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(Nn(n.slice(1),!0));return t}}wn.exports=Nn});var se=a((jh,vn)=>{var mt=m(),fu=p(),hu=d(),mu=v(),xn=de(),pu=k();function du(n){mt(!fu(n),"You must pass an array into the `transpose` function!"),mt(hu(n),"You must pass an array into the `transpose` function!");let e=mu(n);if(mt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return xn(n);if(e.length===2){let t=pu(xn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}vn.exports=du});var dt=a((Vh,En)=>{var U=m(),Tn=p(),Sn=d(),gu=h(),On=v(),pt=se();function An(n,e,t=0){U(!Tn(n),"You must pass two arrays into the `append` function!"),U(!Tn(e),"You must pass two arrays into the `append` function!"),U(Sn(n),"You must pass two arrays into the `append` function!"),U(Sn(e),"You must pass two arrays into the `append` function!"),U(gu(t),"The `axis` argument to the `append` function must be 0 or 1!"),U(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),U(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=On(n),s=On(e);U(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),U(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&U(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(U(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return pt(An(pt(n),pt(e),0))}}En.exports=An});var P=a((Uh,Mn)=>{var qu=b();function yu(n,e){try{return e(n)}catch{return NaN}}Mn.exports=qu(yu)});var jn=a((Yh,In)=>{var bu=h(),Nu=b();function wu(n){try{return bu(n)?Math.acos(n):NaN}catch{return NaN}}In.exports=Nu(wu)});var Un=a((Ch,Vn)=>{var xu=h(),vu=b();function Tu(n){try{return xu(n)?Math.asin(n):NaN}catch{return NaN}}Vn.exports=vu(Tu)});var Cn=a((zh,Yn)=>{var Su=h(),Ou=b();function Au(n){try{return Su(n)?Math.atan(n):NaN}catch{return NaN}}Yn.exports=Ou(Au)});var W=a((Ph,kn)=>{var kh=d();function zn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!zn(n[u],e[u]))return!1}return!0}}}kn.exports=zn});var ye=a(($h,Jn)=>{var Pn=m(),Eu=p(),$n=d(),gt=v(),_n=W();function Bn(n,e,t){if(Pn(!Eu(n),"You must pass an array and a value into the `indexOf` function!"),Pn($n(n),"You must pass an array and a value into the `indexOf` function!"),gt(n).length===1||$n(e)&&_n(gt(n[0]),gt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(_n(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Bn(s,e);if(o)return[r].concat(o)}return null}Jn.exports=Bn});var Ln=a((_h,Fn)=>{var Mu=ye(),Iu=C();function ju(n){try{return Mu(n,Iu(n))}catch{return NaN}}Fn.exports=ju});var Ve=a((Bh,Rn)=>{var Vu=x(),Uu=h();function Yu(n){try{let e=Vu(n),t=1/0;for(let r=0;r<e.length;r++){if(!Uu(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Rn.exports=Yu});var Wn=a((Jh,Kn)=>{var Cu=ye(),zu=Ve();function ku(n){try{return Cu(n,zu(n))}catch{return NaN}}Kn.exports=ku});var Xn=a((Fh,Qn)=>{var Pu=h(),$u=b();function _u(n){try{return Pu(n)?Math.ceil(n):NaN}catch{return NaN}}Qn.exports=$u(_u)});var Hn=a((Lh,Zn)=>{var Bu=p(),Ju=ht(),Fu=b(),Gn=h();function Lu(n,e){try{if(!Gn(n))return NaN;if(Bu(e))e=1e-10;else if(!Gn(e))return NaN;return Ju(n)<e?0:n}catch{return NaN}}Zn.exports=Fu(Lu)});var er=a((Rh,Dn)=>{var qt=h(),Ru=b();function Ku(n,e,t){try{return qt(n)?qt(e)?qt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}Dn.exports=Ru(Ku)});var be=a((Kh,tr)=>{var Wu=h(),Qu=x();function Xu(n){try{let e=Qu(n),t=0;for(let r=0;r<e.length;r++){if(!Wu(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}tr.exports=Xu});var Ue=a((Wh,nr)=>{var Gu=be(),Zu=x(),Hu=h();function Du(n){try{let e=Zu(n),t=Gu(e),r=0;for(let s=0;s<e.length;s++){if(!Hu(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}nr.exports=Du});var ir=a((Qh,or)=>{var rr=be(),sr=Ue();function ea(n,e){try{let t=rr(n),r=rr(e),s=Math.sqrt((sr(n)+sr(e))/2);return(t-r)/s}catch{return NaN}}or.exports=ea});var lr=a((Xh,cr)=>{var ur=d(),ta=h(),Ye=m();function ar(n,e){if(Ye(ur(n),"The `combine` function only works on arrays!"),Ye(ta(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ye(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ye(!ur(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;ar(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}cr.exports=ar});var oe=a((Zh,fr)=>{var Gh=m(),na=p(),ra=d();function yt(n){if(typeof n=="object"){if(na(n))return n;if(ra(n))return n.map(yt);{let e={};return Object.keys(n).forEach(function(t){e[t]=yt(n[t])}),e}}else return n}fr.exports=yt});var bt=a((Hh,pr)=>{var hr=be(),mr=p();function sa(n,e){try{let t=hr(n),r=hr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(mr(n[i]))return NaN;if(mr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}pr.exports=sa});var Ce=a((Dh,dr)=>{var oa=h(),ia=b();function ua(n){try{return oa(n)?Math.sqrt(n):NaN}catch{return NaN}}dr.exports=ia(ua)});var ze=a((em,gr)=>{var aa=Ce(),ca=Ue();function la(n){try{return aa(ca(n))}catch{return NaN}}gr.exports=la});var br=a((tm,yr)=>{var fa=bt(),qr=ze();function ha(n,e){try{return fa(n,e)/(qr(n)*qr(e))}catch{return NaN}}yr.exports=ha});var wr=a((nm,Nr)=>{var ma=h(),pa=b();function da(n){try{return ma(n)?Math.cos(n):NaN}catch{return NaN}}Nr.exports=pa(da)});var Q=a((rm,vr)=>{var xr=m(),ga=p(),qa=d(),ya=x();function ba(n){xr(!ga(n),"You must pass an array into the `set` function!"),xr(qa(n),"You must pass an array into the `set` function!");let e=[],t={};return ya(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}vr.exports=ba});var ke=a((sm,Er)=>{var Tr=m(),Sr=p(),Or=d(),Ar=x(),Na=W(),wa=Q();function xa(n,e){Tr(!Sr(n),"You must pass an array and some items to count into the `count` function!"),Tr(Or(n),"You must pass an array and some items to count into the `count` function!");let t=Ar(n);return e=Sr(e)?wa(n):e,Or(e)?Ar(e).map(function(r){let s=t.filter(o=>Na(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Er.exports=xa});var ie=a((om,Ur)=>{var Ne=m(),Mr=d(),Ir=h(),va=v(),jr=x(),Ta=n=>n.reduce((e,t)=>e*t);function Vr(n,e){if(Ne(Mr(n),"The first argument passed into the `reshape` function must be an array!"),Ir(e)&&(e=[e]),Ne(Mr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),Ne(va(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{Ne(Ir(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return jr(n);let t=jr(n);Ne(Ta(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Vr(i,e.slice(1)))}return r}Ur.exports=Vr});var X=a((am,Br)=>{var im=k(),um=P(),zr=p(),Sa=m(),kr=h(),Pr=oe(),Oa=ie(),$r=Math.pow(2,64),N=[];_r(parseInt(Math.random()*$r));function Aa(n,e){n=S(n);function t(){n+=S("0x9e3779b97f4a7c15");let s=Pr(n);return s=(s^s>>30n)*S("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*S("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function S(n){return BigInt.asUintN(64,BigInt(n))}function Yr(n,e){return n=S(n),e=BigInt(e),S(S(n<<e)|S(n>>S(64n-e)))}function _r(n){if(zr(n))return Pr(N);{Sa(kr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Aa(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function Cr(){let n=S(Yr(N[0]+N[3],23)+N[0]),e=S(N[1]<<17n);return N[2]=S(N[2]^N[0]),N[3]=S(N[3]^N[1]),N[1]=S(N[1]^N[2]),N[0]=S(N[0]^N[3]),N[2]=S(N[2]^e),N[3]=Yr(N[3],45),parseInt(n)/$r}function Ea(n){if(zr(n))return Cr();kr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Cr());return Oa(e,n)}Br.exports={random:Ea,seed:_r}});var Pe=a((cm,Fr)=>{var Jr=m(),Ma=d(),Ia=p(),ja=h(),Va=v();function Ua(n){return Jr(Ma(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Jr(Va(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Ia(e)&&ja(e))}Fr.exports=Ua});var G=a((lm,Lr)=>{function Ya(n){return typeof n=="boolean"}Lr.exports=Ya});var Y=a((fm,Rr)=>{function Ca(n){return typeof n=="string"}Rr.exports=Ca});var $=a((hm,Kr)=>{var Nt=m(),wt=p(),xt=h(),za=de();function ka(n,e,t=1){Nt(!wt(n)&&!wt(e)&&!wt(t),"You must pass two numbers and optionally a step value to the `range` function!"),Nt(xt(n)&&xt(e)&&xt(t),"You must pass two numbers and optionally a step value to the `range` function!"),Nt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=za(s)),s}Kr.exports=ka});var Z=a((mm,Qr)=>{var vt=m(),Wr=p(),Pa=d(),$a=z();function _a(n,e){return n<e?-1:n>e?1:0}function Ba(n,e){Wr(e)&&(e=_a),vt(!Wr(n),"You must pass an array into the `sort` function!"),vt(Pa(n),"You must pass an array into the `sort` function!"),vt($a(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Qr.exports=Ba});var D=a((gm,Dr)=>{var y=m(),$e=d(),H=p(),ue=v(),_e=se(),we=$(),St=h(),xe=Y(),pm=P(),Ja=z(),Fa=k(),Tt=oe(),La=Q(),Xr=de(),Gr=Z(),Zr=G(),dm=Be();function Ra(n){return St(n)&&parseInt(n)===n}function Ka(n){return Ra(n)&&n>=0}function Hr(n,e){y(St(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var _=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y($e(r),"The new values must be a 1-dimensional array!");let s=ue(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(we(t._index.length,s[0]).map(o=>"row"+Hr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y($e(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ue(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ue(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ue(this.values)}isEmpty(){return this.values.filter(t=>!H(t)).length===0}clear(){let e=this,t=e.copy();return t.values=Fa(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||St(e))&&(e=[e]);let r=La((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),H(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;H(e)&&(e=t.index),y($e(e),"The `indices` array must be a 1-dimensional array of strings."),y(ue(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(xe(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new _(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;H(e)&&(e=we(0,r[0])),y($e(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ue(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(Ka(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new _(Xr(e.values));return t.index=Xr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=we(0,e.shape[0]).map(r=>"row"+Hr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new _(Tt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(Ja(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>H(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(we(0,r/2).concat(we(t.index.length-r/2,t.index.length)));let o=Tt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Zr(e)||xe(e)||H(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;H(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Zr(e)&&(t=e);let r=this,s=_e([r.values,r.index]);s=_e(Gr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new _(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=_e([e.values,e.index]);t=_e(Gr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new _(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=Tt(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new _,r.name=t.name,r):(r.values=i,r.index=s,r)}};Dr.exports=_});var Ot=a((qm,es)=>{var Wa=m(),Qa=h();function Xa(n,e){Wa(Qa(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}es.exports=Xa});var Je=a((ym,ts)=>{var Ga=d(),Za=p();function Ha(n){return typeof n=="object"&&!Za(n)&&!Ga(n)}ts.exports=Ha});var At=a((bm,ns)=>{var Da=Y(),ec=Je(),tc=G(),nc=p(),rc=re();function sc(n,e){e=(()=>{if(nc(e))return!0;if(tc(e))return e;throw new rc("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>Da(u)?JSON.stringify(u):ec(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}ns.exports=sc});var ss=a((Nm,rs)=>{var oc=At();function ic(n,e,t){let r=oc(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ct("fs"),o=ct("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}rs.exports=ic});var Et=a((vm,us)=>{var F=d(),os=G(),wm=Je(),xm=Ot(),uc=C(),is=$(),Fe=Y(),Le=re(),Re=p(),L=m();function ac(n,e,t,r,s,o){return t=(()=>{if(Re(t))return!1;if(os(t))return t;throw new Le("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Re(r))return!1;if(os(r))return r;throw new Le("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Re(s))return",";if(Fe(s))return L(s.length===1,u),s;if(F(s))return L(s.length===2,u),L(s[0].length===1,u),L(s[1].length===1,u),s;throw new Le(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Re(o))return'"';if(Fe(o))return L(o.length===1,u),o;if(F(o))return L(o.length===2,u),L(o[0].length===1,u),L(o[1].length===1,u),o;throw new Le(u)})(),(()=>{let l=e.split(`
`).filter(O=>O.length>0).map(O=>{let A=[],ne="",me=!1;for(let J=0;J<O.length;J++){let I=O[J];if(I.match(/\\/g))J++;else if(F(o)&&I===o[0])me=!0;else if(F(o)&&I===o[1])me=!1;else if(Fe(o)&&I===o)me=!me;else if(F(s)&&I===s[0]||F(s)&&I===s[1]||Fe(s)&&I===s)if(me)ne+=I;else{let ut=ne;try{let at=JSON.parse(ut);F(at)?A.push(ut.trim()):A.push(at)}catch{A.push(ut.trim())}ne=""}else ne+=I}if(ne.length>0){let J=ne;try{let I=JSON.parse(J);F(I)?A.push(J.trim()):A.push(I)}catch{A.push(J.trim())}}return A}),c=(()=>{let O=t?l.shift():is(0,l[0].length).map(A=>"col"+A);return r&&O.shift(),O})(),g=(()=>r?l.map(A=>A.shift()):is(0,l.length).map(A=>"row"+A))(),q=uc(l.map(O=>O.length)),j=new n(l.map(O=>(O.length=q,O)));return t&&(j.columns=c),r&&(j.index=g),j})()}us.exports=ac});var cs=a((Tm,as)=>{var cc=m(),lc=Et(),fc=Y(),hc=p(),mc=re();async function pc(n,e,t,r,s,o,i){t=(()=>hc(t)?"utf8":(cc(fc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ct("fs").readFileSync(e,t)}catch{}throw new mc(`The path "${e}" could not be loaded!`)})();return lc(n,u,r,s,o,i)}as.exports=pc});var Ke=a((Sm,ls)=>{var dc=h(),gc=b();function qc(n){try{return dc(n)?Math.floor(n):NaN}catch{return NaN}}ls.exports=gc(qc)});var Mt=a((Am,hs)=>{var fs=m(),yc=p(),bc=d(),Om=Ke(),{random:Nc}=X();function wc(n){fs(!yc(n),"You must pass an array into the `shuffle` function!"),fs(bc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Nc()*t.length);e.push(t.splice(s,1)[0])}return e}hs.exports=wc});var ds=a((Em,ps)=>{var xc=p(),vc=m(),ms=Mt();function Tc(n,e){return xc(e)&&(e=0),vc(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?ms(n.index):null,e===1?ms(n.columns):null)}ps.exports=Tc});var bs=a((Mm,ys)=>{var gs=m(),Sc=z(),Oc=p(),We=D(),ve=x();function qs(n){let e={};return ve(n).forEach((t,r)=>{e[t]=r}),e}function ae(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function Ac(n,e,t,r){gs(Sc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),Oc(r)&&(r=0),gs(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=qs(s.index),i=qs(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let g=new We(l);g.name=e.index[c],g.index=e.columns;let q=t(g,c,e);return q||delete o[s.index[c]],q});if(ve(u).length===0)return new n;if(u.length===1){let l=new We(ve(u));return l.name=ae(o)[0],l.index=ae(i),l}s.values=u,s.index=ae(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let g=new We(l);g.name=e.columns[c],g.index=e.index;let q=t(g,c,e);return q||delete i[s.index[c]],q});if(ve(u).length===0)return new n;if(u.length===1){let l=new We(ve(u));return l.name=ae(i)[0],l.index=ae(o),l}s.values=u,s.index=ae(i),s=s.transpose()}return s}ys.exports=Ac});var Ts=a((Im,vs)=>{var{random:Ec}=X(),Ns=p(),It=h(),ce=Y(),jt=G(),ws=d(),V=m(),xs=v(),Mc=$(),Ic=Z(),jc=x();function Vc(n,e,t){let r=n.copy(),s=Ec().toString();return r=r.assign(s,r.index),Ns(e)&&(e=[s],t=[!0]),(It(e)||ce(e))&&(e=[e],(jt(t)||ce(t))&&(t=[t])),V(ws(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),V(xs(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),Ns(t)&&(t=Mc(0,e.length).map(o=>!0)),V(ws(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(xs(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(V(ce(o)||It(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ce(o)){let i=r.columns.indexOf(o);return V(i>-1,`The column "${o}" does not exist!`),i}if(It(o))return V(parseInt(o)===o,"Column indices must be whole numbers!"),V(o>=0,`The column index ${o} is out of bounds!`),V(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(V(ce(o)||jt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ce(o)){let i=o.trim().toLowerCase();return V(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(jt(o))return o}),r.values=Ic(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=jc(r.get(null,s).values),r=r.dropColumns(s),r}vs.exports=Vc});var Os=a((jm,Ss)=>{var Uc=Y(),Yc=W(),Te=$(),Qe=D();function Cc(n,e){function t(q,j){return Uc(q)&&q.length>j?q.substring(0,j-3)+"...":q}if(Yc(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Te(0,s).concat(Te(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Te(0,i).concat(Te(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Qe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Qe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Qe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Te(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let g=28;return c instanceof Qe?(c.values=c.values.map(q=>t(q,g)),c.name=t(c.name,g),c.index=c.index.map(q=>t(q,g))):(c.values=c.values.map(q=>q.map(j=>t(j,g))),c.columns=c.columns.map(q=>t(q,g)),c.index=c.index.map(q=>t(q,g))),console.table(c.toObject()),e}Ss.exports=Cc});var Es=a((Vm,As)=>{function zc(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}As.exports=zc});var Vt=a((Um,Ms)=>{var kc=D();function Pc(n){return n instanceof kc}Ms.exports=Pc});var zs=a((Ym,Cs)=>{var Is=p(),js=Y(),Vs=h(),Xe=m(),Us=d(),Ys=v(),$c=Vt();function _c(n,e,t,r){Is(t)&&(t=[]),Is(r)&&(r=[]),(js(t)||Vs(t))&&(t=[t]),(js(r)||Vs(r))&&(r=[r]),Xe(Us(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(Us(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(Ys(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(Ys(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if($c(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}Cs.exports=_c});var Be=a((Bm,$s)=>{var{random:Cm}=X(),zm=P(),f=m(),ee=oe(),ks=ke(),Bc=Pe(),Ut=x(),M=d(),km=G(),Jc=W(),Fc=z(),Yt=h(),te=Y(),E=p(),Pm=C(),$m=Ve(),Lc=k(),le=$(),fe=D(),Ps=Q(),T=v(),_m=Z(),Se=se(),Ge=Ot(),Rc=ss(),Kc=At(),Wc=cs(),Qc=Et(),Xc=ds(),Gc=bs(),Zc=Ts(),Hc=Os(),Dc=Es(),el=zs(),Oe=Vt();function Ze(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function tl(n){return Yt(n)&&parseInt(n)===n}function He(n){return tl(n)&&n>=0}function nl(n){return n instanceof Object&&!M(n)}var w=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){f(M(r),"The new values must be a 2-dimensional array!");let s=T(r);f(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(le(t._index.length,s[0]).map(o=>"row"+Ge(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(le(t._columns.length,s[1]).map(o=>"col"+Ge(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){f(M(r),"The new columns list must be a 1-dimensional array of strings!"),f(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),f(T(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ze(8):o.trim()));let s=(()=>{let o=ks(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ze(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){f(M(r),"The new index must be a 1-dimensional array of strings!"),f(r.length===t.shape[0],"The new index must be the same length as the old index!"),f(T(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ze(8):o.trim()));let s=(()=>{let o=ks(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ze(8):o),t._index=r}}),f(E(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(M(e)){let r=T(e);f(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Se(r);let s=T(t.values);t._index=le(0,s[0]).map(o=>"row"+Ge(o,(s[0]-1).toString().length))}}get shape(){return T(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Ps(this.values).filter(t=>!E(t)).length===0}clear(){let e=this,t=new w(Lc(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(te(e)||Yt(e))&&(e=[e]),(te(t)||Yt(t))&&(t=[t]);let s=Ps((e||[]).concat(t||[]).map(o=>typeof o));return f(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&f(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(f(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),f(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),E(e)||(e=e.map(o=>{if(typeof o=="string")return f(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Index ${o} is out of bounds!`),f(parseInt(o)===o,"Row numbers must be integers!"),f(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),E(t)||(t=t.map(o=>{if(typeof o=="string")return f(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Column ${o} is out of bounds!`),f(parseInt(o)===o,"Column numbers must be integers!"),f(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;E(e)&&(e=r.index),E(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),f(M(e)&&M(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(T(e).length===1&&T(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(e.length>0,"The `rows` array must contain at least one row name."),f(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{f(te(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{f(te(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return Ut(s)[0];if(e.length===1){let i=new fe(Ut(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new fe(Ut(s));return i.name=t[0],i.index=e,i}let o=new w(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;E(e)&&(e=le(0,s[0])),E(t)&&(t=le(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),f(M(e)&&M(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(T(e).length===1&&T(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(e.length>0,"The `rowIndices` array must contain at least one index."),f(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{f(He(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{f(He(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new w(Se(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=le(0,e.shape[0]).map(r=>"row"+Ge(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new w;let t=new w(ee(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;E(t)?(s=e,f(!M(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,f(te(r),"When using two parameters for the `assign` method, the first parameter must be a string."),f(Oe(s)||M(s)&&T(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),f(nl(s)||Oe(s)||M(s)&&T(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(Oe(s)){let i={};return f(o.isEmpty()||Jc(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(M(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(l=>{let c=s[l];if(f(M(c),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),f(T(c).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=Se([c]),i.columns=[l],u=i.shape;else{f(c.length===u[0],`Column "${l}" in the new data is not the same length as the other columns in the original DataFrame.`);let g=i.columns.indexOf(l);g<0&&(i.columns.push(l),g=i.columns.indexOf(l)),i.values.forEach((q,j)=>{q[g]=c[j]})}}),i}}apply(e,t){t=t||0,f(Fc(e),"The first parameter to the `apply` method must be a function."),f(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=Se(r.values).map((i,u)=>{let l=new fe(i);return l.name=r.columns[u],l.index=r.index,e(l,u,r)});if(T(o).length===1){let i=new fe(o);return i.index=ee(r.columns),i}else{let i=new w(Se(o));return i.index=ee(r.index),i.columns=ee(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new fe(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(T(s).length===1){let o=new fe(s);return o.index=ee(r.index),o}else{let o=new w(s);return o.index=ee(r.index),o.columns=ee(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,f(He(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(l){if(r>0){let c=0;for(let g=0;g<l.length;g++){let q=l[g];if(E(q)&&c++,c>=r)return[]}}else if(t==="any")for(let c=0;c<l.length;c++){let g=l[c];if(E(g))return[]}else if(t==="all"){for(let c=0;c<l.length;c++){let g=l[c];if(!E(g))return l}return[]}return l}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let l=i.values.map(s).filter(g=>g.length>0);if(T(l).length<2)return new w;i.values=l;let c=i.get(null,u);if(E(c))return new w;te(c)&&(c=[c]),Oe(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(s).filter(g=>g.length>0);if(T(l).length<2)return new w;i.values=l;let c=i.get(null,u);if(E(c))return new w;te(c)&&(c=[c]),Oe(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,f(He(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(l){let c=Bc(l);return r>0?l.length-c.length<r:t==="any"?c.length===l.length:t==="all"?c.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let l=i.index.filter(c=>{let g=i.get(c,null).values;return s(g)});return l.length>0?i.get(l,null):new w}else if(e===1){let l=i.columns.filter(c=>{let g=i.get(null,c).values;return s(g)});return l.length>0?i.get(null,l):new w}return i}drop(e,t){return el(w,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return Dc(this)}toCSVString(e){return Kc(this,e)}toCSV(e,t){return Rc(this,e,t)}print(){return Hc(w,this)}sort(e,t){return Zc(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return Gc(w,this,e,t)}shuffle(e){return Xc(this,e)}};w.fromCSV=function(){return Wc(w,...arguments)};w.fromCSVString=function(){return Qc(w,...arguments)};$s.exports=w});var Ls=a((Jm,Fs)=>{var _s=m(),Bs=d(),Js=x();function rl(n,e){_s(Bs(n),"You must pass two arrays into the `diff` function!"),_s(Bs(e),"You must pass two arrays into the `diff` function!");let t=Js(n),r=Js(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}Fs.exports=rl});var De=a((Fm,Ks)=>{var Rs=h(),sl=b();function ol(n,e){try{return Rs(n)?Rs(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}Ks.exports=sl(ol)});var et=a((Lm,Ws)=>{var il=pe(),ul=x();function al(n){try{return il(...ul(n))}catch{return NaN}}Ws.exports=al});var Ct=a((Rm,Qs)=>{var cl=h(),ll=b();function fl(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!cl(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}Qs.exports=ll(fl)});var he=a((Km,Xs)=>{var hl=Ct();function ml(n,e){return hl(n,e)}Xs.exports=ml});var zt=a((Wm,Gs)=>{var pl=pe(),dl=he();function gl(n,e){return pl(n,dl(e,-1))}Gs.exports=gl});var Hs=a((Qm,Zs)=>{var ql=De(),yl=et(),bl=Ce(),Nl=zt();function wl(n,e){try{return bl(yl(ql(Nl(n,e),2)))}catch{return NaN}}Zs.exports=wl});var eo=a((Xm,Ds)=>{var xl=he(),vl=De();function Tl(n,e){return xl(n,vl(e,-1))}Ds.exports=Tl});var kt=a((Zm,io)=>{var Ae=m(),to=p(),no=d(),Sl=h(),Gm=W(),ro=x(),so=v(),Ol=et(),Al=he(),oo=se();function tt(n,e){Ae(!to(n)&&!to(e),"You must pass two arrays of numbers into the `dot` function!"),Ae(no(n)&&no(e),"You must pass two arrays of numbers into the `dot` function!"),ro(n).concat(ro(e)).forEach(s=>{Ae(Sl(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=so(n),r=so(e);if(Ae(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Ae(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return Ol(Al(n,e));if(t.length===1&&r.length===2)return oo(e).map(s=>tt(n,s));if(t.length===2&&r.length===1)return n.map(s=>tt(s,e));if(t.length===2&&r.length===2){let s=oo(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(tt(n[i],s[l]));o.push(u)}return o}}io.exports=tt});var co=a((Hm,ao)=>{var uo=m(),El=d(),Ml=p(),Il=v();function jl(n){return uo(El(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),uo(Il(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!Ml(e))}ao.exports=jl});var go=a((Dm,po)=>{var lo=m(),fo=p(),ho=d(),Vl=C(),mo=v();function Ul(n,e){lo(ho(n)&&ho(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),lo(mo(n).length===1&&mo(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Vl([n.length,e.length]);s++)!fo(n[s])&&!fo(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}po.exports=Ul});var vo=a((ep,xo)=>{var qo=m(),yo=p(),bo=d(),No=h(),Yl=C(),wo=v();function Cl(n,e){qo(bo(n)&&bo(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),qo(wo(n).length===1&&wo(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Yl([n.length,e.length]);s++)!yo(n[s])&&No(n[s])&&!yo(e[s])&&No(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}xo.exports=Cl});var So=a((tp,To)=>{var zl=b(),kl=h();function Pl(n){try{return kl(n)?Math.exp(n):NaN}catch{return NaN}}To.exports=zl(Pl)});var Eo=a((np,Ao)=>{var $l=b();function Oo(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*Oo(n-1)}catch{return NaN}}Ao.exports=$l(Oo)});var Io=a((rp,Mo)=>{var _l=h(),Bl=b();function Jl(n){try{let e=JSON.parse(n);return _l(e)?e:NaN}catch{return NaN}}Mo.exports=Bl(Jl)});var Pt=a((sp,jo)=>{var Fl=h(),Ll=b();function Rl(n){try{let e=JSON.parse(n);return Fl(e)?parseInt(e):NaN}catch{return NaN}}jo.exports=Ll(Rl)});var Yo=a((op,Uo)=>{var R=m(),Kl=p(),$t=d(),_t=h(),Vo=v(),Wl=Pt();function Bt(n,e){return R(!Kl(n),"You must pass an array and an index into the `getValueAt` function!"),R($t(n),"You must pass an array and an index into the `getValueAt` function!"),R(_t(e)||$t(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),$t(e)&&(R(Vo(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{R(_t(t)&&Wl(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),R(e.length<=Vo(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),_t(e)?(R(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(R(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Bt(n[e[0]],e.slice(1))):Bt(n,e[0])}Uo.exports=Bt});var Jt=a((ap,Co)=>{var ip=k(),up=P(),Ql=h(),Xl=ie();function Gl(n){Ql(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Xl(e,n)}Co.exports=Gl});var ko=a((cp,zo)=>{var nt=m(),Zl=p(),Hl=h(),Dl=Jt();function ef(n){nt(!Zl(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(Hl(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),nt(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Dl([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}zo.exports=ef});var Ft=a((fp,Po)=>{var lp=m(),tf=Q();function nf(){return tf([...arguments])}Po.exports=nf});var _o=a((hp,$o)=>{var rf=d(),sf=x(),of=Ft();function uf(){let n=Object.values(arguments).map(r=>rf(r)?sf(r):[r]),e=[];return of(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}$o.exports=uf});var Rt=a((pp,Fo)=>{var Ee=m(),rt=p(),Bo=h(),Lt=d(),af=$(),cf=x(),mp=v(),lf=Ke();function Jo(n,e){if(Ee(!rt(n),"You must pass an array into the `slice` function!"),Ee(Lt(n),"You must pass an array into the `slice` function!"),rt(e))return n.slice();Ee(Lt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),cf(e).forEach(s=>{Ee(rt(s)||Bo(s)&&lf(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];rt(t)&&(t=af(0,n.length)),Bo(t)&&(t=[t]);let r=[];return t.forEach(s=>{Ee(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Lt(o)?r.push(Jo(n[s],e.slice(1,e.length))):r.push(n[s])}),r}Fo.exports=Jo});var Wo=a((dp,Ko)=>{var B=m(),ff=p(),hf=d(),Kt=h(),mf=x(),pf=v(),st=Rt(),df=kt(),Lo=pe(),Ro=he(),Wt=dt(),K=$();function Qt(n){B(!ff(n),"You must pass a square 2D array into the `inverse` function!"),B(hf(n),"You must pass a square 2D array into the `inverse` function!"),mf(n).forEach(t=>B(Kt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=pf(n);if(B(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return B(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;B(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return Ro(u,1/i)}else if(e[0]>1){let t=(r,s)=>Kt(r)||Kt(s)?Ro(r,s):df(r,s);for(let r=1;r<e[0]-1;r++)try{let s=st(n,[K(0,r),K(0,r)]),o=st(n,[K(0,r),K(r,e[0])]),i=st(n,[K(r,e[0]),K(0,r)]),u=st(n,[K(r,e[0]),K(r,e[0])]),l=Qt(s),c=Qt(Lo(u,t(-1,t(t(i,l),o)))),g=Lo(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),j=t(-1,t(t(c,i),l)),O=c;return Wt(Wt(g,q,1),Wt(j,O,1),0)}catch{}B(!1,"This matrix cannot be inverted!")}}Ko.exports=Qt});var Xo=a((gp,Qo)=>{var gf=b(),Xt=h();function qf(n,e,t){try{return Xt(n)?Xt(e)?Xt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}Qo.exports=gf(qf)});var Ho=a((qp,Zo)=>{var Go=h(),yf=p(),bf=b();function Nf(n,e){try{return e=yf(e)?Math.E:e,Go(n)?Go(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}Zo.exports=bf(Nf)});var ei=a((yp,Do)=>{var Me=h(),wf=b();function xf(n,e,t,r,s){try{return Me(n)?Me(e)?Me(t)?Me(r)?Me(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Do.exports=wf(xf)});var ni=a((vp,ti)=>{var bp=m(),Np=p(),wp=d(),xp=h(),vf=x(),Tf=Z(),Sf=Pe();function Of(n){try{let e=vf(n),t=Sf(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=Tf(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}ti.exports=Of});var oi=a((Tp,si)=>{var Af=x(),Ef=ke(),Mf=Q(),ri=Z();function If(n){try{if(n.length===0)return NaN;let e=Af(n);if(e.length===0)return NaN;let t={},r=Mf(e);r.forEach(u=>{t[u]=Ef(e,u)});let s=ri(r,(u,l)=>t[l]-t[u]),o=s[0],i=ri(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}si.exports=If});var ci=a((Ap,ai)=>{var jf=p(),Sp=k(),Op=P(),{random:ii}=X(),Vf=ie(),Uf=h();function ui(){let n=ii(),e=ii();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function Yf(n){if(jf(n))return ui();Uf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(ui());return Vf(e,n)}ai.exports=Yf});var fi=a((Ip,li)=>{var Ep=k(),Mp=P(),Cf=ie(),zf=h();function kf(n){zf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Cf(e,n)}li.exports=kf});var pi=a((jp,mi)=>{var hi=d(),Pf=h(),ot=m(),$f=p();function Gt(n,e){if(ot(hi(n),"The `permute` function only works on arrays!"),$f(e)&&(e=n.length),ot(Pf(e),"`r` must be a whole number!"),e>n.length)return Gt(n);if(e<=0)return[[]];if(ot(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{ot(!hi(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Gt(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}mi.exports=Gt});var yi=a((Vp,qi)=>{var _f=d(),Bf=v(),di=Be(),gi=D();function Jf(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(_f(e)){let t=Bf(e);t.length===1?new gi(e).print():t.length==2?new di(e).print():console.log(e)}else e instanceof di||e instanceof gi?e.print():console.log(e)})}qi.exports=Jf});var Ni=a((Up,bi)=>{var Ff=h(),Lf=b();function Rf(n){try{return Ff(n)?Math.round(n):NaN}catch{return NaN}}bi.exports=Lf(Rf)});var Zt=a((Yp,vi)=>{var wi=m(),Kf=h(),xi=d(),Wf=oe();function Qf(n,e,t){wi(xi(n),"The first argument passed into the `setValueAt` function must be an array!"),Kf(e)&&(e=[e]),wi(xi(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Wf(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}vi.exports=Qf});var Si=a((Cp,Ti)=>{var Xf=h(),Gf=b();function Zf(n){try{return Xf(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Ti.exports=Gf(Zf)});var Ai=a((zp,Oi)=>{var Hf=h(),Df=b();function eh(n){try{return Hf(n)?Math.sin(n):NaN}catch{return NaN}}Oi.exports=Df(eh)});var Mi=a((kp,Ei)=>{var th=ze();function nh(n){return th(n)}Ei.exports=nh});var ji=a((Pp,Ii)=>{var rh=h(),sh=b();function oh(n){try{return rh(n)?Math.tan(n):NaN}catch{return NaN}}Ii.exports=sh(oh)});var it=a(($p,Ui)=>{var Vi=z();function ih(n,e){assert(Vi(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function uh(n,e){assert(Vi(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}Ui.exports={timeSync:ih,timeAsync:uh}});var zi=a((_p,Ci)=>{var Yi=m(),ah=d(),ch=z(),lh=P(),fh=ye(),hh=Zt(),mh=x();function ph(n,e){Yi(ah(n),"The first argument passed into the `where` function must be an array!"),Yi(ch(e),"The second argument passed into the `where` function must be a function!");let t=mh(n).length,r=lh(n,e),s=[],o=0,i=!1;for(;!i;){let u=fh(r,!0);u?(s[o]=u,r=hh(r,u,null),o++):i=!0}return o===0?null:s}Ci.exports=ph});var dh=a((Bp,Ht)=>{var Ie={abs:ht(),add:pe(),append:dt(),apply:P(),arccos:jn(),arcsin:Un(),arctan:Cn(),argmax:Ln(),argmin:Wn(),assert:m(),ceil:Xn(),chop:Hn(),clamp:er(),cohensd:ir(),combine:lr(),copy:oe(),correl:br(),cos:wr(),count:ke(),covariance:bt(),DataFrame:Be(),diff:Ls(),distance:Hs(),divide:eo(),dot:kt(),dropMissing:co(),dropMissingPairwise:go(),dropNaN:Pe(),dropNaNPairwise:vo(),exp:So(),factorial:Eo(),flatten:x(),float:Io(),floor:Ke(),getValueAt:Yo(),identity:ko(),indexOf:ye(),int:Pt(),intersect:_o(),inverse:Wo(),isArray:d(),isBoolean:G(),isEqual:W(),isFunction:z(),isNumber:h(),isObject:Je(),isString:Y(),isUndefined:p(),lerp:Xo(),log:Ho(),map:ei(),MathError:re(),max:C(),mean:be(),median:ni(),min:Ve(),mode:oi(),multiply:Ct(),ndarray:k(),normal:ci(),ones:fi(),permute:pi(),pow:De(),print:yi(),random:X().random,range:$(),reshape:ie(),reverse:de(),round:Ni(),scale:he(),seed:X().seed,Series:D(),set:Q(),setValueAt:Zt(),shape:v(),shuffle:Mt(),sign:Si(),sin:Ai(),slice:Rt(),sort:Z(),sqrt:Ce(),std:ze(),stdev:Mi(),subtract:zt(),sum:et(),tan:ji(),time:it().timeSync,timeSync:it().timeSync,timeAsync:it().timeAsync,transpose:se(),union:Ft(),variance:Ue(),vectorize:b(),where:zi(),zeros:Jt(),dump:function(){Object.keys(Ie).forEach(n=>{typeof global<"u"&&(global[n]=Ie[n]),typeof window<"u"&&(window[n]=Ie[n])})}};typeof Ht<"u"&&(Ht.exports=Ie);typeof window<"u"&&(window.JSMathTools=Ie)});dh();})();
