(()=>{var ut=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=a((Lf,Xt)=>{function xi(n){return typeof n=="number"&&!isNaN(n)}Xt.exports=xi});var re=a((Rf,Zt)=>{var Gt=class extends Error{constructor(e){typeof window!="undefined"?super("\u{1F449} "+e):super(`

\u{1F449} [31m`+e+`
[0m`)}};Zt.exports=Gt});var m=a((Kf,Ht)=>{var vi=re();Ht.exports=function(n,e){if(!n)throw new vi(e)}});var d=a((Wf,Dt)=>{function Ti(n){return n===null||typeof n=="undefined"}Dt.exports=Ti});var g=a((Qf,en)=>{function Oi(n){return n instanceof Array}en.exports=Oi});var x=a((Xf,sn)=>{var tn=m(),Si=d(),nn=g();function rn(n){tn(!Si(n),"You must pass one array into the `flatten` function!"),tn(nn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){nn(t)?e=e.concat(rn(t)):e.push(t)}),e}sn.exports=rn});var k=a((Gf,on)=>{var Ai=x(),Ei=h();function Mi(n){try{let e=Ai(n),t=-1/0;for(let r=0;r<e.length;r++){if(!Ei(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}on.exports=Mi});var $=a((Zf,un)=>{function Ii(n){return typeof n=="function"}un.exports=Ii});var b=a((Hf,an)=>{var at=m(),ji=d(),ct=g(),Vi=k(),Ui=$();function Yi(n){return at(!ji(n),"You must pass a function into the `vectorize` function!"),at(Ui(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>ct(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>ct(arguments[i])).map(i=>arguments[i].length),o=Vi(s);s.forEach(i=>{at(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>ct(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}an.exports=Yi});var lt=a((Df,cn)=>{var Ci=h(),zi=b();function ki(n){try{return Ci(n)?Math.abs(n):NaN}catch{return NaN}}cn.exports=zi(ki)});var de=a((eh,ln)=>{var $i=h(),Pi=b();function _i(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!$i(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}ln.exports=Pi(_i)});var T=a((th,mn)=>{var je=m(),Bi=d(),fn=g(),Ji=k();function hn(n){je(!Bi(n),"You must pass an array into the `shape` function!"),je(fn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>fn(r));if(t.indexOf(!0)>-1){je(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Ji(r);r.forEach(function(o){je(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(hn(n[0]))}return e}mn.exports=hn});var pe=a((nh,pn)=>{var dn=m(),Fi=d(),Li=g();function Ri(n){dn(!Fi(n),"You must pass an array into the `reverse` function!"),dn(Li(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}pn.exports=Ri});var P=a((rh,qn)=>{var ge=m(),Ki=d(),Wi=g(),Qi=h(),Xi=x(),qe="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function gn(n,e){if(e||(ge(!Ki(n),qe),Wi(n)||(n=[n]),n=Xi(n),ge(n.length>0,qe),n.forEach(t=>{ge(Qi(t),qe),ge(parseInt(t)===t,qe),ge(t>=0,qe)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(gn(n.slice(1),!0));return t}}qn.exports=gn});var se=a((sh,bn)=>{var ft=m(),Gi=d(),Zi=g(),Hi=T(),yn=pe(),Di=P();function eu(n){ft(!Gi(n),"You must pass an array into the `transpose` function!"),ft(Zi(n),"You must pass an array into the `transpose` function!");let e=Hi(n);if(ft(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return yn(n);if(e.length===2){let t=Di(yn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}bn.exports=eu});var mt=a((oh,Tn)=>{var U=m(),Nn=d(),wn=g(),tu=h(),xn=T(),ht=se();function vn(n,e,t=0){U(!Nn(n),"You must pass two arrays into the `append` function!"),U(!Nn(e),"You must pass two arrays into the `append` function!"),U(wn(n),"You must pass two arrays into the `append` function!"),U(wn(e),"You must pass two arrays into the `append` function!"),U(tu(t),"The `axis` argument to the `append` function must be 0 or 1!"),U(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),U(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=xn(n),s=xn(e);U(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),U(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&U(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(U(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return ht(vn(ht(n),ht(e),0))}}Tn.exports=vn});var _=a((ih,On)=>{var nu=b();function ru(n,e){try{return e(n)}catch{return NaN}}On.exports=nu(ru)});var An=a((uh,Sn)=>{var su=h(),ou=b();function iu(n){try{return su(n)?Math.acos(n):NaN}catch{return NaN}}Sn.exports=ou(iu)});var Mn=a((ah,En)=>{var uu=h(),au=b();function cu(n){try{return uu(n)?Math.asin(n):NaN}catch{return NaN}}En.exports=au(cu)});var jn=a((ch,In)=>{var lu=h(),fu=b();function hu(n){try{return lu(n)?Math.atan(n):NaN}catch{return NaN}}In.exports=fu(hu)});var oe=a((fh,Un)=>{var lh=g();function Vn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!Vn(n[u],e[u]))return!1}return!0}}}Un.exports=Vn});var ye=a((hh,$n)=>{var Yn=m(),mu=d(),Cn=g(),dt=T(),zn=oe();function kn(n,e,t){if(Yn(!mu(n),"You must pass an array and a value into the `indexOf` function!"),Yn(Cn(n),"You must pass an array and a value into the `indexOf` function!"),dt(n).length===1||Cn(e)&&zn(dt(n[0]),dt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(zn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=kn(s,e);if(o)return[r].concat(o)}return null}$n.exports=kn});var _n=a((mh,Pn)=>{var du=ye(),pu=k();function gu(n){try{return du(n,pu(n))}catch{return NaN}}Pn.exports=gu});var Ve=a((dh,Bn)=>{var qu=x(),yu=h();function bu(n){try{let e=qu(n),t=1/0;for(let r=0;r<e.length;r++){if(!yu(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Bn.exports=bu});var Fn=a((ph,Jn)=>{var Nu=ye(),wu=Ve();function xu(n){try{return Nu(n,wu(n))}catch{return NaN}}Jn.exports=xu});var Rn=a((gh,Ln)=>{var vu=h(),Tu=b();function Ou(n){try{return vu(n)?Math.ceil(n):NaN}catch{return NaN}}Ln.exports=Tu(Ou)});var Qn=a((qh,Wn)=>{var Su=d(),Au=lt(),Eu=b(),Kn=h();function Mu(n,e){try{if(!Kn(n))return NaN;if(Su(e))e=1e-10;else if(!Kn(e))return NaN;return Au(n)<e?0:n}catch{return NaN}}Wn.exports=Eu(Mu)});var Gn=a((yh,Xn)=>{var pt=h(),Iu=b();function ju(n,e,t){try{return pt(n)?pt(e)?pt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}Xn.exports=Iu(ju)});var be=a((bh,Zn)=>{var Vu=h(),Uu=x();function Yu(n){try{let e=Uu(n),t=0;for(let r=0;r<e.length;r++){if(!Vu(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}Zn.exports=Yu});var Ue=a((Nh,Hn)=>{var Cu=be(),zu=x(),ku=h();function $u(n){try{let e=zu(n),t=Cu(e),r=0;for(let s=0;s<e.length;s++){if(!ku(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}Hn.exports=$u});var nr=a((wh,tr)=>{var Dn=be(),er=Ue();function Pu(n,e){try{let t=Dn(n),r=Dn(e),s=Math.sqrt((er(n)+er(e))/2);return(t-r)/s}catch{return NaN}}tr.exports=Pu});var ir=a((xh,or)=>{var rr=g(),_u=h(),Ye=m();function sr(n,e){if(Ye(rr(n),"The `combine` function only works on arrays!"),Ye(_u(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ye(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ye(!rr(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;sr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}or.exports=sr});var ie=a((Th,ur)=>{var vh=m(),Bu=d(),Ju=g();function gt(n){if(typeof n=="object"){if(Bu(n))return n;if(Ju(n))return n.map(gt);{let e={};return Object.keys(n).forEach(function(t){e[t]=gt(n[t])}),e}}else return n}ur.exports=gt});var qt=a((Oh,lr)=>{var ar=be(),cr=d();function Fu(n,e){try{let t=ar(n),r=ar(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(cr(n[i]))return NaN;if(cr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}lr.exports=Fu});var Ce=a((Sh,fr)=>{var Lu=h(),Ru=b();function Ku(n){try{return Lu(n)?Math.sqrt(n):NaN}catch{return NaN}}fr.exports=Ru(Ku)});var ze=a((Ah,hr)=>{var Wu=Ce(),Qu=Ue();function Xu(n){try{return Wu(Qu(n))}catch{return NaN}}hr.exports=Xu});var pr=a((Eh,dr)=>{var Gu=qt(),mr=ze();function Zu(n,e){try{return Gu(n,e)/(mr(n)*mr(e))}catch{return NaN}}dr.exports=Zu});var qr=a((Mh,gr)=>{var Hu=h(),Du=b();function ea(n){try{return Hu(n)?Math.cos(n):NaN}catch{return NaN}}gr.exports=Du(ea)});var G=a((Ih,br)=>{var yr=m(),ta=d(),na=g(),ra=x();function sa(n){yr(!ta(n),"You must pass an array into the `set` function!"),yr(na(n),"You must pass an array into the `set` function!");let e=[],t={};return ra(n).forEach(r=>{let s=typeof r=="undefined"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}br.exports=sa});var ke=a((jh,Tr)=>{var Nr=m(),wr=d(),xr=g(),vr=x(),oa=oe(),ia=G();function ua(n,e){Nr(!wr(n),"You must pass an array and some items to count into the `count` function!"),Nr(xr(n),"You must pass an array and some items to count into the `count` function!");let t=vr(n);return e=wr(e)?ia(n):e,xr(e)?vr(e).map(function(r){let s=t.filter(o=>oa(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Tr.exports=ua});var ue=a((Vh,Mr)=>{var Ne=m(),Or=g(),Sr=h(),aa=T(),Ar=x(),ca=n=>n.reduce((e,t)=>e*t);function Er(n,e){if(Ne(Or(n),"The first argument passed into the `reshape` function must be an array!"),Sr(e)&&(e=[e]),Ne(Or(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),Ne(aa(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{Ne(Sr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Ar(n);let t=Ar(n);Ne(ca(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Er(i,e.slice(1)))}return r}Mr.exports=Er});var Z=a((Ch,kr)=>{var Uh=P(),Yh=_(),Ir=d(),la=m(),jr=h(),Vr=ie(),fa=ue(),Ur=Math.pow(2,64),N=[];Cr(parseInt(Math.random()*Ur));function ha(n,e){n=O(n);function t(){n+=O("0x9e3779b97f4a7c15");let s=Vr(n);return s=(s^s>>30n)*O("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*O("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function O(n){return BigInt.asUintN(64,BigInt(n))}function Yr(n,e){return n=O(n),e=BigInt(e),O(O(n<<e)|O(n>>O(64n-e)))}function Cr(n){if(Ir(n))return Vr(N);{la(jr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=ha(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function zr(){let n=O(Yr(N[0]+N[3],23)+N[0]),e=O(N[1]<<17n);return N[2]=O(N[2]^N[0]),N[3]=O(N[3]^N[1]),N[1]=O(N[1]^N[2]),N[0]=O(N[0]^N[3]),N[2]=O(N[2]^e),N[3]=Yr(N[3],45),parseInt(n)/Ur}function ma(n){if(Ir(n))return zr();jr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(zr());return fa(e,n)}kr.exports={random:ma,seed:Cr}});var $e=a((zh,Pr)=>{var $r=m(),da=g(),pa=d(),ga=h(),qa=T();function ya(n){return $r(da(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),$r(qa(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!pa(e)&&ga(e))}Pr.exports=ya});var H=a((kh,_r)=>{function ba(n){return typeof n=="boolean"}_r.exports=ba});var L=a(($h,Br)=>{function Na(n){return typeof n=="string"}Br.exports=Na});var R=a((Ph,Jr)=>{var yt=m(),bt=d(),Nt=h(),wa=pe();function xa(n,e,t=1){yt(!bt(n)&&!bt(e)&&!bt(t),"You must pass two numbers and optionally a step value to the `range` function!"),yt(Nt(n)&&Nt(e)&&Nt(t),"You must pass two numbers and optionally a step value to the `range` function!"),yt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=wa(s)),s}Jr.exports=xa});var D=a((_h,Lr)=>{var wt=m(),Fr=d(),va=g(),Ta=$();function Oa(n,e){return n<e?-1:n>e?1:0}function Sa(n,e){Fr(e)&&(e=Oa),wt(!Fr(n),"You must pass an array into the `sort` function!"),wt(va(n),"You must pass an array into the `sort` function!"),wt(Ta(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Lr.exports=Sa});var ve=a((Fh,Xr)=>{var y=m(),Pe=g(),ee=d(),ae=T(),_e=se(),we=R(),xt=h(),xe=L(),Bh=_(),Aa=$(),Ea=P(),vt=ie(),Ma=G(),Rr=pe(),Kr=D(),Wr=H(),Jh=Be();function Ia(n){return xt(n)&&parseInt(n)===n}function ja(n){return Ia(n)&&n>=0}function Qr(n,e){y(xt(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var B=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(Pe(r),"The new values must be a 1-dimensional array!");let s=ae(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(we(t._index.length,s[0]).map(o=>"row"+Qr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(Pe(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ae(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ae(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ae(this.values)}isEmpty(){return this.values.filter(t=>!ee(t)).length===0}clear(){let e=this,t=e.copy();return t.values=Ea(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||xt(e))&&(e=[e]);let r=Ma((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),ee(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;ee(e)&&(e=t.index),y(Pe(e),"The `indices` array must be a 1-dimensional array of strings."),y(ae(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(xe(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new B(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;ee(e)&&(e=we(0,r[0])),y(Pe(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ae(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(ja(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new B(Rr(e.values));return t.index=Rr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=we(0,e.shape[0]).map(r=>"row"+Qr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new B(vt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(Aa(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>ee(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window=="undefined"?20:10;if(t.index.length>r){t=t.get(we(0,r/2).concat(we(t.index.length-r/2,t.index.length)));let o=vt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Wr(e)||xe(e)||ee(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;ee(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Wr(e)&&(t=e);let r=this,s=_e([r.values,r.index]);s=_e(Kr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new B(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=_e([e.values,e.index]);t=_e(Kr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new B(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=vt(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new B,r.name=t.name,r):(r.values=i,r.index=s,r)}};Xr.exports=B});var Tt=a((Lh,Gr)=>{var Va=m(),Ua=h();function Ya(n,e){Va(Ua(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}Gr.exports=Ya});var Je=a((Rh,Zr)=>{var Ca=g(),za=d();function ka(n){return typeof n=="object"&&!za(n)&&!Ca(n)}Zr.exports=ka});var Ot=a((Kh,Hr)=>{var $a=L(),Pa=Je(),_a=H(),Ba=d(),Ja=re();function Fa(n,e){e=(()=>{if(Ba(e))return!0;if(_a(e))return e;throw new Ja("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>$a(u)?JSON.stringify(u):Pa(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}Hr.exports=Fa});var es=a((Wh,Dr)=>{var La=Ot();function Ra(n,e,t){let r=La(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ut("fs"),o=ut("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}Dr.exports=Ra});var St=a((Gh,rs)=>{var K=g(),ts=H(),Qh=Je(),Xh=Tt(),Ka=k(),ns=R(),Fe=L(),Le=re(),Re=d(),W=m();function Wa(n,e,t,r,s,o){return t=(()=>{if(Re(t))return!1;if(ts(t))return t;throw new Le("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Re(r))return!1;if(ts(r))return r;throw new Le("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Re(s))return",";if(Fe(s))return W(s.length===1,u),s;if(K(s))return W(s.length===2,u),W(s[0].length===1,u),W(s[1].length===1,u),s;throw new Le(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Re(o))return'"';if(Fe(o))return W(o.length===1,u),o;if(K(o))return W(o.length===2,u),W(o[0].length===1,u),W(o[1].length===1,u),o;throw new Le(u)})(),(()=>{let l=e.split(`
`).filter(E=>E.length>0).map(E=>{let M=[],ne="",me=!1;for(let F=0;F<E.length;F++){let I=E[F];if(I.match(/\\/g))F++;else if(K(o)&&I===o[0])me=!0;else if(K(o)&&I===o[1])me=!1;else if(Fe(o)&&I===o)me=!me;else if(K(s)&&I===s[0]||K(s)&&I===s[1]||Fe(s)&&I===s)if(me)ne+=I;else{let ot=ne;try{let it=JSON.parse(ot);K(it)?M.push(ot.trim()):M.push(it)}catch{M.push(ot.trim())}ne=""}else ne+=I}if(ne.length>0){let F=ne;try{let I=JSON.parse(F);K(I)?M.push(F.trim()):M.push(I)}catch{M.push(F.trim())}}return M}),c=(()=>{let E=t?l.shift():ns(0,l[0].length).map(M=>"col"+M);return r&&E.shift(),E})(),p=(()=>r?l.map(M=>M.shift()):ns(0,l.length).map(M=>"row"+M))(),q=Ka(l.map(E=>E.length)),j=new n(l.map(E=>(E.length=q,E)));return t&&(j.columns=c),r&&(j.index=p),j})()}rs.exports=Wa});var os=a((Zh,ss)=>{var Qa=m(),Xa=St(),Ga=L(),Za=d(),Ha=re();async function Da(n,e,t,r,s,o,i){t=(()=>Za(t)?"utf8":(Qa(Ga(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ut("fs").readFileSync(e,t)}catch{}throw new Ha(`The path "${e}" could not be loaded!`)})();return Xa(n,u,r,s,o,i)}ss.exports=Da});var Ke=a((Hh,is)=>{var ec=h(),tc=b();function nc(n){try{return ec(n)?Math.floor(n):NaN}catch{return NaN}}is.exports=tc(nc)});var At=a((em,as)=>{var us=m(),rc=d(),sc=g(),Dh=Ke(),{random:oc}=Z();function ic(n){us(!rc(n),"You must pass an array into the `shuffle` function!"),us(sc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(oc()*t.length);e.push(t.splice(s,1)[0])}return e}as.exports=ic});var fs=a((tm,ls)=>{var uc=d(),ac=m(),cs=At();function cc(n,e){return uc(e)&&(e=0),ac(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?cs(n.index):null,e===1?cs(n.columns):null)}ls.exports=cc});var ps=a((nm,ds)=>{var hs=m(),lc=$(),fc=d(),We=ve(),Te=x();function ms(n){let e={};return Te(n).forEach((t,r)=>{e[t]=r}),e}function ce(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function hc(n,e,t,r){hs(lc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),fc(r)&&(r=0),hs(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=ms(s.index),i=ms(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let p=new We(l);p.name=e.index[c],p.index=e.columns;let q=t(p,c,e);return q||delete o[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new We(Te(u));return l.name=ce(o)[0],l.index=ce(i),l}s.values=u,s.index=ce(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let p=new We(l);p.name=e.columns[c],p.index=e.index;let q=t(p,c,e);return q||delete i[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new We(Te(u));return l.name=ce(i)[0],l.index=ce(o),l}s.values=u,s.index=ce(i),s=s.transpose()}return s}ds.exports=hc});var Ns=a((rm,bs)=>{var{random:mc}=Z(),gs=d(),Et=h(),le=L(),Mt=H(),qs=g(),V=m(),ys=T(),dc=R(),pc=D(),gc=x();function qc(n,e,t){let r=n.copy(),s=mc().toString();return r=r.assign(s,r.index),gs(e)&&(e=[s],t=[!0]),(Et(e)||le(e))&&(e=[e],(Mt(t)||le(t))&&(t=[t])),V(qs(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),V(ys(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),gs(t)&&(t=dc(0,e.length).map(o=>!0)),V(qs(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(ys(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),V(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(V(le(o)||Et(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),le(o)){let i=r.columns.indexOf(o);return V(i>-1,`The column "${o}" does not exist!`),i}if(Et(o))return V(parseInt(o)===o,"Column indices must be whole numbers!"),V(o>=0,`The column index ${o} is out of bounds!`),V(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(V(le(o)||Mt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),le(o)){let i=o.trim().toLowerCase();return V(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(Mt(o))return o}),r.values=pc(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=gc(r.get(null,s).values),r=r.dropColumns(s),r}bs.exports=qc});var Be=a((lm,Ts)=>{var{random:sm}=Z(),om=_(),f=m(),te=ie(),ws=ke(),yc=$e(),It=x(),S=g(),im=H(),xs=oe(),bc=$(),Oe=h(),z=L(),A=d(),um=k(),am=Ve(),Nc=P(),Y=R(),C=ve(),vs=G(),v=T(),cm=D(),Se=se(),Qe=Tt(),wc=es(),xc=Ot(),vc=os(),Tc=St(),Oc=fs(),Sc=ps(),Ac=Ns();function Xe(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function Ec(n){return Oe(n)&&parseInt(n)===n}function Ge(n){return Ec(n)&&n>=0}function Mc(n){return n instanceof Object&&!S(n)}function fe(n){return n instanceof C}var w=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){f(S(r),"The new values must be a 2-dimensional array!");let s=v(r);f(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(Y(t._index.length,s[0]).map(o=>"row"+Qe(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(Y(t._columns.length,s[1]).map(o=>"col"+Qe(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){f(S(r),"The new columns list must be a 1-dimensional array of strings!"),f(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),f(v(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Xe(8):o.trim()));let s=(()=>{let o=ws(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Xe(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){f(S(r),"The new index must be a 1-dimensional array of strings!"),f(r.length===t.shape[0],"The new index must be the same length as the old index!"),f(v(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Xe(8):o.trim()));let s=(()=>{let o=ws(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Xe(8):o),t._index=r}}),f(A(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(S(e)){let r=v(e);f(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Se(r);let s=v(t.values);t._index=Y(0,s[0]).map(o=>"row"+Qe(o,(s[0]-1).toString().length))}}get shape(){return v(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return vs(this.values).filter(t=>!A(t)).length===0}clear(){let e=this,t=new w(Nc(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(z(e)||Oe(e))&&(e=[e]),(z(t)||Oe(t))&&(t=[t]);let s=vs((e||[]).concat(t||[]).map(o=>typeof o));return f(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&f(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(f(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),f(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),A(e)||(e=e.map(o=>{if(typeof o=="string")return f(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Index ${o} is out of bounds!`),f(parseInt(o)===o,"Row numbers must be integers!"),f(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),A(t)||(t=t.map(o=>{if(typeof o=="string")return f(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Column ${o} is out of bounds!`),f(parseInt(o)===o,"Column numbers must be integers!"),f(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;A(e)&&(e=r.index),A(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),f(S(e)&&S(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(v(e).length===1&&v(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(e.length>0,"The `rows` array must contain at least one row name."),f(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{f(z(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{f(z(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return It(s)[0];if(e.length===1){let i=new C(It(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new C(It(s));return i.name=t[0],i.index=e,i}let o=new w(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;A(e)&&(e=Y(0,s[0])),A(t)&&(t=Y(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),f(S(e)&&S(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(v(e).length===1&&v(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(e.length>0,"The `rowIndices` array must contain at least one index."),f(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{f(Ge(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{f(Ge(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new w(Se(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=Y(0,e.shape[0]).map(r=>"row"+Qe(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new w;let t=new w(te(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;A(t)?(s=e,f(!S(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,f(z(r),"When using two parameters for the `assign` method, the first parameter must be a string."),f(fe(s)||S(s)&&v(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),f(Mc(s)||fe(s)||S(s)&&v(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(fe(s)){let i={};return f(o.isEmpty()||xs(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(S(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(l=>{let c=s[l];if(f(S(c),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),f(v(c).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=Se([c]),i.columns=[l],u=i.shape;else{f(c.length===u[0],`Column "${l}" in the new data is not the same length as the other columns in the original DataFrame.`);let p=i.columns.indexOf(l);p<0&&(i.columns.push(l),p=i.columns.indexOf(l)),i.values.forEach((q,j)=>{q[p]=c[j]})}}),i}}apply(e,t){t=t||0,f(bc(e),"The first parameter to the `apply` method must be a function."),f(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=Se(r.values).map((i,u)=>{let l=new C(i);return l.name=r.columns[u],l.index=r.index,e(l,u,r)});if(v(o).length===1){let i=new C(o);return i.index=te(r.columns),i}else{let i=new w(Se(o));return i.index=te(r.index),i.columns=te(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new C(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(v(s).length===1){let o=new C(s);return o.index=te(r.index),o}else{let o=new w(s);return o.index=te(r.index),o.columns=te(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,f(Ge(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(l){if(r>0){let c=0;for(let p=0;p<l.length;p++){let q=l[p];if(A(q)&&c++,c>=r)return[]}}else if(t==="any")for(let c=0;c<l.length;c++){let p=l[c];if(A(p))return[]}else if(t==="all"){for(let c=0;c<l.length;c++){let p=l[c];if(!A(p))return l}return[]}return l}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let l=i.values.map(s).filter(p=>p.length>0);if(v(l).length<2)return new w;i.values=l;let c=i.get(null,u);if(A(c))return new w;z(c)&&(c=[c]),fe(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(s).filter(p=>p.length>0);if(v(l).length<2)return new w;i.values=l;let c=i.get(null,u);if(A(c))return new w;z(c)&&(c=[c]),fe(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,f(Ge(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(l){let c=yc(l);return r>0?l.length-c.length<r:t==="any"?c.length===l.length:t==="all"?c.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let l=i.index.filter(c=>{let p=i.get(c,null).values;return s(p)});return l.length>0?i.get(l,null):new w}else if(e===1){let l=i.columns.filter(c=>{let p=i.get(null,c).values;return s(p)});return l.length>0?i.get(null,l):new w}return i}drop(e,t){let r=this;A(e)&&(e=[]),A(t)&&(t=[]),(z(e)||Oe(e))&&(e=[e]),(z(t)||Oe(t))&&(t=[t]),f(S(e),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(S(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(v(e).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(v(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;r.index.forEach((u,l)=>{e.indexOf(u)<0&&e.indexOf(l)<0&&(s||(s=[]),s.push(u))}),r.columns.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=r.get(s,o);if(fe(i)){let u=new w;u=u.assign(i),r.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){let e=this,t={};return e.values.forEach((r,s)=>{let o={};r.forEach((i,u)=>{o[e.columns[u]]=i}),t[e.index[s]]=o}),t}toCSVString(e){return xc(this,e)}toCSV(e,t){return wc(this,e,t)}print(){function e(q,j){return z(q)&&q.length>j?q.substring(0,j-3)+"...":q}let t=this;if(xs(t.shape,[0]))return console.table({}),t;let r=typeof window=="undefined"?20:10,s=parseInt(r/2),o=typeof window=="undefined"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>t.index.length?null:Y(0,s).concat(Y(t.index.length-s,t.index.length)),l=o>t.columns.length?null:Y(0,i).concat(Y(t.columns.length-i,t.columns.length)),c=t.get(u,l);c instanceof C&&(t.shape[0]===1?(c=new w([c.values]),c.index=t.index,c.columns=new C(t.columns).get(l).values):t.shape[1]===1&&(c=new w([c.values]).transpose(),c.index=new C(t.index).get(u).values,c.columns=t.columns)),r<=t.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Y(0,c.columns.length).map(q=>"..."))),o<=t.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let p=28;return c instanceof C?(c.values=c.values.map(q=>e(q,p)),c.name=e(c.name,p),c.index=c.index.map(q=>e(q,p))):(c.values=c.values.map(q=>q.map(j=>e(j,p))),c.columns=c.columns.map(q=>e(q,p)),c.index=c.index.map(q=>e(q,p))),console.table(c.toObject()),t}sort(e,t){return Ac(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return Sc(w,this,e,t)}shuffle(e){return Oc(this,e)}};w.fromCSV=function(){return vc(w,...arguments)};w.fromCSVString=function(){return Tc(w,...arguments)};Ts.exports=w});var Ms=a((fm,Es)=>{var Os=m(),Ss=g(),As=x();function Ic(n,e){Os(Ss(n),"You must pass two arrays into the `diff` function!"),Os(Ss(e),"You must pass two arrays into the `diff` function!");let t=As(n),r=As(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}Es.exports=Ic});var Ze=a((hm,js)=>{var Is=h(),jc=b();function Vc(n,e){try{return Is(n)?Is(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}js.exports=jc(Vc)});var He=a((mm,Vs)=>{var Uc=de(),Yc=x();function Cc(n){try{return Uc(...Yc(n))}catch{return NaN}}Vs.exports=Cc});var jt=a((dm,Us)=>{var zc=h(),kc=b();function $c(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!zc(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}Us.exports=kc($c)});var he=a((pm,Ys)=>{var Pc=jt();function _c(n,e){return Pc(n,e)}Ys.exports=_c});var Vt=a((gm,Cs)=>{var Bc=de(),Jc=he();function Fc(n,e){return Bc(n,Jc(e,-1))}Cs.exports=Fc});var ks=a((qm,zs)=>{var Lc=Ze(),Rc=He(),Kc=Ce(),Wc=Vt();function Qc(n,e){try{return Kc(Rc(Lc(Wc(n,e),2)))}catch{return NaN}}zs.exports=Qc});var Ps=a((ym,$s)=>{var Xc=he(),Gc=Ze();function Zc(n,e){return Xc(n,Gc(e,-1))}$s.exports=Zc});var Ut=a((Nm,Rs)=>{var Ae=m(),_s=d(),Bs=g(),Hc=h(),bm=oe(),Js=x(),Fs=T(),Dc=He(),el=he(),Ls=se();function De(n,e){Ae(!_s(n)&&!_s(e),"You must pass two arrays of numbers into the `dot` function!"),Ae(Bs(n)&&Bs(e),"You must pass two arrays of numbers into the `dot` function!"),Js(n).concat(Js(e)).forEach(s=>{Ae(Hc(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Fs(n),r=Fs(e);if(Ae(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Ae(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return Dc(el(n,e));if(t.length===1&&r.length===2)return Ls(e).map(s=>De(n,s));if(t.length===2&&r.length===1)return n.map(s=>De(s,e));if(t.length===2&&r.length===2){let s=Ls(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(De(n[i],s[l]));o.push(u)}return o}}Rs.exports=De});var Qs=a((wm,Ws)=>{var Ks=m(),tl=g(),nl=d(),rl=T();function sl(n){return Ks(tl(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Ks(rl(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!nl(e))}Ws.exports=sl});var eo=a((xm,Ds)=>{var Xs=m(),Gs=d(),Zs=g(),ol=k(),Hs=T();function il(n,e){Xs(Zs(n)&&Zs(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Xs(Hs(n).length===1&&Hs(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<ol([n.length,e.length]);s++)!Gs(n[s])&&!Gs(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Ds.exports=il});var uo=a((vm,io)=>{var to=m(),no=d(),ro=g(),so=h(),ul=k(),oo=T();function al(n,e){to(ro(n)&&ro(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),to(oo(n).length===1&&oo(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<ul([n.length,e.length]);s++)!no(n[s])&&so(n[s])&&!no(e[s])&&so(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}io.exports=al});var co=a((Tm,ao)=>{var cl=b(),ll=h();function fl(n){try{return ll(n)?Math.exp(n):NaN}catch{return NaN}}ao.exports=cl(fl)});var ho=a((Om,fo)=>{var hl=b();function lo(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*lo(n-1)}catch{return NaN}}fo.exports=hl(lo)});var po=a((Sm,mo)=>{var ml=h(),dl=b();function pl(n){try{let e=JSON.parse(n);return ml(e)?e:NaN}catch{return NaN}}mo.exports=dl(pl)});var Yt=a((Am,go)=>{var gl=h(),ql=b();function yl(n){try{let e=JSON.parse(n);return gl(e)?parseInt(e):NaN}catch{return NaN}}go.exports=ql(yl)});var bo=a((Em,yo)=>{var Q=m(),bl=d(),Ct=g(),zt=h(),qo=T(),Nl=Yt();function kt(n,e){return Q(!bl(n),"You must pass an array and an index into the `getValueAt` function!"),Q(Ct(n),"You must pass an array and an index into the `getValueAt` function!"),Q(zt(e)||Ct(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Ct(e)&&(Q(qo(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{Q(zt(t)&&Nl(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),Q(e.length<=qo(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),zt(e)?(Q(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(Q(e[0]<n.length,`The index ${e[0]} is out of bounds!`),kt(n[e[0]],e.slice(1))):kt(n,e[0])}yo.exports=kt});var $t=a((jm,No)=>{var Mm=P(),Im=_(),wl=h(),xl=ue();function vl(n){wl(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return xl(e,n)}No.exports=vl});var xo=a((Vm,wo)=>{var et=m(),Tl=d(),Ol=h(),Sl=$t();function Al(n){et(!Tl(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(Ol(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Sl([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}wo.exports=Al});var Pt=a((Ym,vo)=>{var Um=m(),El=G();function Ml(){return El([...arguments])}vo.exports=Ml});var Oo=a((Cm,To)=>{var Il=g(),jl=x(),Vl=Pt();function Ul(){let n=Object.values(arguments).map(r=>Il(r)?jl(r):[r]),e=[];return Vl(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}To.exports=Ul});var Bt=a((km,Eo)=>{var Ee=m(),tt=d(),So=h(),_t=g(),Yl=R(),Cl=x(),zm=T(),zl=Ke();function Ao(n,e){if(Ee(!tt(n),"You must pass an array into the `slice` function!"),Ee(_t(n),"You must pass an array into the `slice` function!"),tt(e))return n.slice();Ee(_t(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),Cl(e).forEach(s=>{Ee(tt(s)||So(s)&&zl(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];tt(t)&&(t=Yl(0,n.length)),So(t)&&(t=[t]);let r=[];return t.forEach(s=>{Ee(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];_t(o)?r.push(Ao(n[s],e.slice(1,e.length))):r.push(n[s])}),r}Eo.exports=Ao});var Vo=a(($m,jo)=>{var J=m(),kl=d(),$l=g(),Jt=h(),Pl=x(),_l=T(),nt=Bt(),Bl=Ut(),Mo=de(),Io=he(),Ft=mt(),X=R();function Lt(n){J(!kl(n),"You must pass a square 2D array into the `inverse` function!"),J($l(n),"You must pass a square 2D array into the `inverse` function!"),Pl(n).forEach(t=>J(Jt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=_l(n);if(J(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),J(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),J(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return J(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;J(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return Io(u,1/i)}else if(e[0]>1){let t=(r,s)=>Jt(r)||Jt(s)?Io(r,s):Bl(r,s);for(let r=1;r<e[0]-1;r++)try{let s=nt(n,[X(0,r),X(0,r)]),o=nt(n,[X(0,r),X(r,e[0])]),i=nt(n,[X(r,e[0]),X(0,r)]),u=nt(n,[X(r,e[0]),X(r,e[0])]),l=Lt(s),c=Lt(Mo(u,t(-1,t(t(i,l),o)))),p=Mo(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),j=t(-1,t(t(c,i),l)),E=c;return Ft(Ft(p,q,1),Ft(j,E,1),0)}catch{}J(!1,"This matrix cannot be inverted!")}}jo.exports=Lt});var Yo=a((Pm,Uo)=>{var Jl=b(),Rt=h();function Fl(n,e,t){try{return Rt(n)?Rt(e)?Rt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}Uo.exports=Jl(Fl)});var ko=a((_m,zo)=>{var Co=h(),Ll=d(),Rl=b();function Kl(n,e){try{return e=Ll(e)?Math.E:e,Co(n)?Co(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}zo.exports=Rl(Kl)});var Po=a((Bm,$o)=>{var Me=h(),Wl=b();function Ql(n,e,t,r,s){try{return Me(n)?Me(e)?Me(t)?Me(r)?Me(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}$o.exports=Wl(Ql)});var Bo=a((Km,_o)=>{var Jm=m(),Fm=d(),Lm=g(),Rm=h(),Xl=x(),Gl=D(),Zl=$e();function Hl(n){try{let e=Xl(n),t=Zl(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=Gl(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}_o.exports=Hl});var Lo=a((Wm,Fo)=>{var Dl=x(),ef=ke(),tf=G(),Jo=D();function nf(n){try{if(n.length===0)return NaN;let e=Dl(n);if(e.length===0)return NaN;let t={},r=tf(e);r.forEach(u=>{t[u]=ef(e,u)});let s=Jo(r,(u,l)=>t[l]-t[u]),o=s[0],i=Jo(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Fo.exports=nf});var Qo=a((Gm,Wo)=>{var rf=d(),Qm=P(),Xm=_(),{random:Ro}=Z(),sf=ue(),of=h();function Ko(){let n=Ro(),e=Ro();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function uf(n){if(rf(n))return Ko();of(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Ko());return sf(e,n)}Wo.exports=uf});var Go=a((Dm,Xo)=>{var Zm=P(),Hm=_(),af=ue(),cf=h();function lf(n){cf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return af(e,n)}Xo.exports=lf});var Do=a((ed,Ho)=>{var Zo=g(),ff=h(),rt=m(),hf=d();function Kt(n,e){if(rt(Zo(n),"The `permute` function only works on arrays!"),hf(e)&&(e=n.length),rt(ff(e),"`r` must be a whole number!"),e>n.length)return Kt(n);if(e<=0)return[[]];if(rt(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{rt(!Zo(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Kt(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}Ho.exports=Kt});var ri=a((td,ni)=>{var mf=g(),df=T(),ei=Be(),ti=ve();function pf(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(mf(e)){let t=df(e);t.length===1?new ti(e).print():t.length==2?new ei(e).print():console.log(e)}else e instanceof ei||e instanceof ti?e.print():console.log(e)})}ni.exports=pf});var oi=a((nd,si)=>{var gf=h(),qf=b();function yf(n){try{return gf(n)?Math.round(n):NaN}catch{return NaN}}si.exports=qf(yf)});var Wt=a((rd,ai)=>{var ii=m(),bf=h(),ui=g(),Nf=ie();function wf(n,e,t){ii(ui(n),"The first argument passed into the `setValueAt` function must be an array!"),bf(e)&&(e=[e]),ii(ui(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Nf(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}ai.exports=wf});var li=a((sd,ci)=>{var xf=h(),vf=b();function Tf(n){try{return xf(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}ci.exports=vf(Tf)});var hi=a((od,fi)=>{var Of=h(),Sf=b();function Af(n){try{return Of(n)?Math.sin(n):NaN}catch{return NaN}}fi.exports=Sf(Af)});var di=a((id,mi)=>{var Ef=ze();function Mf(n){return Ef(n)}mi.exports=Mf});var gi=a((ud,pi)=>{var If=h(),jf=b();function Vf(n){try{return If(n)?Math.tan(n):NaN}catch{return NaN}}pi.exports=jf(Vf)});var st=a((ad,yi)=>{var qi=$();function Uf(n,e){assert(qi(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function Yf(n,e){assert(qi(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}yi.exports={timeSync:Uf,timeAsync:Yf}});var wi=a((cd,Ni)=>{var bi=m(),Cf=g(),zf=$(),kf=_(),$f=ye(),Pf=Wt(),_f=x();function Bf(n,e){bi(Cf(n),"The first argument passed into the `where` function must be an array!"),bi(zf(e),"The second argument passed into the `where` function must be a function!");let t=_f(n).length,r=kf(n,e),s=[],o=0,i=!1;for(;!i;){let u=$f(r,!0);u?(s[o]=u,r=Pf(r,u,null),o++):i=!0}return o===0?null:s}Ni.exports=Bf});var Jf=a((ld,Qt)=>{var Ie={abs:lt(),add:de(),append:mt(),apply:_(),arccos:An(),arcsin:Mn(),arctan:jn(),argmax:_n(),argmin:Fn(),assert:m(),ceil:Rn(),chop:Qn(),clamp:Gn(),cohensd:nr(),combine:ir(),copy:ie(),correl:pr(),cos:qr(),count:ke(),covariance:qt(),DataFrame:Be(),diff:Ms(),distance:ks(),divide:Ps(),dot:Ut(),dropMissing:Qs(),dropMissingPairwise:eo(),dropNaN:$e(),dropNaNPairwise:uo(),exp:co(),factorial:ho(),flatten:x(),float:po(),floor:Ke(),getValueAt:bo(),identity:xo(),indexOf:ye(),int:Yt(),intersect:Oo(),inverse:Vo(),isArray:g(),isBoolean:H(),isEqual:oe(),isFunction:$(),isNumber:h(),isObject:Je(),isString:L(),isUndefined:d(),lerp:Yo(),log:ko(),map:Po(),MathError:re(),max:k(),mean:be(),median:Bo(),min:Ve(),mode:Lo(),multiply:jt(),ndarray:P(),normal:Qo(),ones:Go(),permute:Do(),pow:Ze(),print:ri(),random:Z().random,range:R(),reshape:ue(),reverse:pe(),round:oi(),scale:he(),seed:Z().seed,Series:ve(),set:G(),setValueAt:Wt(),shape:T(),shuffle:At(),sign:li(),sin:hi(),slice:Bt(),sort:D(),sqrt:Ce(),std:ze(),stdev:di(),subtract:Vt(),sum:He(),tan:gi(),time:st().timeSync,timeSync:st().timeSync,timeAsync:st().timeAsync,transpose:se(),union:Pt(),variance:Ue(),vectorize:b(),where:wi(),zeros:$t(),dump:function(){Object.keys(Ie).forEach(n=>{typeof global!="undefined"&&(global[n]=Ie[n]),typeof window!="undefined"&&(window[n]=Ie[n])})}};typeof Qt!="undefined"&&(Qt.exports=Ie);typeof window!="undefined"&&(window.JSMathTools=Ie)});Jf();})();
