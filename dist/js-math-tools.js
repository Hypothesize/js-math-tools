(()=>{var ft=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var f=a((nm,rn)=>{function iu(n){return typeof n=="number"&&!isNaN(n)}rn.exports=iu});var se=a((rm,on)=>{var sn=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};on.exports=sn});var h=a((sm,un)=>{var uu=se();un.exports=function(n,e){if(!n)throw new uu(e)}});var m=a((om,an)=>{function au(n){return n===null||typeof n>"u"}an.exports=au});var p=a((im,cn)=>{function cu(n){return n instanceof Array}cn.exports=cu});var w=a((um,mn)=>{var ln=h(),lu=m(),fn=p();function hn(n){ln(!lu(n),"You must pass one array into the `flatten` function!"),ln(fn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){fn(t)?e=e.concat(hn(t)):e.push(t)}),e}mn.exports=hn});var Y=a((am,pn)=>{var fu=w(),hu=f();function mu(n){try{let e=fu(n),t=-1/0;for(let r=0;r<e.length;r++){if(!hu(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}pn.exports=mu});var U=a((cm,dn)=>{function pu(n){return typeof n=="function"}dn.exports=pu});var b=a((lm,gn)=>{var ht=h(),du=m(),mt=p(),gu=Y(),qu=U();function yu(n){return ht(!du(n),"You must pass a function into the `vectorize` function!"),ht(qu(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>mt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>mt(arguments[i])).map(i=>arguments[i].length),o=gu(s);s.forEach(i=>{ht(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>mt(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}gn.exports=yu});var pt=a((fm,qn)=>{var bu=f(),Nu=b();function wu(n){try{return bu(n)?Math.abs(n):NaN}catch{return NaN}}qn.exports=Nu(wu)});var me=a((hm,yn)=>{var xu=f(),vu=b();function Tu(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!xu(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}yn.exports=vu(Tu)});var x=a((mm,wn)=>{var Ve=h(),Su=m(),bn=p(),Ou=Y();function Nn(n){Ve(!Su(n),"You must pass an array into the `shape` function!"),Ve(bn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>bn(r));if(t.indexOf(!0)>-1){Ve(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Ou(r);r.forEach(function(o){Ve(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(Nn(n[0]))}return e}wn.exports=Nn});var pe=a((pm,vn)=>{var xn=h(),Au=m(),Eu=p();function Mu(n){xn(!Au(n),"You must pass an array into the `reverse` function!"),xn(Eu(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}vn.exports=Mu});var C=a((dm,Sn)=>{var de=h(),ju=m(),Iu=p(),Uu=f(),Vu=w(),ge="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function Tn(n,e){if(e||(de(!ju(n),ge),Iu(n)||(n=[n]),n=Vu(n),de(n.length>0,ge),n.forEach(t=>{de(Uu(t),ge),de(parseInt(t)===t,ge),de(t>=0,ge)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(Tn(n.slice(1),!0));return t}}Sn.exports=Tn});var B=a((gm,An)=>{var dt=h(),Yu=m(),Cu=p(),_u=x(),On=pe(),zu=C();function ku(n){dt(!Yu(n),"You must pass an array into the `transpose` function!"),dt(Cu(n),"You must pass an array into the `transpose` function!");let e=_u(n);if(dt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return On(n);if(e.length===2){let t=zu(On(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}An.exports=ku});var qt=a((qm,Un)=>{var j=h(),En=m(),Mn=p(),Pu=f(),jn=x(),gt=B();function In(n,e,t=0){j(!En(n),"You must pass two arrays into the `append` function!"),j(!En(e),"You must pass two arrays into the `append` function!"),j(Mn(n),"You must pass two arrays into the `append` function!"),j(Mn(e),"You must pass two arrays into the `append` function!"),j(Pu(t),"The `axis` argument to the `append` function must be 0 or 1!"),j(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),j(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=jn(n),s=jn(e);j(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),j(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&j(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(j(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return gt(In(gt(n),gt(e),0))}}Un.exports=In});var _=a((ym,Vn)=>{var $u=b();function Bu(n,e){try{return e(n)}catch{return NaN}}Vn.exports=$u(Bu)});var Cn=a((bm,Yn)=>{var Ju=f(),Fu=b();function Wu(n){try{return Ju(n)?Math.acos(n):NaN}catch{return NaN}}Yn.exports=Fu(Wu)});var zn=a((Nm,_n)=>{var Lu=f(),Ru=b();function Ku(n){try{return Lu(n)?Math.asin(n):NaN}catch{return NaN}}_n.exports=Ru(Ku)});var Pn=a((wm,kn)=>{var Qu=f(),Xu=b();function Gu(n){try{return Qu(n)?Math.atan(n):NaN}catch{return NaN}}kn.exports=Xu(Gu)});var J=a((vm,Bn)=>{var xm=p();function $n(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!$n(n[u],e[u]))return!1}return!0}}}Bn.exports=$n});var qe=a((Tm,Rn)=>{var Jn=h(),Zu=m(),Fn=p(),yt=x(),Wn=J();function Ln(n,e,t){if(Jn(!Zu(n),"You must pass an array and a value into the `indexOf` function!"),Jn(Fn(n),"You must pass an array and a value into the `indexOf` function!"),yt(n).length===1||Fn(e)&&Wn(yt(n[0]),yt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Wn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Ln(s,e);if(o)return[r].concat(o)}return null}Rn.exports=Ln});var Qn=a((Sm,Kn)=>{var Hu=qe(),Du=Y();function ea(n){try{return Hu(n,Du(n))}catch{return NaN}}Kn.exports=ea});var Ye=a((Om,Xn)=>{var ta=w(),na=f();function ra(n){try{let e=ta(n),t=1/0;for(let r=0;r<e.length;r++){if(!na(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Xn.exports=ra});var Zn=a((Am,Gn)=>{var sa=qe(),oa=Ye();function ia(n){try{return sa(n,oa(n))}catch{return NaN}}Gn.exports=ia});var Dn=a((Em,Hn)=>{var ua=f(),aa=b();function ca(n){try{return ua(n)?Math.ceil(n):NaN}catch{return NaN}}Hn.exports=aa(ca)});var nr=a((Mm,tr)=>{var la=m(),fa=pt(),ha=b(),er=f();function ma(n,e){try{if(!er(n))return NaN;if(la(e))e=1e-10;else if(!er(e))return NaN;return fa(n)<e?0:n}catch{return NaN}}tr.exports=ha(ma)});var sr=a((jm,rr)=>{var bt=f(),pa=b();function da(n,e,t){try{return bt(n)?bt(e)?bt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}rr.exports=pa(da)});var ye=a((Im,or)=>{var ga=f(),qa=w();function ya(n){try{let e=qa(n),t=0;for(let r=0;r<e.length;r++){if(!ga(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}or.exports=ya});var Ce=a((Um,ir)=>{var ba=ye(),Na=w(),wa=f();function xa(n){try{let e=Na(n),t=ba(e),r=0;for(let s=0;s<e.length;s++){if(!wa(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}ir.exports=xa});var lr=a((Vm,cr)=>{var ur=ye(),ar=Ce();function va(n,e){try{let t=ur(n),r=ur(e),s=Math.sqrt((ar(n)+ar(e))/2);return(t-r)/s}catch{return NaN}}cr.exports=va});var pr=a((Ym,mr)=>{var fr=p(),Ta=f(),_e=h();function hr(n,e){if(_e(fr(n),"The `combine` function only works on arrays!"),_e(Ta(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(_e(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{_e(!fr(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;hr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}mr.exports=hr});var Z=a((_m,dr)=>{var Cm=h(),Sa=m(),Oa=p();function Nt(n){if(typeof n=="object"){if(Sa(n))return n;if(Oa(n))return n.map(Nt);{let e={};return Object.keys(n).forEach(function(t){e[t]=Nt(n[t])}),e}}else return n}dr.exports=Nt});var wt=a((zm,yr)=>{var gr=ye(),qr=m();function Aa(n,e){try{let t=gr(n),r=gr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(qr(n[i]))return NaN;if(qr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}yr.exports=Aa});var ze=a((km,br)=>{var Ea=f(),Ma=b();function ja(n){try{return Ea(n)?Math.sqrt(n):NaN}catch{return NaN}}br.exports=Ma(ja)});var ke=a((Pm,Nr)=>{var Ia=ze(),Ua=Ce();function Va(n){try{return Ia(Ua(n))}catch{return NaN}}Nr.exports=Va});var vr=a(($m,xr)=>{var Ya=wt(),wr=ke();function Ca(n,e){try{return Ya(n,e)/(wr(n)*wr(e))}catch{return NaN}}xr.exports=Ca});var Sr=a((Bm,Tr)=>{var _a=f(),za=b();function ka(n){try{return _a(n)?Math.cos(n):NaN}catch{return NaN}}Tr.exports=za(ka)});var H=a((Jm,Ar)=>{var Or=h(),Pa=m(),$a=p(),Ba=w();function Ja(n){Or(!Pa(n),"You must pass an array into the `set` function!"),Or($a(n),"You must pass an array into the `set` function!");let e=[],t={};return Ba(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Ar.exports=Ja});var Pe=a((Fm,Ur)=>{var Er=h(),Mr=m(),jr=p(),Ir=w(),Fa=J(),Wa=H();function La(n,e){Er(!Mr(n),"You must pass an array and some items to count into the `count` function!"),Er(jr(n),"You must pass an array and some items to count into the `count` function!");let t=Ir(n);return e=Mr(e)?Wa(n):e,jr(e)?Ir(e).map(function(r){let s=t.filter(o=>Fa(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Ur.exports=La});var oe=a((Wm,zr)=>{var be=h(),Vr=p(),Yr=f(),Ra=x(),Cr=w(),Ka=n=>n.reduce((e,t)=>e*t);function _r(n,e){if(be(Vr(n),"The first argument passed into the `reshape` function must be an array!"),Yr(e)&&(e=[e]),be(Vr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),be(Ra(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{be(Yr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Cr(n);let t=Cr(n);be(Ka(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(_r(i,e.slice(1)))}return r}zr.exports=_r});var D=a((Km,Lr)=>{var Lm=C(),Rm=_(),$r=m(),Qa=h(),Br=f(),Jr=Z(),Xa=oe(),Fr=Math.pow(2,64),N=[];Wr(parseInt(Math.random()*Fr));function Ga(n,e){n=T(n);function t(){n+=T("0x9e3779b97f4a7c15");let s=Jr(n);return s=(s^s>>30n)*T("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*T("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function T(n){return BigInt.asUintN(64,BigInt(n))}function kr(n,e){return n=T(n),e=BigInt(e),T(T(n<<e)|T(n>>T(64n-e)))}function Wr(n){if($r(n))return Jr(N);{Qa(Br(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Ga(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function Pr(){let n=T(kr(N[0]+N[3],23)+N[0]),e=T(N[1]<<17n);return N[2]=T(N[2]^N[0]),N[3]=T(N[3]^N[1]),N[1]=T(N[1]^N[2]),N[0]=T(N[0]^N[3]),N[2]=T(N[2]^e),N[3]=kr(N[3],45),parseInt(n)/Fr}function Za(n){if($r(n))return Pr();Br(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Pr());return Xa(e,n)}Lr.exports={random:Za,seed:Wr}});var Ne=a((Qm,Kr)=>{var Rr=h(),Ha=p(),Da=m(),ec=f(),tc=x();function nc(n){return Rr(Ha(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Rr(tc(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Da(e)&&ec(e))}Kr.exports=nc});var ee=a((Xm,Qr)=>{function rc(n){return typeof n=="boolean"}Qr.exports=rc});var E=a((Gm,Xr)=>{function sc(n){return typeof n=="string"}Xr.exports=sc});var z=a((Zm,Gr)=>{var xt=h(),vt=m(),Tt=f(),oc=pe();function ic(n,e,t=1){xt(!vt(n)&&!vt(e)&&!vt(t),"You must pass two numbers and optionally a step value to the `range` function!"),xt(Tt(n)&&Tt(e)&&Tt(t),"You must pass two numbers and optionally a step value to the `range` function!"),xt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=oc(s)),s}Gr.exports=ic});var te=a((Hm,Hr)=>{var St=h(),Zr=m(),uc=p(),ac=U();function cc(n,e){return n<e?-1:n>e?1:0}function lc(n,e){Zr(e)&&(e=cc),St(!Zr(n),"You must pass an array into the `sort` function!"),St(uc(n),"You must pass an array into the `sort` function!"),St(ac(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Hr.exports=lc});var F=a((tp,rs)=>{var y=h(),$e=p(),ne=m(),ie=x(),Be=B(),we=z(),At=f(),xe=E(),Dm=_(),fc=U(),hc=C(),Ot=Z(),mc=H(),Dr=pe(),es=te(),ts=ee(),ep=Je();function pc(n){return At(n)&&parseInt(n)===n}function dc(n){return pc(n)&&n>=0}function ns(n,e){y(At(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var k=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y($e(r),"The new values must be a 1-dimensional array!");let s=ie(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(we(t._index.length,s[0]).map(o=>"row"+ns(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y($e(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ie(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ie(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ie(this.values)}isEmpty(){return this.values.filter(t=>!ne(t)).length===0}clear(){let e=this,t=e.copy();return t.values=hc(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||At(e))&&(e=[e]);let r=mc((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),ne(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;ne(e)&&(e=t.index),y($e(e),"The `indices` array must be a 1-dimensional array of strings."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(xe(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new k(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;ne(e)&&(e=we(0,r[0])),y($e(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(dc(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new k(Dr(e.values));return t.index=Dr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=we(0,e.shape[0]).map(r=>"row"+ns(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new k(Ot(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(fc(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>ne(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(we(0,r/2).concat(we(t.index.length-r/2,t.index.length)));let o=Ot(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(ts(e)||xe(e)||ne(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;ne(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),ts(e)&&(t=e);let r=this,s=Be([r.values,r.index]);s=Be(es(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new k(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=Be([e.values,e.index]);t=Be(es(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new k(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=Ot(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new k,r.name=t.name,r):(r.values=i,r.index=s,r)}};rs.exports=k});var Et=a((np,ss)=>{var gc=h(),qc=f();function yc(n,e){gc(qc(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}ss.exports=yc});var ve=a((rp,os)=>{var bc=p(),Nc=m();function wc(n){return typeof n=="object"&&!Nc(n)&&!bc(n)}os.exports=wc});var Mt=a((sp,is)=>{var xc=E(),vc=ve(),Tc=ee(),Sc=m(),Oc=se();function Ac(n,e){e=(()=>{if(Sc(e))return!0;if(Tc(e))return e;throw new Oc("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>xc(u)?JSON.stringify(u):vc(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}is.exports=Ac});var as=a((op,us)=>{var Ec=Mt();function Mc(n,e,t){let r=Ec(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ft("fs"),o=ft("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}us.exports=Mc});var jt=a((ap,fs)=>{var W=p(),cs=ee(),ip=ve(),up=Et(),jc=Y(),ls=z(),Fe=E(),We=se(),Le=m(),L=h();function Ic(n,e,t,r,s,o){return t=(()=>{if(Le(t))return!1;if(cs(t))return t;throw new We("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Le(r))return!1;if(cs(r))return r;throw new We("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Le(s))return",";if(Fe(s))return L(s.length===1,u),s;if(W(s))return L(s.length===2,u),L(s[0].length===1,u),L(s[1].length===1,u),s;throw new We(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Le(o))return'"';if(Fe(o))return L(o.length===1,u),o;if(W(o))return L(o.length===2,u),L(o[0].length===1,u),L(o[1].length===1,u),o;throw new We(u)})(),(()=>{let l=e.split(`
`).filter(S=>S.length>0).map(S=>{let O=[],re="",he=!1;for(let $=0;$<S.length;$++){let A=S[$];if(A.match(/\\/g))$++;else if(W(o)&&A===o[0])he=!0;else if(W(o)&&A===o[1])he=!1;else if(Fe(o)&&A===o)he=!he;else if(W(s)&&A===s[0]||W(s)&&A===s[1]||Fe(s)&&A===s)if(he)re+=A;else{let ct=re;try{let lt=JSON.parse(ct);W(lt)?O.push(ct.trim()):O.push(lt)}catch{O.push(ct.trim())}re=""}else re+=A}if(re.length>0){let $=re;try{let A=JSON.parse($);W(A)?O.push($.trim()):O.push(A)}catch{O.push($.trim())}}return O}),c=(()=>{let S=t?l.shift():ls(0,l[0].length).map(O=>"col"+O);return r&&S.shift(),S})(),g=(()=>r?l.map(O=>O.shift()):ls(0,l.length).map(O=>"row"+O))(),q=jc(l.map(S=>S.length)),I=new n(l.map(S=>(S.length=q,S)));return t&&(I.columns=c),r&&(I.index=g),I})()}fs.exports=Ic});var ms=a((cp,hs)=>{var Uc=h(),Vc=jt(),Yc=E(),Cc=m(),_c=se();async function zc(n,e,t,r,s,o,i){t=(()=>Cc(t)?"utf8":(Uc(Yc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ft("fs").readFileSync(e,t)}catch{}throw new _c(`The path "${e}" could not be loaded!`)})();return Vc(n,u,r,s,o,i)}hs.exports=zc});var Re=a((lp,ps)=>{var kc=f(),Pc=b();function $c(n){try{return kc(n)?Math.floor(n):NaN}catch{return NaN}}ps.exports=Pc($c)});var It=a((hp,gs)=>{var ds=h(),Bc=m(),Jc=p(),fp=Re(),{random:Fc}=D();function Wc(n){ds(!Bc(n),"You must pass an array into the `shuffle` function!"),ds(Jc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Fc()*t.length);e.push(t.splice(s,1)[0])}return e}gs.exports=Wc});var bs=a((mp,ys)=>{var Lc=m(),Rc=h(),qs=It();function Kc(n,e){return Lc(e)&&(e=0),Rc(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?qs(n.index):null,e===1?qs(n.columns):null)}ys.exports=Kc});var vs=a((pp,xs)=>{var Ns=h(),Qc=U(),Xc=m(),Ke=F(),Te=w();function ws(n){let e={};return Te(n).forEach((t,r)=>{e[t]=r}),e}function ue(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function Gc(n,e,t,r){Ns(Qc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),Xc(r)&&(r=0),Ns(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=ws(s.index),i=ws(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.index[c],g.index=e.columns;let q=t(g,c,e);return q||delete o[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Ke(Te(u));return l.name=ue(o)[0],l.index=ue(i),l}s.values=u,s.index=ue(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.columns[c],g.index=e.index;let q=t(g,c,e);return q||delete i[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Ke(Te(u));return l.name=ue(i)[0],l.index=ue(o),l}s.values=u,s.index=ue(i),s=s.transpose()}return s}xs.exports=Gc});var Es=a((dp,As)=>{var{random:Zc}=D(),Ts=m(),Ut=f(),ae=E(),Vt=ee(),Ss=p(),M=h(),Os=x(),Hc=z(),Dc=te(),el=w();function tl(n,e,t){let r=n.copy(),s=Zc().toString();return r=r.assign(s,r.index),Ts(e)&&(e=[s],t=[!0]),(Ut(e)||ae(e))&&(e=[e],(Vt(t)||ae(t))&&(t=[t])),M(Ss(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),M(Os(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),Ts(t)&&(t=Hc(0,e.length).map(o=>!0)),M(Ss(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(Os(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(M(ae(o)||Ut(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ae(o)){let i=r.columns.indexOf(o);return M(i>-1,`The column "${o}" does not exist!`),i}if(Ut(o))return M(parseInt(o)===o,"Column indices must be whole numbers!"),M(o>=0,`The column index ${o} is out of bounds!`),M(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(M(ae(o)||Vt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ae(o)){let i=o.trim().toLowerCase();return M(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(Vt(o))return o}),r.values=Dc(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=el(r.get(null,s).values),r=r.dropColumns(s),r}As.exports=tl});var js=a((gp,Ms)=>{var nl=E(),rl=J(),Se=z(),Qe=F();function sl(n,e){function t(q,I){return nl(q)&&q.length>I?q.substring(0,I-3)+"...":q}if(rl(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Se(0,s).concat(Se(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Se(0,i).concat(Se(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Qe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Qe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Qe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Se(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let g=28;return c instanceof Qe?(c.values=c.values.map(q=>t(q,g)),c.name=t(c.name,g),c.index=c.index.map(q=>t(q,g))):(c.values=c.values.map(q=>q.map(I=>t(I,g))),c.columns=c.columns.map(q=>t(q,g)),c.index=c.index.map(q=>t(q,g))),console.table(c.toObject()),e}Ms.exports=sl});var Us=a((qp,Is)=>{function ol(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}Is.exports=ol});var Oe=a((yp,Vs)=>{var il=F();function ul(n){return n instanceof il}Vs.exports=ul});var $s=a((bp,Ps)=>{var Ys=m(),Cs=E(),_s=f(),Xe=h(),zs=p(),ks=x(),al=Oe();function cl(n,e,t,r){Ys(t)&&(t=[]),Ys(r)&&(r=[]),(Cs(t)||_s(t))&&(t=[t]),(Cs(r)||_s(r))&&(r=[r]),Xe(zs(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(zs(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(ks(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(ks(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if(al(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}Ps.exports=cl});var Ge=a((Np,Bs)=>{var ll=f();function fl(n){return ll(n)&&parseInt(n)===n}function hl(n){return fl(n)&&n>=0}Bs.exports=hl});var Fs=a((wp,Js)=>{var Yt=h(),ml=Ge(),pl=Ne();function dl(n,e,t,r,s){t=t||0,Yt(t===0||t===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,Yt(ml(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",Yt(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(l){let c=pl(l);return s>0?l.length-c.length<s:r==="any"?c.length===l.length:r==="all"?c.length>0:!0}let i=e.copy(),u=Math.random().toString();if(t===0){let l=i.index.filter(c=>{let g=i.get(c,null).values;return o(g)});return l.length>0?i.get(l,null):new n}else if(t===1){let l=i.columns.filter(c=>{let g=i.get(null,c).values;return o(g)});return l.length>0?i.get(null,l):new n}return i}Js.exports=dl});var Qs=a((xp,Ks)=>{var Ct=h(),gl=Ge(),Ae=m(),Ws=E(),Ls=Oe(),Rs=x();function ql(n,e,t,r,s){t=t||0,Ct(t===0||t===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),s=s||0,Ct(gl(s),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),r=s>0?"none":r||"any",Ct(r==="any"||r==="all"||r==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function o(l){if(s>0){let c=0;for(let g=0;g<l.length;g++){let q=l[g];if(Ae(q)&&c++,c>=s)return[]}}else if(r==="any")for(let c=0;c<l.length;c++){let g=l[c];if(Ae(g))return[]}else if(r==="all"){for(let c=0;c<l.length;c++){let g=l[c];if(!Ae(g))return l}return[]}return l}let i=e.copy(),u=Math.random().toString();if(t===0){i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Rs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Ae(c))return new n;Ws(c)&&(c=[c]),Ls(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(t===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Rs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Ae(c))return new n;Ws(c)&&(c=[c]),Ls(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}Ks.exports=ql});var Ds=a((vp,Hs)=>{var yl=U(),Xs=h(),Gs=B(),Ze=F(),Zs=x(),ce=Z();function bl(n,e,t,r){if(r=r||0,Xs(yl(t),"The first parameter to the `apply` method must be a function."),Xs(r===0||r===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),r===0){let o=Gs(e.values).map((i,u)=>{let l=new Ze(i);return l.name=e.columns[u],l.index=e.index,t(l,u,e)});if(Zs(o).length===1){let i=new Ze(o);return i.index=ce(e.columns),i}else{let i=new n(Gs(o));return i.index=ce(e.index),i.columns=ce(e.columns),i}}else if(r===1){let s=e.values.map((o,i)=>{let u=new Ze(o);return u.name=e.index[i],u.index=e.columns,t(u,i,e)});if(Zs(s).length===1){let o=new Ze(s);return o.index=ce(e.index),o}else{let o=new n(s);return o.index=ce(e.index),o.columns=ce(e.columns),o}}}Hs.exports=bl});var to=a((Tp,eo)=>{var Nl=m(),R=h(),wl=E(),_t=Oe(),Ee=p(),zt=x(),xl=ve(),vl=J(),Tl=B();function Sl(n,e,t){let r,s;if(Nl(t)?(s=e,R(!Ee(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,R(wl(r),"When using two parameters for the `assign` method, the first parameter must be a string."),R(_t(s)||Ee(s)&&zt(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),R(xl(s)||_t(s)||Ee(s)&&zt(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method."),_t(s)){let o={};return R(n.isEmpty()||vl(s.index,n.index),"The index of the new data does not match the index of the DataFrame."),o[r||s.name]=s.values,n.assign(o)}else if(Ee(s)){let o={};return o[r||"data"]=s,n.assign(o)}else{let o=n.copy(),i=o.shape;return Object.keys(s).forEach(u=>{let l=s[u];if(R(Ee(l),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),R(zt(l).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),o.isEmpty())o.values=Tl([l]),o.columns=[u],i=o.shape;else{R(l.length===i[0],`Column "${u}" in the new data is not the same length as the other columns in the original DataFrame.`);let c=o.columns.indexOf(u);c<0&&(o.columns.push(u),c=o.columns.indexOf(u)),o.values.forEach((g,q)=>{g[c]=l[q]})}}),o}}eo.exports=Sl});var Je=a((Cp,ao)=>{var{random:Sp}=D(),Op=_(),d=h(),Ol=Z(),no=Pe(),Ap=Ne(),kt=w(),K=p(),Ep=ee(),Mp=J(),jp=U(),ro=f(),He=E(),Q=m(),Ip=Y(),Up=Ye(),Al=C(),le=z(),so=F(),oo=H(),V=x(),Vp=te(),io=B(),De=Et(),El=as(),Ml=Mt(),jl=ms(),Il=jt(),Ul=bs(),Vl=vs(),Yl=Es(),Cl=js(),_l=Us(),zl=$s(),Yp=Oe(),kl=Fs(),uo=Ge(),Pl=Qs(),$l=Ds(),Bl=to();function et(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}var v=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){d(K(r),"The new values must be a 2-dimensional array!");let s=V(r);d(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(le(t._index.length,s[0]).map(o=>"row"+De(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(le(t._columns.length,s[1]).map(o=>"col"+De(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){d(K(r),"The new columns list must be a 1-dimensional array of strings!"),d(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),d(V(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+et(8):o.trim()));let s=(()=>{let o=no(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+et(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){d(K(r),"The new index must be a 1-dimensional array of strings!"),d(r.length===t.shape[0],"The new index must be the same length as the old index!"),d(V(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+et(8):o.trim()));let s=(()=>{let o=no(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+et(8):o),t._index=r}}),d(Q(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(K(e)){let r=V(e);d(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=io(r);let s=V(t.values);t._index=le(0,s[0]).map(o=>"row"+De(o,(s[0]-1).toString().length))}}get shape(){return V(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return oo(this.values).filter(t=>!Q(t)).length===0}clear(){let e=this,t=new v(Al(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(He(e)||ro(e))&&(e=[e]),(He(t)||ro(t))&&(t=[t]);let s=oo((e||[]).concat(t||[]).map(o=>typeof o));return d(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&d(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(d(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),d(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),Q(e)||(e=e.map(o=>{if(typeof o=="string")return d(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return d(o>=0,`Index ${o} is out of bounds!`),d(parseInt(o)===o,"Row numbers must be integers!"),d(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),Q(t)||(t=t.map(o=>{if(typeof o=="string")return d(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return d(o>=0,`Column ${o} is out of bounds!`),d(parseInt(o)===o,"Column numbers must be integers!"),d(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;Q(e)&&(e=r.index),Q(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),d(K(e)&&K(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(V(e).length===1&&V(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(e.length>0,"The `rows` array must contain at least one row name."),d(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{d(He(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{d(He(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return kt(s)[0];if(e.length===1){let i=new so(kt(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new so(kt(s));return i.name=t[0],i.index=e,i}let o=new v(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;Q(e)&&(e=le(0,s[0])),Q(t)&&(t=le(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),d(K(e)&&K(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(V(e).length===1&&V(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(e.length>0,"The `rowIndices` array must contain at least one index."),d(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{d(uo(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{d(uo(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new v(io(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=le(0,e.shape[0]).map(r=>"row"+De(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new v;let t=new v(Ol(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){return Bl(this,e,t)}apply(e,t){return $l(v,this,e,t)}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){return Pl(v,this,e,t,r)}dropNaN(e,t,r){return kl(v,this,e,t,r)}drop(e,t){return zl(v,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return _l(this)}toCSVString(e){return Ml(this,e)}toCSV(e,t){return El(this,e,t)}print(){return Cl(v,this)}sort(e,t){return Yl(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return Vl(v,this,e,t)}shuffle(e){return Ul(this,e)}};v.fromCSV=function(){return jl(v,...arguments)};v.fromCSVString=function(){return Il(v,...arguments)};ao.exports=v});var mo=a((_p,ho)=>{var co=h(),lo=p(),fo=w();function Jl(n,e){co(lo(n),"You must pass two arrays into the `diff` function!"),co(lo(e),"You must pass two arrays into the `diff` function!");let t=fo(n),r=fo(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}ho.exports=Jl});var tt=a((zp,go)=>{var po=f(),Fl=b();function Wl(n,e){try{return po(n)?po(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}go.exports=Fl(Wl)});var nt=a((kp,qo)=>{var Ll=me(),Rl=w();function Kl(n){try{return Ll(...Rl(n))}catch{return NaN}}qo.exports=Kl});var Pt=a((Pp,yo)=>{var Ql=f(),Xl=b();function Gl(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Ql(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}yo.exports=Xl(Gl)});var fe=a(($p,bo)=>{var Zl=Pt();function Hl(n,e){return Zl(n,e)}bo.exports=Hl});var $t=a((Bp,No)=>{var Dl=me(),ef=fe();function tf(n,e){return Dl(n,ef(e,-1))}No.exports=tf});var xo=a((Jp,wo)=>{var nf=tt(),rf=nt(),sf=ze(),of=$t();function uf(n,e){try{return sf(rf(nf(of(n,e),2)))}catch{return NaN}}wo.exports=uf});var To=a((Fp,vo)=>{var af=fe(),cf=tt();function lf(n,e){return af(n,cf(e,-1))}vo.exports=lf});var Bt=a((Lp,jo)=>{var Me=h(),So=m(),Oo=p(),ff=f(),Wp=J(),Ao=w(),Eo=x(),hf=nt(),mf=fe(),Mo=B();function rt(n,e){Me(!So(n)&&!So(e),"You must pass two arrays of numbers into the `dot` function!"),Me(Oo(n)&&Oo(e),"You must pass two arrays of numbers into the `dot` function!"),Ao(n).concat(Ao(e)).forEach(s=>{Me(ff(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Eo(n),r=Eo(e);if(Me(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Me(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return hf(mf(n,e));if(t.length===1&&r.length===2)return Mo(e).map(s=>rt(n,s));if(t.length===2&&r.length===1)return n.map(s=>rt(s,e));if(t.length===2&&r.length===2){let s=Mo(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(rt(n[i],s[l]));o.push(u)}return o}}jo.exports=rt});var Vo=a((Rp,Uo)=>{var Io=h(),pf=p(),df=m(),gf=x();function qf(n){return Io(pf(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Io(gf(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!df(e))}Uo.exports=qf});var Po=a((Kp,ko)=>{var Yo=h(),Co=m(),_o=p(),yf=Y(),zo=x();function bf(n,e){Yo(_o(n)&&_o(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Yo(zo(n).length===1&&zo(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<yf([n.length,e.length]);s++)!Co(n[s])&&!Co(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}ko.exports=bf});var Ro=a((Qp,Lo)=>{var $o=h(),Bo=m(),Jo=p(),Fo=f(),Nf=Y(),Wo=x();function wf(n,e){$o(Jo(n)&&Jo(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),$o(Wo(n).length===1&&Wo(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Nf([n.length,e.length]);s++)!Bo(n[s])&&Fo(n[s])&&!Bo(e[s])&&Fo(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Lo.exports=wf});var Qo=a((Xp,Ko)=>{var xf=b(),vf=f();function Tf(n){try{return vf(n)?Math.exp(n):NaN}catch{return NaN}}Ko.exports=xf(Tf)});var Zo=a((Gp,Go)=>{var Sf=b();function Xo(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*Xo(n-1)}catch{return NaN}}Go.exports=Sf(Xo)});var Do=a((Zp,Ho)=>{var Of=f(),Af=b();function Ef(n){try{let e=JSON.parse(n);return Of(e)?e:NaN}catch{return NaN}}Ho.exports=Af(Ef)});var Jt=a((Hp,ei)=>{var Mf=f(),jf=b();function If(n){try{let e=JSON.parse(n);return Mf(e)?parseInt(e):NaN}catch{return NaN}}ei.exports=jf(If)});var ri=a((Dp,ni)=>{var X=h(),Uf=m(),Ft=p(),Wt=f(),ti=x(),Vf=Jt();function Lt(n,e){return X(!Uf(n),"You must pass an array and an index into the `getValueAt` function!"),X(Ft(n),"You must pass an array and an index into the `getValueAt` function!"),X(Wt(e)||Ft(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Ft(e)&&(X(ti(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{X(Wt(t)&&Vf(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),X(e.length<=ti(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Wt(e)?(X(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(X(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Lt(n[e[0]],e.slice(1))):Lt(n,e[0])}ni.exports=Lt});var Rt=a((nd,si)=>{var ed=C(),td=_(),Yf=f(),Cf=oe();function _f(n){Yf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Cf(e,n)}si.exports=_f});var ii=a((rd,oi)=>{var st=h(),zf=m(),kf=f(),Pf=Rt();function $f(n){st(!zf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(kf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Pf([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}oi.exports=$f});var Kt=a((od,ui)=>{var sd=h(),Bf=H();function Jf(){return Bf([...arguments])}ui.exports=Jf});var ci=a((id,ai)=>{var Ff=p(),Wf=w(),Lf=Kt();function Rf(){let n=Object.values(arguments).map(r=>Ff(r)?Wf(r):[r]),e=[];return Lf(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}ai.exports=Rf});var Xt=a((ad,hi)=>{var je=h(),ot=m(),li=f(),Qt=p(),Kf=z(),Qf=w(),ud=x(),Xf=Re();function fi(n,e){if(je(!ot(n),"You must pass an array into the `slice` function!"),je(Qt(n),"You must pass an array into the `slice` function!"),ot(e))return n.slice();je(Qt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),Qf(e).forEach(s=>{je(ot(s)||li(s)&&Xf(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];ot(t)&&(t=Kf(0,n.length)),li(t)&&(t=[t]);let r=[];return t.forEach(s=>{je(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Qt(o)?r.push(fi(n[s],e.slice(1,e.length))):r.push(n[s])}),r}hi.exports=fi});var gi=a((cd,di)=>{var P=h(),Gf=m(),Zf=p(),Gt=f(),Hf=w(),Df=x(),it=Xt(),eh=Bt(),mi=me(),pi=fe(),Zt=qt(),G=z();function Ht(n){P(!Gf(n),"You must pass a square 2D array into the `inverse` function!"),P(Zf(n),"You must pass a square 2D array into the `inverse` function!"),Hf(n).forEach(t=>P(Gt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=Df(n);if(P(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),P(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),P(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return P(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;P(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return pi(u,1/i)}else if(e[0]>1){let t=(r,s)=>Gt(r)||Gt(s)?pi(r,s):eh(r,s);for(let r=1;r<e[0]-1;r++)try{let s=it(n,[G(0,r),G(0,r)]),o=it(n,[G(0,r),G(r,e[0])]),i=it(n,[G(r,e[0]),G(0,r)]),u=it(n,[G(r,e[0]),G(r,e[0])]),l=Ht(s),c=Ht(mi(u,t(-1,t(t(i,l),o)))),g=mi(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),I=t(-1,t(t(c,i),l)),S=c;return Zt(Zt(g,q,1),Zt(I,S,1),0)}catch{}P(!1,"This matrix cannot be inverted!")}}di.exports=Ht});var yi=a((ld,qi)=>{var th=b(),Dt=f();function nh(n,e,t){try{return Dt(n)?Dt(e)?Dt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}qi.exports=th(nh)});var wi=a((fd,Ni)=>{var bi=f(),rh=m(),sh=b();function oh(n,e){try{return e=rh(e)?Math.E:e,bi(n)?bi(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}Ni.exports=sh(oh)});var vi=a((hd,xi)=>{var Ie=f(),ih=b();function uh(n,e,t,r,s){try{return Ie(n)?Ie(e)?Ie(t)?Ie(r)?Ie(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}xi.exports=ih(uh)});var Si=a((qd,Ti)=>{var md=h(),pd=m(),dd=p(),gd=f(),ah=w(),ch=te(),lh=Ne();function fh(n){try{let e=ah(n),t=lh(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=ch(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Ti.exports=fh});var Ei=a((yd,Ai)=>{var hh=w(),mh=Pe(),ph=H(),Oi=te();function dh(n){try{if(n.length===0)return NaN;let e=hh(n);if(e.length===0)return NaN;let t={},r=ph(e);r.forEach(u=>{t[u]=mh(e,u)});let s=Oi(r,(u,l)=>t[l]-t[u]),o=s[0],i=Oi(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Ai.exports=dh});var Ui=a((wd,Ii)=>{var gh=m(),bd=C(),Nd=_(),{random:Mi}=D(),qh=oe(),yh=f();function ji(){let n=Mi(),e=Mi();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function bh(n){if(gh(n))return ji();yh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(ji());return qh(e,n)}Ii.exports=bh});var Yi=a((Td,Vi)=>{var xd=C(),vd=_(),Nh=oe(),wh=f();function xh(n){wh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Nh(e,n)}Vi.exports=xh});var zi=a((Sd,_i)=>{var Ci=p(),vh=f(),ut=h(),Th=m();function en(n,e){if(ut(Ci(n),"The `permute` function only works on arrays!"),Th(e)&&(e=n.length),ut(vh(e),"`r` must be a whole number!"),e>n.length)return en(n);if(e<=0)return[[]];if(ut(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{ut(!Ci(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);en(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}_i.exports=en});var Bi=a((Od,$i)=>{var Sh=p(),Oh=x(),ki=Je(),Pi=F();function Ah(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(Sh(e)){let t=Oh(e);t.length===1?new Pi(e).print():t.length==2?new ki(e).print():console.log(e)}else e instanceof ki||e instanceof Pi?e.print():console.log(e)})}$i.exports=Ah});var Fi=a((Ad,Ji)=>{var Eh=f(),Mh=b();function jh(n){try{return Eh(n)?Math.round(n):NaN}catch{return NaN}}Ji.exports=Mh(jh)});var tn=a((Ed,Ri)=>{var Wi=h(),Ih=f(),Li=p(),Uh=Z();function Vh(n,e,t){Wi(Li(n),"The first argument passed into the `setValueAt` function must be an array!"),Ih(e)&&(e=[e]),Wi(Li(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Uh(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}Ri.exports=Vh});var Qi=a((Md,Ki)=>{var Yh=f(),Ch=b();function _h(n){try{return Yh(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Ki.exports=Ch(_h)});var Gi=a((jd,Xi)=>{var zh=f(),kh=b();function Ph(n){try{return zh(n)?Math.sin(n):NaN}catch{return NaN}}Xi.exports=kh(Ph)});var Hi=a((Id,Zi)=>{var $h=ke();function Bh(n){return $h(n)}Zi.exports=Bh});var eu=a((Ud,Di)=>{var Jh=f(),Fh=b();function Wh(n){try{return Jh(n)?Math.tan(n):NaN}catch{return NaN}}Di.exports=Fh(Wh)});var at=a((Vd,nu)=>{var tu=U();function Lh(n,e){assert(tu(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function Rh(n,e){assert(tu(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}nu.exports={timeSync:Lh,timeAsync:Rh}});var ou=a((Yd,su)=>{var ru=h(),Kh=p(),Qh=U(),Xh=_(),Gh=qe(),Zh=tn(),Hh=w();function Dh(n,e){ru(Kh(n),"The first argument passed into the `where` function must be an array!"),ru(Qh(e),"The second argument passed into the `where` function must be a function!");let t=Hh(n).length,r=Xh(n,e),s=[],o=0,i=!1;for(;!i;){let u=Gh(r,!0);u?(s[o]=u,r=Zh(r,u,null),o++):i=!0}return o===0?null:s}su.exports=Dh});var em=a((Cd,nn)=>{var Ue={abs:pt(),add:me(),append:qt(),apply:_(),arccos:Cn(),arcsin:zn(),arctan:Pn(),argmax:Qn(),argmin:Zn(),assert:h(),ceil:Dn(),chop:nr(),clamp:sr(),cohensd:lr(),combine:pr(),copy:Z(),correl:vr(),cos:Sr(),count:Pe(),covariance:wt(),DataFrame:Je(),diff:mo(),distance:xo(),divide:To(),dot:Bt(),dropMissing:Vo(),dropMissingPairwise:Po(),dropNaN:Ne(),dropNaNPairwise:Ro(),exp:Qo(),factorial:Zo(),flatten:w(),float:Do(),floor:Re(),getValueAt:ri(),identity:ii(),indexOf:qe(),int:Jt(),intersect:ci(),inverse:gi(),isArray:p(),isBoolean:ee(),isEqual:J(),isFunction:U(),isNumber:f(),isObject:ve(),isString:E(),isUndefined:m(),lerp:yi(),log:wi(),map:vi(),MathError:se(),max:Y(),mean:ye(),median:Si(),min:Ye(),mode:Ei(),multiply:Pt(),ndarray:C(),normal:Ui(),ones:Yi(),permute:zi(),pow:tt(),print:Bi(),random:D().random,range:z(),reshape:oe(),reverse:pe(),round:Fi(),scale:fe(),seed:D().seed,Series:F(),set:H(),setValueAt:tn(),shape:x(),shuffle:It(),sign:Qi(),sin:Gi(),slice:Xt(),sort:te(),sqrt:ze(),std:ke(),stdev:Hi(),subtract:$t(),sum:nt(),tan:eu(),time:at().timeSync,timeSync:at().timeSync,timeAsync:at().timeAsync,transpose:B(),union:Kt(),variance:Ce(),vectorize:b(),where:ou(),zeros:Rt(),dump:function(){Object.keys(Ue).forEach(n=>{typeof global<"u"&&(global[n]=Ue[n]),typeof window<"u"&&(window[n]=Ue[n])})}};typeof nn<"u"&&(nn.exports=Ue);typeof window<"u"&&(window.JSMathTools=Ue)});em();})();
