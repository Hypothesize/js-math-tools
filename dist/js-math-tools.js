(()=>{var Le=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var c=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=c((bl,It)=>{function ko(n){return typeof n=="number"&&!isNaN(n)}It.exports=ko});var m=c((Nl,St)=>{St.exports=function(n,e){if(!n)throw new Error(e)}});var p=c((xl,Mt)=>{function zo(n){return n===null||typeof n=="undefined"}Mt.exports=zo});var d=c((wl,jt)=>{function Co(n){return n instanceof Array}jt.exports=Co});var T=c((vl,zt)=>{var Yt=m(),$o=p(),Ut=d();function kt(n){Yt(!$o(n),"You must pass one array into the `flatten` function!"),Yt(Ut(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){Ut(t)?e=e.concat(kt(t)):e.push(t)}),e}zt.exports=kt});var _=c((Tl,Ct)=>{var Po=T(),Vo=h();function Bo(n){try{let e=Po(n),t=-1/0;for(let r=0;r<e.length;r++){if(!Vo(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}Ct.exports=Bo});var R=c((Ol,$t)=>{function _o(n){return typeof n=="function"}$t.exports=_o});var q=c((Al,Pt)=>{var We=m(),Ro=p(),He=d(),Jo=_(),Ko=R();function Lo(n){return We(!Ro(n),"You must pass a function into the `vectorize` function!"),We(Ko(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>He(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>He(arguments[i])).map(i=>arguments[i].length),o=Jo(s);s.forEach(i=>{We(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(a=>He(arguments[a])?arguments[a][i]:arguments[a]);r.push(e(...u))}return r}else return n(...arguments)}}Pt.exports=Lo});var De=c((El,Vt)=>{var Wo=h(),Ho=q();function Do(n){try{return Wo(n)?Math.abs(n):NaN}catch{return NaN}}Vt.exports=Ho(Do)});var oe=c((Il,Bt)=>{var Fo=h(),Xo=q();function Go(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Fo(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}Bt.exports=Xo(Go)});var A=c((Sl,Jt)=>{var be=m(),Qo=p(),_t=d(),Zo=_();function Rt(n){be(!Qo(n),"You must pass an array into the `shape` function!"),be(_t(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>_t(r));if(t.indexOf(!0)>-1){be(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Zo(r);r.forEach(function(o){be(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(Rt(n[0]))}return e}Jt.exports=Rt});var ie=c((Ml,Lt)=>{var Kt=m(),ei=p(),ti=d();function ni(n){Kt(!ei(n),"You must pass an array into the `reverse` function!"),Kt(ti(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}Lt.exports=ni});var k=c((jl,Ht)=>{var ue=m(),ri=p(),si=d(),oi=h(),ii=T(),ae="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function Wt(n,e){if(e||(ue(!ri(n),ae),si(n)||(n=[n]),n=ii(n),ue(n.length>0,ae),n.forEach(t=>{ue(oi(t),ae),ue(parseInt(t)===t,ae),ue(t>=0,ae)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(Wt(n.slice(1),!0));return t}}Ht.exports=Wt});var D=c((Yl,Ft)=>{var Fe=m(),ui=p(),ai=d(),ci=A(),Dt=ie(),li=k();function fi(n){Fe(!ui(n),"You must pass an array into the `transpose` function!"),Fe(ai(n),"You must pass an array into the `transpose` function!");let e=ci(n);if(Fe(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return Dt(n);if(e.length===2){let t=li(Dt(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}Ft.exports=fi});var Ge=c((Ul,en)=>{var M=m(),Xt=p(),Gt=d(),hi=h(),Qt=A(),Xe=D();function Zt(n,e,t=0){M(!Xt(n),"You must pass two arrays into the `append` function!"),M(!Xt(e),"You must pass two arrays into the `append` function!"),M(Gt(n),"You must pass two arrays into the `append` function!"),M(Gt(e),"You must pass two arrays into the `append` function!"),M(hi(t),"The `axis` argument to the `append` function must be 0 or 1!"),M(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),M(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=Qt(n),s=Qt(e);M(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),M(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&M(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(M(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return Xe(Zt(Xe(n),Xe(e),0))}}en.exports=Zt});var z=c((kl,tn)=>{var mi=q();function di(n,e){try{return e(n)}catch{return NaN}}tn.exports=mi(di)});var rn=c((zl,nn)=>{var pi=h(),gi=q();function yi(n){try{return pi(n)?Math.acos(n):NaN}catch{return NaN}}nn.exports=gi(yi)});var on=c((Cl,sn)=>{var qi=h(),bi=q();function Ni(n){try{return qi(n)?Math.asin(n):NaN}catch{return NaN}}sn.exports=bi(Ni)});var an=c(($l,un)=>{var xi=h(),wi=q();function vi(n){try{return xi(n)?Math.atan(n):NaN}catch{return NaN}}un.exports=wi(vi)});var F=c((Vl,ln)=>{var Pl=d();function cn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!cn(n[u],e[u]))return!1}return!0}}}ln.exports=cn});var ce=c((Bl,pn)=>{var fn=m(),Ti=p(),hn=d(),Qe=A(),mn=F();function dn(n,e,t){if(fn(!Ti(n),"You must pass an array and a value into the `indexOf` function!"),fn(hn(n),"You must pass an array and a value into the `indexOf` function!"),Qe(n).length===1||hn(e)&&mn(Qe(n[0]),Qe(e))){for(let r=0;r<n.length;r++){let s=n[r];if(mn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=dn(s,e);if(o)return[r].concat(o)}return null}pn.exports=dn});var yn=c((_l,gn)=>{var Oi=ce(),Ai=_();function Ei(n){try{return Oi(n,Ai(n))}catch{return NaN}}gn.exports=Ei});var Ne=c((Rl,qn)=>{var Ii=T(),Si=h();function Mi(n){try{let e=Ii(n),t=1/0;for(let r=0;r<e.length;r++){if(!Si(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}qn.exports=Mi});var Nn=c((Jl,bn)=>{var ji=ce(),Yi=Ne();function Ui(n){try{return ji(n,Yi(n))}catch{return NaN}}bn.exports=Ui});var wn=c((Kl,xn)=>{var ki=h(),zi=q();function Ci(n){try{return ki(n)?Math.ceil(n):NaN}catch{return NaN}}xn.exports=zi(Ci)});var On=c((Ll,Tn)=>{var $i=p(),Pi=De(),Vi=q(),vn=h();function Bi(n,e){try{if(!vn(n))return NaN;if($i(e))e=1e-10;else if(!vn(e))return NaN;return Pi(n)<e?0:n}catch{return NaN}}Tn.exports=Vi(Bi)});var En=c((Wl,An)=>{var Ze=h(),_i=q();function Ri(n,e,t){try{return Ze(n)?Ze(e)?Ze(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}An.exports=_i(Ri)});var le=c((Hl,In)=>{var Ji=h(),Ki=T();function Li(n){try{let e=Ki(n),t=0;for(let r=0;r<e.length;r++){if(!Ji(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}In.exports=Li});var xe=c((Dl,Sn)=>{var Wi=le(),Hi=T(),Di=h();function Fi(n){try{let e=Hi(n),t=Wi(e),r=0;for(let s=0;s<e.length;s++){if(!Di(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}Sn.exports=Fi});var Un=c((Fl,Yn)=>{var Mn=le(),jn=xe();function Xi(n,e){try{let t=Mn(n),r=Mn(e),s=Math.sqrt((jn(n)+jn(e))/2);return(t-r)/s}catch{return NaN}}Yn.exports=Xi});var $n=c((Xl,Cn)=>{var kn=d(),Gi=h(),we=m();function zn(n,e){if(we(kn(n),"The `combine` function only works on arrays!"),we(Gi(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(we(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{we(!kn(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;zn(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}Cn.exports=zn});var X=c((Ql,Pn)=>{var Gl=m(),Qi=p(),Zi=d();function et(n){if(typeof n=="object"){if(Qi(n))return n;if(Zi(n))return n.map(et);{let e={};return Object.keys(n).forEach(function(t){e[t]=et(n[t])}),e}}else return n}Pn.exports=et});var tt=c((Zl,_n)=>{var Vn=le(),Bn=p();function eu(n,e){try{let t=Vn(n),r=Vn(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(Bn(n[i]))return NaN;if(Bn(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}_n.exports=eu});var ve=c((ef,Rn)=>{var tu=h(),nu=q();function ru(n){try{return tu(n)?Math.sqrt(n):NaN}catch{return NaN}}Rn.exports=nu(ru)});var Te=c((tf,Jn)=>{var su=ve(),ou=xe();function iu(n){try{return su(ou(n))}catch{return NaN}}Jn.exports=iu});var Wn=c((nf,Ln)=>{var uu=tt(),Kn=Te();function au(n,e){try{return uu(n,e)/(Kn(n)*Kn(e))}catch{return NaN}}Ln.exports=au});var Dn=c((rf,Hn)=>{var cu=h(),lu=q();function fu(n){try{return cu(n)?Math.cos(n):NaN}catch{return NaN}}Hn.exports=lu(fu)});var L=c((sf,Xn)=>{var Fn=m(),hu=p(),mu=d(),du=T();function pu(n){Fn(!hu(n),"You must pass an array into the `set` function!"),Fn(mu(n),"You must pass an array into the `set` function!");let e=[],t={};return du(n).forEach(r=>{let s=typeof r=="undefined"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Xn.exports=pu});var nt=c((of,tr)=>{var Gn=m(),Qn=p(),Zn=d(),er=T(),gu=F(),yu=L();function qu(n,e){Gn(!Qn(n),"You must pass an array and some items to count into the `count` function!"),Gn(Zn(n),"You must pass an array and some items to count into the `count` function!");let t=er(n);return e=Qn(e)?yu(n):e,Zn(e)?er(e).map(function(r){let s=t.filter(o=>gu(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}tr.exports=qu});var G=c((uf,nr)=>{var rt=m(),st=p(),ot=h(),bu=ie();function Nu(n,e,t=1){rt(!st(n)&&!st(e)&&!st(t),"You must pass two numbers and optionally a step value to the `range` function!"),rt(ot(n)&&ot(e)&&ot(t),"You must pass two numbers and optionally a step value to the `range` function!"),rt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=bu(s)),s}nr.exports=Nu});var Oe=c((af,rr)=>{function xu(n){return typeof n=="string"}rr.exports=xu});var Q=c((cf,or)=>{var it=m(),sr=p(),wu=d(),vu=R();function Tu(n,e){return n<e?-1:n>e?1:0}function Ou(n,e){sr(e)&&(e=Tu),it(!sr(n),"You must pass an array into the `sort` function!"),it(wu(n),"You must pass an array into the `sort` function!"),it(vu(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}or.exports=Ou});var Ae=c((lf,ir)=>{function Au(n){return typeof n=="boolean"}ir.exports=Au});var Se=c((hf,fr)=>{var y=m(),Ee=d(),W=p(),Z=A(),Ie=D(),fe=G(),ut=h(),he=Oe(),ff=z(),Eu=R(),Iu=k(),at=X(),Su=L(),ur=ie(),ar=Q(),cr=Ae();function Mu(n){return ut(n)&&parseInt(n)===n}function ju(n){return Mu(n)&&n>=0}function lr(n,e){y(ut(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var C=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(Ee(r),"The new values must be a 1-dimensional array!");let s=Z(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(fe(t._index.length,s[0]).map(o=>"row"+lr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(Ee(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(Z(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(he(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=Z(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return Z(this.values)}isEmpty(){return this.values.filter(t=>!W(t)).length===0}clear(){let e=this,t=e.copy();return t.values=Iu(t.shape),t.index=e.index,t}get(e){let t=this;(he(e)||ut(e))&&(e=[e]);let r=Su((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),W(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;W(e)&&(e=t.index),y(Ee(e),"The `indices` array must be a 1-dimensional array of strings."),y(Z(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(he(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new C(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;W(e)&&(e=fe(0,r[0])),y(Ee(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(Z(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(ju(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new C(ur(e.values));return t.index=ur(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=fe(0,e.shape[0]).map(r=>"row"+lr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new C(at(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(Eu(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>W(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window=="undefined"?20:10;if(t.index.length>r){t=t.get(fe(0,r/2).concat(fe(t.index.length-r/2,t.index.length)));let o=at(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(cr(e)||he(e)||W(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;W(e)&&(t=!0),he(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),cr(e)&&(t=e);let r=this,s=Ie([r.values,r.index]);s=Ie(ar(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new C(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=Ie([e.values,e.index]);t=Ie(ar(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new C(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=at(r.index),o=[],i=r.values.filter((u,a)=>{let f=e(u,a,r.values);return f||o.push(r.index[a]),f});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new C,r.name=t.name,r):(r.values=i,r.index=s,r)}};fr.exports=C});var ee=c((mf,gr)=>{var me=m(),hr=d(),mr=h(),Yu=A(),dr=T(),Uu=n=>n.reduce((e,t)=>e*t);function pr(n,e){if(me(hr(n),"The first argument passed into the `reshape` function must be an array!"),mr(e)&&(e=[e]),me(hr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),me(Yu(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{me(mr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return dr(n);let t=dr(n);me(Uu(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(pr(i,e.slice(1)))}return r}gr.exports=pr});var te=c((gf,Tr)=>{var df=k(),pf=z(),yr=p(),ku=m(),qr=h(),br=X(),zu=ee(),Nr=Math.pow(2,64),b=[];wr(parseInt(Math.random()*Nr));function Cu(n,e){n=E(n);function t(){n+=E("0x9e3779b97f4a7c15");let s=br(n);return s=(s^s>>30n)*E("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*E("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function E(n){return BigInt.asUintN(64,BigInt(n))}function xr(n,e){return n=E(n),e=BigInt(e),E(E(n<<e)|E(n>>E(64n-e)))}function wr(n){if(yr(n))return br(b);{ku(qr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Cu(parseInt(n),4);b[0]=e[0],b[1]=e[1],b[2]=e[2],b[3]=e[3]}}function vr(){let n=E(xr(b[0]+b[3],23)+b[0]),e=E(b[1]<<17n);return b[2]=E(b[2]^b[0]),b[3]=E(b[3]^b[1]),b[1]=E(b[1]^b[2]),b[0]=E(b[0]^b[3]),b[2]=E(b[2]^e),b[3]=xr(b[3],45),parseInt(n)/Nr}function $u(n){if(yr(n))return vr();qr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(vr());return zu(e,n)}Tr.exports={random:$u,seed:wr}});var Me=c((yf,Ar)=>{var Or=m(),Pu=d(),Vu=p(),Bu=h(),_u=A();function Ru(n){return Or(Pu(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Or(_u(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Vu(e)&&Bu(e))}Ar.exports=Ru});var ct=c((Nf,jr)=>{var l=m(),O=d(),w=p(),v=A(),de=D(),S=G(),$=h(),I=Oe(),qf=z(),Er=R(),Ju=k(),j=X(),Y=Se(),P=T(),Ir=F(),Ku=_(),bf=Ne(),Sr=L(),H=Ae(),{random:Lu}=te(),Wu=Q(),Hu=Me();function Du(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function Fu(n){return $(n)&&parseInt(n)===n}function je(n){return Fu(n)&&n>=0}function Xu(n){return n instanceof Object&&!O(n)}function ne(n){return n instanceof Y}function Gu(n){let e=/"(.*?)"/g,t=n.match(e),r=n.slice();return t&&t.forEach(s=>{r=r.replace(s,`\u201C${s.substring(1,s.length-1)}\u201D`)}),e=/'(.*?)'/g,t=n.match(e),t&&t.forEach(s=>{r=r.replace(s,`\u2018${s.substring(1,s.length-1)}\u2019`)}),`"${r}"`}function Ye(n,e){l($(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}function Mr(n){let e={};return P(n).forEach((t,r)=>{e[t]=r}),e}function re(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}var x=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){l(O(r),"The new values must be a 2-dimensional array!");let s=v(r);l(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(S(t._index.length,s[0]).map(o=>"row"+Ye(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(S(t._columns.length,s[1]).map(o=>"col"+Ye(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){l(O(r),"The new columns list must be a 1-dimensional array of strings!"),l(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),l(v(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(s=>typeof s=="string"?s:JSON.stringify(s)||s.toString()),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){l(O(r),"The new index must be a 1-dimensional array of strings!"),l(r.length===t.shape[0],"The new index must be the same length as the old index!"),l(v(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(s=>typeof s=="string"?s:JSON.stringify(s)||s.toString()),t._index=r}}),l(w(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(O(e)){let r=v(e);l(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=de(r);let s=v(t.values);t._index=S(0,s[0]).map(o=>"row"+Ye(o,(s[0]-1).toString().length))}}static async fromCSV(e,t){t=t||{};let r;try{r=await(await fetch(e)).text()}catch{}try{let N=Le("fs"),B=t.encoding||"utf8";r=N.readFileSync(e,B)}catch{}let o=r.split(`
`).filter(N=>N.length>0).map(N=>{let B={},Re=/"(.*?)"/g;return(N.match(Re)||[]).forEach(U=>{let Je=Du(32);N=N.replaceAll(U,Je),B[Je]=U}),N.split(",").map((U,Je)=>{U=B[U]||U;try{let Ke=JSON.parse(U);return O(Ke)?U:Ke}catch{return U}})}),i=Ku(o.map(N=>N.length));o=o.map(N=>(N.length=i,N));let u,a,f=H(t.hasHeaderRow)?t.hasHeaderRow:!0,g=H(t.hasIndexColumn)?t.hasIndexColumn:!1;return f&&(u=o.shift()),g&&(a=o.map(N=>N.shift()),u&&u.shift()),o=new x(o),u&&(o.columns=u),a&&(o.index=a),o}get shape(){return v(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Sr(this.values).filter(t=>!w(t)).length===0}clear(){let e=this,t=new x(Ju(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(I(e)||$(e))&&(e=[e]),(I(t)||$(t))&&(t=[t]);let s=Sr((e||[]).concat(t||[]).map(o=>typeof o));return l(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&l(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(l(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),l(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),w(e)||(e=e.map(o=>{if(typeof o=="string")return l(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return l(o>=0,`Index ${o} is out of bounds!`),l(parseInt(o)===o,"Row numbers must be integers!"),l(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),w(t)||(t=t.map(o=>{if(typeof o=="string")return l(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return l(o>=0,`Column ${o} is out of bounds!`),l(parseInt(o)===o,"Column numbers must be integers!"),l(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;w(e)&&(e=r.index),w(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),l(O(e)&&O(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(v(e).length===1&&v(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(e.length>0,"The `rows` array must contain at least one row name."),l(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{l(I(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{l(I(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),l(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return P(s)[0];if(e.length===1){let i=new Y(P(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new Y(P(s));return i.name=t[0],i.index=e,i}let o=new x(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;w(e)&&(e=S(0,s[0])),w(t)&&(t=S(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),l(O(e)&&O(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(v(e).length===1&&v(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(e.length>0,"The `rowIndices` array must contain at least one index."),l(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{l(je(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{l(je(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),l(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new x(de(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=S(0,e.shape[0]).map(r=>"row"+Ye(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new x;let t=new x(j(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;w(t)?(s=e,l(!O(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,l(I(r),"When using two parameters for the `assign` method, the first parameter must be a string."),l(ne(s)||O(s)&&v(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),l(Xu(s)||ne(s)||O(s)&&v(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(ne(s)){let i={};return l(o.isEmpty()||Ir(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(O(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(a=>{let f=s[a];if(l(O(f),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),l(v(f).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=de([f]),i.columns=[a],u=i.shape;else{l(f.length===u[0],`Column "${a}" in the new data is not the same length as the other columns in the original DataFrame.`);let g=i.columns.indexOf(a);g<0&&(i.columns.push(a),g=i.columns.indexOf(a)),i.values.forEach((N,B)=>{N[g]=f[B]})}}),i}}apply(e,t){t=t||0,l(Er(e),"The first parameter to the `apply` method must be a function."),l(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=de(r.values).map((i,u)=>e(i,r.columns[u]));if(v(o).length===1){let i=new Y(o);return i.index=j(r.columns),i}else{let i=new x(de(o));return i.index=j(r.index),i.columns=j(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>e(o,r.index[i]));if(v(s).length===1){let o=new Y(s);return o.index=j(r.index),o}else{let o=new x(s);return o.index=j(r.index),o.columns=j(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,l(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,l(je(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",l(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(a){if(r>0){let f=0;for(let g=0;g<a.length;g++){let N=a[g];if(w(N)&&f++,f>=r)return[]}}else if(t==="any")for(let f=0;f<a.length;f++){let g=a[f];if(w(g))return[]}else if(t==="all"){for(let f=0;f<a.length;f++){let g=a[f];if(!w(g))return a}return[]}return a}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let a=i.values.map(s).filter(g=>g.length>0);if(v(a).length<2)return new x;i.values=a;let f=i.get(null,u);if(w(f))return new x;I(f)&&(f=[f]),ne(f)&&(f=f.values),i.index=f,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let a=i.values.map(s).filter(g=>g.length>0);if(v(a).length<2)return new x;i.values=a;let f=i.get(null,u);if(w(f))return new x;I(f)&&(f=[f]),ne(f)&&(f=f.values),i.index=f,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,l(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,l(je(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",l(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(a){let f=Hu(a);return r>0?a.length-f.length<r:t==="any"?f.length===a.length:t==="all"?f.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let a=i.index.filter(f=>{let g=i.get(f,null).values;return s(g)});return a.length>0?i.get(a,null):new x}else if(e===1){let a=i.columns.filter(f=>{let g=i.get(null,f).values;return s(g)});return a.length>0?i.get(null,a):new x}return i}drop(e,t){let r=this;w(e)&&(e=[]),w(t)&&(t=[]),(I(e)||$(e))&&(e=[e]),(I(t)||$(t))&&(t=[t]),l(O(e),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),l(O(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),l(v(e).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),l(v(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;r.index.forEach((u,a)=>{e.indexOf(u)<0&&e.indexOf(a)<0&&(s||(s=[]),s.push(u))}),r.columns.forEach((u,a)=>{t.indexOf(u)<0&&t.indexOf(a)<0&&(o||(o=[]),o.push(u))});let i=r.get(s,o);if(ne(i)){let u=new x;u=u.assign(i),r.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){let e=this,t={};return e.values.forEach((r,s)=>{let o={};r.forEach((i,u)=>{o[e.columns[u]]=i}),t[e.index[s]]=o}),t}toCSVString(e){let t=this;e=w(e)?{}:e;let r=H(e.hasHeaderRow)?e.hasHeaderRow:!0,s=H(e.hasIndexColumn)?e.hasIndexColumn:!1,o,i,u;return r&&s?(o=["(index)"].concat(j(t.index)),i=j(t.columns),u=[i].concat(t.values).map((a,f)=>[o[f]].concat(a))):!r&&s?(o=j(t.index),u=t.values.map((a,f)=>[o[f]].concat(a))):r&&!s?(i=j(t.columns),u=[i].concat(t.values)):!r&&!s&&(u=t.values),u=u.map((a,f)=>a.map(g=>I(g)?Gu(g):g).join(",")).join(`
`),u}toCSV(e,t){let r=this,s=r.toCSVString(t);try{let o=e;if(e.includes("/")){let u=e.split("/");o=u[u.length-1]}let i=document.createElement("a");i.href=`data:text/csv;charset=utf-8,${encodeURIComponent(s)}`,i.download=o,i.dispatchEvent(new MouseEvent("click"))}catch{}try{let o=Le("fs"),i=Le("path");o.writeFileSync(i.resolve(e),s,"utf8")}catch{}return r}print(){let e=this;if(Ir(e.shape,[0]))return console.table({}),e;let t=typeof window=="undefined"?20:10,r=parseInt(t/2),s=typeof window=="undefined"?Math.floor(process.stdout.columns/24)-1:10,o=parseInt(s/2),i=t>e.index.length?null:S(0,r).concat(S(e.index.length-r,e.index.length)),u=s>e.columns.length?null:S(0,o).concat(S(e.columns.length-o,e.columns.length)),a=e.get(i,u);return a instanceof Y&&(e.shape[0]===1?(a=new x([a.values]),a.index=e.index,a.columns=new Y(e.columns).get(u).values):e.shape[1]===1&&(a=new x([a.values]).transpose(),a.index=new Y(e.index).get(i).values,a.columns=e.columns)),t<=e.index.length&&(a._index.splice(r,0,"..."),a._values.splice(r,0,S(0,a.columns.length).map(f=>"..."))),s<=e.columns.length&&(a._columns.splice(o,0,"..."),a._values=a._values.map(f=>(f.splice(o,0,"..."),f))),console.table(a.toObject()),e}sort(e,t){let s=this.copy(),o=Lu().toString();return s=s.assign(o,s.index),w(e)&&(e=[o],t=[!0]),($(e)||I(e))&&(e=[e],(H(t)||I(t))&&(t=[t])),l(O(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),l(v(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),w(t)&&(t=S(0,e.length).map(i=>!0)),l(O(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),l(v(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),l(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(i=>{if(l(I(i)||$(i),"Column references can either be column names (as strings) or column indices (as whole numbers)."),I(i)){let u=s.columns.indexOf(i);return l(u>-1,`The column "${i}" does not exist!`),u}if($(i))return l(parseInt(i)===i,"Column indices must be whole numbers!"),l(i>=0,`The column index ${i} is out of bounds!`),l(i<s.columns.length,`The index ${i} is out of bounds!`),i}),t=t.map(i=>{if(l(I(i)||H(i),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),I(i)){let u=i.trim().toLowerCase();return l(u==="ascending"||u==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),u==="ascending"}if(H(i))return i}),s.values=Wu(s.values,(i,u)=>{let a=0;for(;i[e[a]]===u[e[a]]&&a<e.length;)a++;let f=t[a];if(i[e[a]]===u[e[a]])return 0;if(i[e[a]]<u[e[a]])return f?-1:1;if(i[e[a]]>u[e[a]])return f?1:-1}),s.index=P(s.get(null,o).values),s=s.dropColumns(o),s}sortByIndex(){return this.sort()}filter(e,t){l(Er(e),"The `filter` method takes a single parameter: a function that is used to filter the values."),w(t)&&(t=0),l(t===0||t===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let r=this,s=r.copy();if(s.isEmpty())return s;let o=Mr(s.index),i=Mr(s.columns);if(t===0){let u=s.values.filter((a,f)=>{let g=e(a,f,r);return g||delete o[s.index[f]],g});if(P(u).length===0)return new x;if(u.length===1){let a=new Y(P(u));return a.name=re(o)[0],a.index=re(i),a}s.values=u,s.index=re(o)}else if(t===1){s=s.transpose();let u=s.values.filter((a,f)=>{let g=e(a,f,r);return g||delete i[s.index[f]],g});if(P(u).length===0)return new x;if(u.length===1){let a=new Y(P(u));return a.name=re(i)[0],a.index=re(o),a}s.values=u,s.index=re(i),s=s.transpose()}return s}shuffle(e){w(e)&&(e=0),l(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined.");let t=this;return t.get(e===0?shuffle(t.index):null,e===1?shuffle(t.columns):null)}};jr.exports=x});var Cr=c((xf,zr)=>{var Yr=m(),Ur=d(),kr=T();function Qu(n,e){Yr(Ur(n),"You must pass two arrays into the `diff` function!"),Yr(Ur(e),"You must pass two arrays into the `diff` function!");let t=kr(n),r=kr(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}zr.exports=Qu});var Ue=c((wf,Pr)=>{var $r=h(),Zu=q();function ea(n,e){try{return $r(n)?$r(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}Pr.exports=Zu(ea)});var ke=c((vf,Vr)=>{var ta=oe(),na=T();function ra(n){try{return ta(...na(n))}catch{return NaN}}Vr.exports=ra});var lt=c((Tf,Br)=>{var sa=h(),oa=q();function ia(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!sa(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}Br.exports=oa(ia)});var se=c((Of,_r)=>{var ua=lt();function aa(n,e){return ua(n,e)}_r.exports=aa});var ft=c((Af,Rr)=>{var ca=oe(),la=se();function fa(n,e){return ca(n,la(e,-1))}Rr.exports=fa});var Kr=c((Ef,Jr)=>{var ha=Ue(),ma=ke(),da=ve(),pa=ft();function ga(n,e){try{return da(ma(ha(pa(n,e),2)))}catch{return NaN}}Jr.exports=ga});var Wr=c((If,Lr)=>{var ya=se(),qa=Ue();function ba(n,e){return ya(n,qa(e,-1))}Lr.exports=ba});var ht=c((Mf,Qr)=>{var pe=m(),Hr=p(),Dr=d(),Na=h(),Sf=F(),Fr=T(),Xr=A(),xa=ke(),wa=se(),Gr=D();function ze(n,e){pe(!Hr(n)&&!Hr(e),"You must pass two arrays of numbers into the `dot` function!"),pe(Dr(n)&&Dr(e),"You must pass two arrays of numbers into the `dot` function!"),Fr(n).concat(Fr(e)).forEach(s=>{pe(Na(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Xr(n),r=Xr(e);if(pe(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),pe(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return xa(wa(n,e));if(t.length===1&&r.length===2)return Gr(e).map(s=>ze(n,s));if(t.length===2&&r.length===1)return n.map(s=>ze(s,e));if(t.length===2&&r.length===2){let s=Gr(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let a=0;a<s.length;a++)u.push(ze(n[i],s[a]));o.push(u)}return o}}Qr.exports=ze});var ts=c((jf,es)=>{var Zr=m(),va=d(),Ta=p(),Oa=A();function Aa(n){return Zr(va(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Zr(Oa(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!Ta(e))}es.exports=Aa});var us=c((Yf,is)=>{var ns=m(),rs=p(),ss=d(),Ea=_(),os=A();function Ia(n,e){ns(ss(n)&&ss(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),ns(os(n).length===1&&os(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Ea([n.length,e.length]);s++)!rs(n[s])&&!rs(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}is.exports=Ia});var ds=c((Uf,ms)=>{var as=m(),cs=p(),ls=d(),fs=h(),Sa=_(),hs=A();function Ma(n,e){as(ls(n)&&ls(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),as(hs(n).length===1&&hs(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Sa([n.length,e.length]);s++)!cs(n[s])&&fs(n[s])&&!cs(e[s])&&fs(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}ms.exports=Ma});var gs=c((kf,ps)=>{var ja=q(),Ya=h();function Ua(n){try{return Ya(n)?Math.exp(n):NaN}catch{return NaN}}ps.exports=ja(Ua)});var bs=c((zf,qs)=>{var ka=q();function ys(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*ys(n-1)}catch{return NaN}}qs.exports=ka(ys)});var xs=c((Cf,Ns)=>{var za=h(),Ca=q();function $a(n){try{let e=JSON.parse(n);return za(e)?e:NaN}catch{return NaN}}Ns.exports=Ca($a)});var Ce=c(($f,ws)=>{var Pa=h(),Va=q();function Ba(n){try{return Pa(n)?Math.floor(n):NaN}catch{return NaN}}ws.exports=Va(Ba)});var mt=c((Pf,vs)=>{var _a=h(),Ra=q();function Ja(n){try{let e=JSON.parse(n);return _a(e)?parseInt(e):NaN}catch{return NaN}}vs.exports=Ra(Ja)});var As=c((Vf,Os)=>{var J=m(),Ka=p(),dt=d(),pt=h(),Ts=A(),La=mt();function gt(n,e){return J(!Ka(n),"You must pass an array and an index into the `getValueAt` function!"),J(dt(n),"You must pass an array and an index into the `getValueAt` function!"),J(pt(e)||dt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),dt(e)&&(J(Ts(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{J(pt(t)&&La(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),J(e.length<=Ts(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),pt(e)?(J(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(J(e[0]<n.length,`The index ${e[0]} is out of bounds!`),gt(n[e[0]],e.slice(1))):gt(n,e[0])}Os.exports=gt});var yt=c((Rf,Es)=>{var Bf=k(),_f=z(),Wa=h(),Ha=ee();function Da(n){Wa(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Ha(e,n)}Es.exports=Da});var Ss=c((Jf,Is)=>{var $e=m(),Fa=p(),Xa=h(),Ga=yt();function Qa(n){$e(!Fa(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),$e(Xa(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),$e(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),$e(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Ga([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}Is.exports=Qa});var qt=c((Lf,Ms)=>{var Kf=m(),Za=L();function ec(){return Za([...arguments])}Ms.exports=ec});var Ys=c((Wf,js)=>{var tc=d(),nc=T(),rc=qt();function sc(){let n=Object.values(arguments).map(r=>tc(r)?nc(r):[r]),e=[];return rc(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}js.exports=sc});var Nt=c((Df,zs)=>{var ge=m(),Pe=p(),Us=h(),bt=d(),oc=G(),ic=T(),Hf=A(),uc=Ce();function ks(n,e){if(ge(!Pe(n),"You must pass an array into the `slice` function!"),ge(bt(n),"You must pass an array into the `slice` function!"),Pe(e))return n.slice();ge(bt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),ic(e).forEach(s=>{ge(Pe(s)||Us(s)&&uc(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];Pe(t)&&(t=oc(0,n.length)),Us(t)&&(t=[t]);let r=[];return t.forEach(s=>{ge(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];bt(o)?r.push(ks(n[s],e.slice(1,e.length))):r.push(n[s])}),r}zs.exports=ks});var Vs=c((Ff,Ps)=>{var V=m(),ac=p(),cc=d(),xt=h(),lc=T(),fc=A(),Ve=Nt(),hc=ht(),Cs=oe(),$s=se(),wt=Ge(),K=G();function vt(n){V(!ac(n),"You must pass a square 2D array into the `inverse` function!"),V(cc(n),"You must pass a square 2D array into the `inverse` function!"),lc(n).forEach(t=>V(xt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=fc(n);if(V(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),V(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),V(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return V(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;V(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return $s(u,1/i)}else if(e[0]>1){let t=(r,s)=>xt(r)||xt(s)?$s(r,s):hc(r,s);for(let r=1;r<e[0]-1;r++)try{let s=Ve(n,[K(0,r),K(0,r)]),o=Ve(n,[K(0,r),K(r,e[0])]),i=Ve(n,[K(r,e[0]),K(0,r)]),u=Ve(n,[K(r,e[0]),K(r,e[0])]),a=vt(s),f=vt(Cs(u,t(-1,t(t(i,a),o)))),g=Cs(a,t(t(t(t(a,o),f),i),a)),N=t(-1,t(t(a,o),f)),B=t(-1,t(t(f,i),a)),Re=f;return wt(wt(g,N,1),wt(B,Re,1),0)}catch{}V(!1,"This matrix cannot be inverted!")}}Ps.exports=vt});var _s=c((Xf,Bs)=>{var mc=q(),Tt=h();function dc(n,e,t){try{return Tt(n)?Tt(e)?Tt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}Bs.exports=mc(dc)});var Ks=c((Gf,Js)=>{var Rs=h(),pc=p(),gc=q();function yc(n,e){try{return e=pc(e)?Math.E:e,Rs(n)?Rs(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}Js.exports=gc(yc)});var Ws=c((Qf,Ls)=>{var ye=h(),qc=q();function bc(n,e,t,r,s){try{return ye(n)?ye(e)?ye(t)?ye(r)?ye(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Ls.exports=qc(bc)});var Ds=c((rh,Hs)=>{var Zf=m(),eh=p(),th=d(),nh=h(),Nc=T(),xc=Q(),wc=Me();function vc(n){try{let e=Nc(n),t=wc(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=xc(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Hs.exports=vc});var Gs=c((sh,Xs)=>{var Tc=T(),Oc=nt(),Ac=L(),Fs=Q();function Ec(n){try{if(n.length===0)return NaN;let e=Tc(n);if(e.length===0)return NaN;let t={},r=Ac(e);r.forEach(u=>{t[u]=Oc(e,u)});let s=Fs(r,(u,a)=>t[a]-t[u]),o=s[0],i=Fs(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Xs.exports=Ec});var to=c((uh,eo)=>{var Ic=p(),oh=k(),ih=z(),{random:Qs}=te(),Sc=ee(),Mc=h();function Zs(){let n=Qs(),e=Qs();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function jc(n){if(Ic(n))return Zs();Mc(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Zs());return Sc(e,n)}eo.exports=jc});var ro=c((lh,no)=>{var ah=k(),ch=z(),Yc=ee(),Uc=h();function kc(n){Uc(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Yc(e,n)}no.exports=kc});var io=c((fh,oo)=>{var so=d(),zc=h(),Be=m(),Cc=p();function Ot(n,e){if(Be(so(n),"The `permute` function only works on arrays!"),Cc(e)&&(e=n.length),Be(zc(e),"`r` must be a whole number!"),e>n.length)return Ot(n);if(e<=0)return[[]];if(Be(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Be(!so(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Ot(u,e-1).forEach(f=>{t.push([r].concat(f))})}),t}oo.exports=Ot});var lo=c((hh,co)=>{var $c=d(),Pc=A(),uo=ct(),ao=Se();function Vc(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if($c(e)){let t=Pc(e);t.length===1?new ao(e).print():t.length==2?new uo(e).print():console.log(e)}else e instanceof uo||e instanceof ao?e.print():console.log(e)})}co.exports=Vc});var ho=c((mh,fo)=>{var Bc=h(),_c=q();function Rc(n){try{return Bc(n)?Math.round(n):NaN}catch{return NaN}}fo.exports=_c(Rc)});var At=c((dh,go)=>{var mo=m(),Jc=h(),po=d(),Kc=X();function Lc(n,e,t){mo(po(n),"The first argument passed into the `setValueAt` function must be an array!"),Jc(e)&&(e=[e]),mo(po(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Kc(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}go.exports=Lc});var bo=c((gh,qo)=>{var yo=m(),Wc=p(),Hc=d(),ph=Ce(),{random:Dc}=te();function Fc(n){yo(!Wc(n),"You must pass an array into the `shuffle` function!"),yo(Hc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Dc()*t.length);e.push(t.splice(s,1)[0])}return e}qo.exports=Fc});var xo=c((yh,No)=>{var Xc=h(),Gc=q();function Qc(n){try{return Xc(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}No.exports=Gc(Qc)});var vo=c((qh,wo)=>{var Zc=h(),el=q();function tl(n){try{return Zc(n)?Math.sin(n):NaN}catch{return NaN}}wo.exports=el(tl)});var Oo=c((bh,To)=>{var nl=Te();function rl(n){return nl(n)}To.exports=rl});var Eo=c((Nh,Ao)=>{var sl=h(),ol=q();function il(n){try{return sl(n)?Math.tan(n):NaN}catch{return NaN}}Ao.exports=ol(il)});var _e=c((xh,So)=>{var Io=R();function ul(n,e){assert(Io(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function al(n,e){assert(Io(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}So.exports={timeSync:ul,timeAsync:al}});var Yo=c((wh,jo)=>{var Mo=m(),cl=d(),ll=R(),fl=z(),hl=ce(),ml=At(),dl=T();function pl(n,e){Mo(cl(n),"The first argument passed into the `where` function must be an array!"),Mo(ll(e),"The second argument passed into the `where` function must be a function!");let t=dl(n).length,r=fl(n,e),s=[],o=0,i=!1;for(;!i;){let u=hl(r,!0);u?(s[o]=u,r=ml(r,u,null),o++):i=!0}return o===0?null:s}jo.exports=pl});var gl=c((vh,Et)=>{var qe={abs:De(),add:oe(),append:Ge(),apply:z(),arccos:rn(),arcsin:on(),arctan:an(),argmax:yn(),argmin:Nn(),assert:m(),ceil:wn(),chop:On(),clamp:En(),cohensd:Un(),combine:$n(),copy:X(),correl:Wn(),cos:Dn(),count:nt(),covariance:tt(),DataFrame:ct(),diff:Cr(),distance:Kr(),divide:Wr(),dot:ht(),dropMissing:ts(),dropMissingPairwise:us(),dropNaN:Me(),dropNaNPairwise:ds(),exp:gs(),factorial:bs(),flatten:T(),float:xs(),floor:Ce(),getValueAt:As(),identity:Ss(),indexOf:ce(),int:mt(),intersect:Ys(),inverse:Vs(),isArray:d(),isBoolean:Ae(),isEqual:F(),isFunction:R(),isNumber:h(),isString:Oe(),isUndefined:p(),lerp:_s(),log:Ks(),map:Ws(),max:_(),mean:le(),median:Ds(),min:Ne(),mode:Gs(),multiply:lt(),ndarray:k(),normal:to(),ones:ro(),permute:io(),pow:Ue(),print:lo(),random:te().random,range:G(),reshape:ee(),reverse:ie(),round:ho(),scale:se(),seed:te().seed,Series:Se(),set:L(),setValueAt:At(),shape:A(),shuffle:bo(),sign:xo(),sin:vo(),slice:Nt(),sort:Q(),sqrt:ve(),std:Te(),stdev:Oo(),subtract:ft(),sum:ke(),tan:Eo(),time:_e().timeSync,timeSync:_e().timeSync,timeAsync:_e().timeAsync,transpose:D(),union:qt(),variance:xe(),vectorize:q(),where:Yo(),zeros:yt(),dump:function(){Object.keys(qe).forEach(n=>{typeof global!="undefined"&&(global[n]=qe[n]),typeof window!="undefined"&&(window[n]=qe[n])})}};typeof Et!="undefined"&&(Et.exports=qe);typeof window!="undefined"&&(window.JSMathTools=qe)});gl();})();
