(()=>{var lt=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var f=a((_h,tn)=>{function Xi(n){return typeof n=="number"&&!isNaN(n)}tn.exports=Xi});var ne=a((kh,rn)=>{var nn=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};rn.exports=nn});var m=a((Ph,sn)=>{var Gi=ne();sn.exports=function(n,e){if(!n)throw new Gi(e)}});var p=a(($h,on)=>{function Zi(n){return n===null||typeof n>"u"}on.exports=Zi});var d=a((Bh,un)=>{function Hi(n){return n instanceof Array}un.exports=Hi});var w=a((Jh,fn)=>{var an=m(),Di=p(),cn=d();function ln(n){an(!Di(n),"You must pass one array into the `flatten` function!"),an(cn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){cn(t)?e=e.concat(ln(t)):e.push(t)}),e}fn.exports=ln});var Y=a((Wh,hn)=>{var eu=w(),tu=f();function nu(n){try{let e=eu(n),t=-1/0;for(let r=0;r<e.length;r++){if(!tu(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}hn.exports=nu});var C=a((Fh,mn)=>{function ru(n){return typeof n=="function"}mn.exports=ru});var b=a((Lh,pn)=>{var ft=m(),su=p(),ht=d(),ou=Y(),iu=C();function uu(n){return ft(!su(n),"You must pass a function into the `vectorize` function!"),ft(iu(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>ht(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>ht(arguments[i])).map(i=>arguments[i].length),o=ou(s);s.forEach(i=>{ft(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>ht(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}pn.exports=uu});var mt=a((Rh,dn)=>{var au=f(),cu=b();function lu(n){try{return au(n)?Math.abs(n):NaN}catch{return NaN}}dn.exports=cu(lu)});var me=a((Kh,gn)=>{var fu=f(),hu=b();function mu(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!fu(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}gn.exports=hu(mu)});var x=a((Qh,bn)=>{var Ue=m(),pu=p(),qn=d(),du=Y();function yn(n){Ue(!pu(n),"You must pass an array into the `shape` function!"),Ue(qn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>qn(r));if(t.indexOf(!0)>-1){Ue(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=du(r);r.forEach(function(o){Ue(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(yn(n[0]))}return e}bn.exports=yn});var pe=a((Xh,wn)=>{var Nn=m(),gu=p(),qu=d();function yu(n){Nn(!gu(n),"You must pass an array into the `reverse` function!"),Nn(qu(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}wn.exports=yu});var z=a((Gh,vn)=>{var de=m(),bu=p(),Nu=d(),wu=f(),xu=w(),ge="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function xn(n,e){if(e||(de(!bu(n),ge),Nu(n)||(n=[n]),n=xu(n),de(n.length>0,ge),n.forEach(t=>{de(wu(t),ge),de(parseInt(t)===t,ge),de(t>=0,ge)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(xn(n.slice(1),!0));return t}}vn.exports=xn});var re=a((Zh,Sn)=>{var pt=m(),vu=p(),Tu=d(),Su=x(),Tn=pe(),Ou=z();function Au(n){pt(!vu(n),"You must pass an array into the `transpose` function!"),pt(Tu(n),"You must pass an array into the `transpose` function!");let e=Su(n);if(pt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return Tn(n);if(e.length===2){let t=Ou(Tn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}Sn.exports=Au});var gt=a((Hh,In)=>{var U=m(),On=p(),An=d(),Eu=f(),En=x(),dt=re();function Mn(n,e,t=0){U(!On(n),"You must pass two arrays into the `append` function!"),U(!On(e),"You must pass two arrays into the `append` function!"),U(An(n),"You must pass two arrays into the `append` function!"),U(An(e),"You must pass two arrays into the `append` function!"),U(Eu(t),"The `axis` argument to the `append` function must be 0 or 1!"),U(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),U(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=En(n),s=En(e);U(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),U(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&U(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(U(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return dt(Mn(dt(n),dt(e),0))}}In.exports=Mn});var _=a((Dh,jn)=>{var Mu=b();function Iu(n,e){try{return e(n)}catch{return NaN}}jn.exports=Mu(Iu)});var Vn=a((em,Un)=>{var ju=f(),Uu=b();function Vu(n){try{return ju(n)?Math.acos(n):NaN}catch{return NaN}}Un.exports=Uu(Vu)});var Cn=a((tm,Yn)=>{var Yu=f(),Cu=b();function zu(n){try{return Yu(n)?Math.asin(n):NaN}catch{return NaN}}Yn.exports=Cu(zu)});var _n=a((nm,zn)=>{var _u=f(),ku=b();function Pu(n){try{return _u(n)?Math.atan(n):NaN}catch{return NaN}}zn.exports=ku(Pu)});var K=a((sm,Pn)=>{var rm=d();function kn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!kn(n[u],e[u]))return!1}return!0}}}Pn.exports=kn});var qe=a((om,Fn)=>{var $n=m(),$u=p(),Bn=d(),qt=x(),Jn=K();function Wn(n,e,t){if($n(!$u(n),"You must pass an array and a value into the `indexOf` function!"),$n(Bn(n),"You must pass an array and a value into the `indexOf` function!"),qt(n).length===1||Bn(e)&&Jn(qt(n[0]),qt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Jn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Wn(s,e);if(o)return[r].concat(o)}return null}Fn.exports=Wn});var Rn=a((im,Ln)=>{var Bu=qe(),Ju=Y();function Wu(n){try{return Bu(n,Ju(n))}catch{return NaN}}Ln.exports=Wu});var Ve=a((um,Kn)=>{var Fu=w(),Lu=f();function Ru(n){try{let e=Fu(n),t=1/0;for(let r=0;r<e.length;r++){if(!Lu(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Kn.exports=Ru});var Xn=a((am,Qn)=>{var Ku=qe(),Qu=Ve();function Xu(n){try{return Ku(n,Qu(n))}catch{return NaN}}Qn.exports=Xu});var Zn=a((cm,Gn)=>{var Gu=f(),Zu=b();function Hu(n){try{return Gu(n)?Math.ceil(n):NaN}catch{return NaN}}Gn.exports=Zu(Hu)});var er=a((lm,Dn)=>{var Du=p(),ea=mt(),ta=b(),Hn=f();function na(n,e){try{if(!Hn(n))return NaN;if(Du(e))e=1e-10;else if(!Hn(e))return NaN;return ea(n)<e?0:n}catch{return NaN}}Dn.exports=ta(na)});var nr=a((fm,tr)=>{var yt=f(),ra=b();function sa(n,e,t){try{return yt(n)?yt(e)?yt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}tr.exports=ra(sa)});var ye=a((hm,rr)=>{var oa=f(),ia=w();function ua(n){try{let e=ia(n),t=0;for(let r=0;r<e.length;r++){if(!oa(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}rr.exports=ua});var Ye=a((mm,sr)=>{var aa=ye(),ca=w(),la=f();function fa(n){try{let e=ca(n),t=aa(e),r=0;for(let s=0;s<e.length;s++){if(!la(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}sr.exports=fa});var ar=a((pm,ur)=>{var or=ye(),ir=Ye();function ha(n,e){try{let t=or(n),r=or(e),s=Math.sqrt((ir(n)+ir(e))/2);return(t-r)/s}catch{return NaN}}ur.exports=ha});var hr=a((dm,fr)=>{var cr=d(),ma=f(),Ce=m();function lr(n,e){if(Ce(cr(n),"The `combine` function only works on arrays!"),Ce(ma(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ce(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ce(!cr(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;lr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}fr.exports=lr});var se=a((qm,mr)=>{var gm=m(),pa=p(),da=d();function bt(n){if(typeof n=="object"){if(pa(n))return n;if(da(n))return n.map(bt);{let e={};return Object.keys(n).forEach(function(t){e[t]=bt(n[t])}),e}}else return n}mr.exports=bt});var Nt=a((ym,gr)=>{var pr=ye(),dr=p();function ga(n,e){try{let t=pr(n),r=pr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(dr(n[i]))return NaN;if(dr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}gr.exports=ga});var ze=a((bm,qr)=>{var qa=f(),ya=b();function ba(n){try{return qa(n)?Math.sqrt(n):NaN}catch{return NaN}}qr.exports=ya(ba)});var _e=a((Nm,yr)=>{var Na=ze(),wa=Ye();function xa(n){try{return Na(wa(n))}catch{return NaN}}yr.exports=xa});var wr=a((wm,Nr)=>{var va=Nt(),br=_e();function Ta(n,e){try{return va(n,e)/(br(n)*br(e))}catch{return NaN}}Nr.exports=Ta});var vr=a((xm,xr)=>{var Sa=f(),Oa=b();function Aa(n){try{return Sa(n)?Math.cos(n):NaN}catch{return NaN}}xr.exports=Oa(Aa)});var Q=a((vm,Sr)=>{var Tr=m(),Ea=p(),Ma=d(),Ia=w();function ja(n){Tr(!Ea(n),"You must pass an array into the `set` function!"),Tr(Ma(n),"You must pass an array into the `set` function!");let e=[],t={};return Ia(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Sr.exports=ja});var ke=a((Tm,Ir)=>{var Or=m(),Ar=p(),Er=d(),Mr=w(),Ua=K(),Va=Q();function Ya(n,e){Or(!Ar(n),"You must pass an array and some items to count into the `count` function!"),Or(Er(n),"You must pass an array and some items to count into the `count` function!");let t=Mr(n);return e=Ar(e)?Va(n):e,Er(e)?Mr(e).map(function(r){let s=t.filter(o=>Ua(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Ir.exports=Ya});var oe=a((Sm,Cr)=>{var be=m(),jr=d(),Ur=f(),Ca=x(),Vr=w(),za=n=>n.reduce((e,t)=>e*t);function Yr(n,e){if(be(jr(n),"The first argument passed into the `reshape` function must be an array!"),Ur(e)&&(e=[e]),be(jr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),be(Ca(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{be(Ur(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Vr(n);let t=Vr(n);be(za(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Yr(i,e.slice(1)))}return r}Cr.exports=Yr});var X=a((Em,Wr)=>{var Om=z(),Am=_(),kr=p(),_a=m(),Pr=f(),$r=se(),ka=oe(),Br=Math.pow(2,64),N=[];Jr(parseInt(Math.random()*Br));function Pa(n,e){n=T(n);function t(){n+=T("0x9e3779b97f4a7c15");let s=$r(n);return s=(s^s>>30n)*T("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*T("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function T(n){return BigInt.asUintN(64,BigInt(n))}function zr(n,e){return n=T(n),e=BigInt(e),T(T(n<<e)|T(n>>T(64n-e)))}function Jr(n){if(kr(n))return $r(N);{_a(Pr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Pa(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function _r(){let n=T(zr(N[0]+N[3],23)+N[0]),e=T(N[1]<<17n);return N[2]=T(N[2]^N[0]),N[3]=T(N[3]^N[1]),N[1]=T(N[1]^N[2]),N[0]=T(N[0]^N[3]),N[2]=T(N[2]^e),N[3]=zr(N[3],45),parseInt(n)/Br}function $a(n){if(kr(n))return _r();Pr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(_r());return ka(e,n)}Wr.exports={random:$a,seed:Jr}});var Ne=a((Mm,Lr)=>{var Fr=m(),Ba=d(),Ja=p(),Wa=f(),Fa=x();function La(n){return Fr(Ba(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Fr(Fa(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Ja(e)&&Wa(e))}Lr.exports=La});var G=a((Im,Rr)=>{function Ra(n){return typeof n=="boolean"}Rr.exports=Ra});var V=a((jm,Kr)=>{function Ka(n){return typeof n=="string"}Kr.exports=Ka});var k=a((Um,Qr)=>{var wt=m(),xt=p(),vt=f(),Qa=pe();function Xa(n,e,t=1){wt(!xt(n)&&!xt(e)&&!xt(t),"You must pass two numbers and optionally a step value to the `range` function!"),wt(vt(n)&&vt(e)&&vt(t),"You must pass two numbers and optionally a step value to the `range` function!"),wt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=Qa(s)),s}Qr.exports=Xa});var Z=a((Vm,Gr)=>{var Tt=m(),Xr=p(),Ga=d(),Za=C();function Ha(n,e){return n<e?-1:n>e?1:0}function Da(n,e){Xr(e)&&(e=Ha),Tt(!Xr(n),"You must pass an array into the `sort` function!"),Tt(Ga(n),"You must pass an array into the `sort` function!"),Tt(Za(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Gr.exports=Da});var D=a((zm,ts)=>{var y=m(),Pe=d(),H=p(),ie=x(),$e=re(),we=k(),Ot=f(),xe=V(),Ym=_(),ec=C(),tc=z(),St=se(),nc=Q(),Zr=pe(),Hr=Z(),Dr=G(),Cm=Be();function rc(n){return Ot(n)&&parseInt(n)===n}function sc(n){return rc(n)&&n>=0}function es(n,e){y(Ot(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var P=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(Pe(r),"The new values must be a 1-dimensional array!");let s=ie(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(we(t._index.length,s[0]).map(o=>"row"+es(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(Pe(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ie(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ie(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ie(this.values)}isEmpty(){return this.values.filter(t=>!H(t)).length===0}clear(){let e=this,t=e.copy();return t.values=tc(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||Ot(e))&&(e=[e]);let r=nc((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),H(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;H(e)&&(e=t.index),y(Pe(e),"The `indices` array must be a 1-dimensional array of strings."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(xe(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new P(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;H(e)&&(e=we(0,r[0])),y(Pe(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(sc(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new P(Zr(e.values));return t.index=Zr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=we(0,e.shape[0]).map(r=>"row"+es(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new P(St(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(ec(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>H(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(we(0,r/2).concat(we(t.index.length-r/2,t.index.length)));let o=St(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Dr(e)||xe(e)||H(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;H(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Dr(e)&&(t=e);let r=this,s=$e([r.values,r.index]);s=$e(Hr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new P(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=$e([e.values,e.index]);t=$e(Hr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new P(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=St(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new P,r.name=t.name,r):(r.values=i,r.index=s,r)}};ts.exports=P});var At=a((_m,ns)=>{var oc=m(),ic=f();function uc(n,e){oc(ic(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}ns.exports=uc});var Je=a((km,rs)=>{var ac=d(),cc=p();function lc(n){return typeof n=="object"&&!cc(n)&&!ac(n)}rs.exports=lc});var Et=a((Pm,ss)=>{var fc=V(),hc=Je(),mc=G(),pc=p(),dc=ne();function gc(n,e){e=(()=>{if(pc(e))return!0;if(mc(e))return e;throw new dc("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>fc(u)?JSON.stringify(u):hc(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}ss.exports=gc});var is=a(($m,os)=>{var qc=Et();function yc(n,e,t){let r=qc(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=lt("fs"),o=lt("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}os.exports=yc});var Mt=a((Wm,cs)=>{var W=d(),us=G(),Bm=Je(),Jm=At(),bc=Y(),as=k(),We=V(),Fe=ne(),Le=p(),F=m();function Nc(n,e,t,r,s,o){return t=(()=>{if(Le(t))return!1;if(us(t))return t;throw new Fe("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Le(r))return!1;if(us(r))return r;throw new Fe("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Le(s))return",";if(We(s))return F(s.length===1,u),s;if(W(s))return F(s.length===2,u),F(s[0].length===1,u),F(s[1].length===1,u),s;throw new Fe(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Le(o))return'"';if(We(o))return F(o.length===1,u),o;if(W(o))return F(o.length===2,u),F(o[0].length===1,u),F(o[1].length===1,u),o;throw new Fe(u)})(),(()=>{let l=e.split(`
`).filter(S=>S.length>0).map(S=>{let A=[],te="",he=!1;for(let J=0;J<S.length;J++){let M=S[J];if(M.match(/\\/g))J++;else if(W(o)&&M===o[0])he=!0;else if(W(o)&&M===o[1])he=!1;else if(We(o)&&M===o)he=!he;else if(W(s)&&M===s[0]||W(s)&&M===s[1]||We(s)&&M===s)if(he)te+=M;else{let at=te;try{let ct=JSON.parse(at);W(ct)?A.push(at.trim()):A.push(ct)}catch{A.push(at.trim())}te=""}else te+=M}if(te.length>0){let J=te;try{let M=JSON.parse(J);W(M)?A.push(J.trim()):A.push(M)}catch{A.push(J.trim())}}return A}),c=(()=>{let S=t?l.shift():as(0,l[0].length).map(A=>"col"+A);return r&&S.shift(),S})(),g=(()=>r?l.map(A=>A.shift()):as(0,l.length).map(A=>"row"+A))(),q=bc(l.map(S=>S.length)),I=new n(l.map(S=>(S.length=q,S)));return t&&(I.columns=c),r&&(I.index=g),I})()}cs.exports=Nc});var fs=a((Fm,ls)=>{var wc=m(),xc=Mt(),vc=V(),Tc=p(),Sc=ne();async function Oc(n,e,t,r,s,o,i){t=(()=>Tc(t)?"utf8":(wc(vc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return lt("fs").readFileSync(e,t)}catch{}throw new Sc(`The path "${e}" could not be loaded!`)})();return xc(n,u,r,s,o,i)}ls.exports=Oc});var Re=a((Lm,hs)=>{var Ac=f(),Ec=b();function Mc(n){try{return Ac(n)?Math.floor(n):NaN}catch{return NaN}}hs.exports=Ec(Mc)});var It=a((Km,ps)=>{var ms=m(),Ic=p(),jc=d(),Rm=Re(),{random:Uc}=X();function Vc(n){ms(!Ic(n),"You must pass an array into the `shuffle` function!"),ms(jc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Uc()*t.length);e.push(t.splice(s,1)[0])}return e}ps.exports=Vc});var qs=a((Qm,gs)=>{var Yc=p(),Cc=m(),ds=It();function zc(n,e){return Yc(e)&&(e=0),Cc(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?ds(n.index):null,e===1?ds(n.columns):null)}gs.exports=zc});var ws=a((Xm,Ns)=>{var ys=m(),_c=C(),kc=p(),Ke=D(),ve=w();function bs(n){let e={};return ve(n).forEach((t,r)=>{e[t]=r}),e}function ue(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function Pc(n,e,t,r){ys(_c(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),kc(r)&&(r=0),ys(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=bs(s.index),i=bs(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.index[c],g.index=e.columns;let q=t(g,c,e);return q||delete o[s.index[c]],q});if(ve(u).length===0)return new n;if(u.length===1){let l=new Ke(ve(u));return l.name=ue(o)[0],l.index=ue(i),l}s.values=u,s.index=ue(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.columns[c],g.index=e.index;let q=t(g,c,e);return q||delete i[s.index[c]],q});if(ve(u).length===0)return new n;if(u.length===1){let l=new Ke(ve(u));return l.name=ue(i)[0],l.index=ue(o),l}s.values=u,s.index=ue(i),s=s.transpose()}return s}Ns.exports=Pc});var Os=a((Gm,Ss)=>{var{random:$c}=X(),xs=p(),jt=f(),ae=V(),Ut=G(),vs=d(),j=m(),Ts=x(),Bc=k(),Jc=Z(),Wc=w();function Fc(n,e,t){let r=n.copy(),s=$c().toString();return r=r.assign(s,r.index),xs(e)&&(e=[s],t=[!0]),(jt(e)||ae(e))&&(e=[e],(Ut(t)||ae(t))&&(t=[t])),j(vs(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),j(Ts(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),xs(t)&&(t=Bc(0,e.length).map(o=>!0)),j(vs(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),j(Ts(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),j(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(j(ae(o)||jt(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ae(o)){let i=r.columns.indexOf(o);return j(i>-1,`The column "${o}" does not exist!`),i}if(jt(o))return j(parseInt(o)===o,"Column indices must be whole numbers!"),j(o>=0,`The column index ${o} is out of bounds!`),j(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(j(ae(o)||Ut(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ae(o)){let i=o.trim().toLowerCase();return j(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(Ut(o))return o}),r.values=Jc(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=Wc(r.get(null,s).values),r=r.dropColumns(s),r}Ss.exports=Fc});var Es=a((Zm,As)=>{var Lc=V(),Rc=K(),Te=k(),Qe=D();function Kc(n,e){function t(q,I){return Lc(q)&&q.length>I?q.substring(0,I-3)+"...":q}if(Rc(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Te(0,s).concat(Te(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Te(0,i).concat(Te(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Qe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Qe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Qe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Te(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let g=28;return c instanceof Qe?(c.values=c.values.map(q=>t(q,g)),c.name=t(c.name,g),c.index=c.index.map(q=>t(q,g))):(c.values=c.values.map(q=>q.map(I=>t(I,g))),c.columns=c.columns.map(q=>t(q,g)),c.index=c.index.map(q=>t(q,g))),console.table(c.toObject()),e}As.exports=Kc});var Is=a((Hm,Ms)=>{function Qc(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}Ms.exports=Qc});var Xe=a((Dm,js)=>{var Xc=D();function Gc(n){return n instanceof Xc}js.exports=Gc});var ks=a((ep,_s)=>{var Us=p(),Vs=V(),Ys=f(),Ge=m(),Cs=d(),zs=x(),Zc=Xe();function Hc(n,e,t,r){Us(t)&&(t=[]),Us(r)&&(r=[]),(Vs(t)||Ys(t))&&(t=[t]),(Vs(r)||Ys(r))&&(r=[r]),Ge(Cs(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Ge(Cs(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Ge(zs(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Ge(zs(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if(Zc(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}_s.exports=Hc});var Ze=a((tp,Ps)=>{var Dc=f();function el(n){return Dc(n)&&parseInt(n)===n}function tl(n){return el(n)&&n>=0}Ps.exports=tl});var Bs=a((np,$s)=>{var Vt=m(),nl=Ze(),rl=Ne();function sl(n,e,t,r,s){t=t||0,Vt(t===0||t===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,Vt(nl(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",Vt(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(l){let c=rl(l);return s>0?l.length-c.length<s:r==="any"?c.length===l.length:r==="all"?c.length>0:!0}let i=e.copy(),u=Math.random().toString();if(t===0){let l=i.index.filter(c=>{let g=i.get(c,null).values;return o(g)});return l.length>0?i.get(l,null):new n}else if(t===1){let l=i.columns.filter(c=>{let g=i.get(null,c).values;return o(g)});return l.length>0?i.get(null,l):new n}return i}$s.exports=sl});var Rs=a((rp,Ls)=>{var Yt=m(),ol=Ze(),Se=p(),Js=V(),Ws=Xe(),Fs=x();function il(n,e,t,r,s){t=t||0,Yt(t===0||t===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),s=s||0,Yt(ol(s),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),r=s>0?"none":r||"any",Yt(r==="any"||r==="all"||r==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function o(l){if(s>0){let c=0;for(let g=0;g<l.length;g++){let q=l[g];if(Se(q)&&c++,c>=s)return[]}}else if(r==="any")for(let c=0;c<l.length;c++){let g=l[c];if(Se(g))return[]}else if(r==="all"){for(let c=0;c<l.length;c++){let g=l[c];if(!Se(g))return l}return[]}return l}let i=e.copy(),u=Math.random().toString();if(t===0){i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Fs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Se(c))return new n;Js(c)&&(c=[c]),Ws(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(t===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Fs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Se(c))return new n;Js(c)&&(c=[c]),Ws(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}Ls.exports=il});var Be=a((fp,Zs)=>{var{random:sp}=X(),op=_(),h=m(),ee=se(),Ks=ke(),ip=Ne(),Ct=w(),E=d(),up=G(),ul=K(),al=C(),Qs=f(),Oe=V(),$=p(),ap=Y(),cp=Ve(),cl=z(),ce=k(),le=D(),Xs=Q(),O=x(),lp=Z(),Ae=re(),He=At(),ll=is(),fl=Et(),hl=fs(),ml=Mt(),pl=qs(),dl=ws(),gl=Os(),ql=Es(),yl=Is(),bl=ks(),zt=Xe(),Nl=Bs(),Gs=Ze(),wl=Rs();function De(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function xl(n){return n instanceof Object&&!E(n)}var v=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){h(E(r),"The new values must be a 2-dimensional array!");let s=O(r);h(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(ce(t._index.length,s[0]).map(o=>"row"+He(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(ce(t._columns.length,s[1]).map(o=>"col"+He(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){h(E(r),"The new columns list must be a 1-dimensional array of strings!"),h(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),h(O(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+De(8):o.trim()));let s=(()=>{let o=Ks(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+De(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){h(E(r),"The new index must be a 1-dimensional array of strings!"),h(r.length===t.shape[0],"The new index must be the same length as the old index!"),h(O(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+De(8):o.trim()));let s=(()=>{let o=Ks(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+De(8):o),t._index=r}}),h($(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(E(e)){let r=O(e);h(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Ae(r);let s=O(t.values);t._index=ce(0,s[0]).map(o=>"row"+He(o,(s[0]-1).toString().length))}}get shape(){return O(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Xs(this.values).filter(t=>!$(t)).length===0}clear(){let e=this,t=new v(cl(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(Oe(e)||Qs(e))&&(e=[e]),(Oe(t)||Qs(t))&&(t=[t]);let s=Xs((e||[]).concat(t||[]).map(o=>typeof o));return h(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&h(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(h(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),h(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),$(e)||(e=e.map(o=>{if(typeof o=="string")return h(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return h(o>=0,`Index ${o} is out of bounds!`),h(parseInt(o)===o,"Row numbers must be integers!"),h(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),$(t)||(t=t.map(o=>{if(typeof o=="string")return h(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return h(o>=0,`Column ${o} is out of bounds!`),h(parseInt(o)===o,"Column numbers must be integers!"),h(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;$(e)&&(e=r.index),$(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),h(E(e)&&E(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(O(e).length===1&&O(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(e.length>0,"The `rows` array must contain at least one row name."),h(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{h(Oe(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{h(Oe(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),h(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return Ct(s)[0];if(e.length===1){let i=new le(Ct(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new le(Ct(s));return i.name=t[0],i.index=e,i}let o=new v(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;$(e)&&(e=ce(0,s[0])),$(t)&&(t=ce(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),h(E(e)&&E(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(O(e).length===1&&O(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(e.length>0,"The `rowIndices` array must contain at least one index."),h(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{h(Gs(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{h(Gs(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),h(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new v(Ae(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=ce(0,e.shape[0]).map(r=>"row"+He(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new v;let t=new v(ee(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;$(t)?(s=e,h(!E(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,h(Oe(r),"When using two parameters for the `assign` method, the first parameter must be a string."),h(zt(s)||E(s)&&O(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),h(xl(s)||zt(s)||E(s)&&O(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(zt(s)){let i={};return h(o.isEmpty()||ul(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(E(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(l=>{let c=s[l];if(h(E(c),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),h(O(c).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=Ae([c]),i.columns=[l],u=i.shape;else{h(c.length===u[0],`Column "${l}" in the new data is not the same length as the other columns in the original DataFrame.`);let g=i.columns.indexOf(l);g<0&&(i.columns.push(l),g=i.columns.indexOf(l)),i.values.forEach((q,I)=>{q[g]=c[I]})}}),i}}apply(e,t){t=t||0,h(al(e),"The first parameter to the `apply` method must be a function."),h(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=Ae(r.values).map((i,u)=>{let l=new le(i);return l.name=r.columns[u],l.index=r.index,e(l,u,r)});if(O(o).length===1){let i=new le(o);return i.index=ee(r.columns),i}else{let i=new v(Ae(o));return i.index=ee(r.index),i.columns=ee(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new le(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(O(s).length===1){let o=new le(s);return o.index=ee(r.index),o}else{let o=new v(s);return o.index=ee(r.index),o.columns=ee(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){return wl(v,this,e,t,r)}dropNaN(e,t,r){return Nl(v,this,e,t,r)}drop(e,t){return bl(v,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return yl(this)}toCSVString(e){return fl(this,e)}toCSV(e,t){return ll(this,e,t)}print(){return ql(v,this)}sort(e,t){return gl(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return dl(v,this,e,t)}shuffle(e){return pl(this,e)}};v.fromCSV=function(){return hl(v,...arguments)};v.fromCSVString=function(){return ml(v,...arguments)};Zs.exports=v});var no=a((hp,to)=>{var Hs=m(),Ds=d(),eo=w();function vl(n,e){Hs(Ds(n),"You must pass two arrays into the `diff` function!"),Hs(Ds(e),"You must pass two arrays into the `diff` function!");let t=eo(n),r=eo(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}to.exports=vl});var et=a((mp,so)=>{var ro=f(),Tl=b();function Sl(n,e){try{return ro(n)?ro(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}so.exports=Tl(Sl)});var tt=a((pp,oo)=>{var Ol=me(),Al=w();function El(n){try{return Ol(...Al(n))}catch{return NaN}}oo.exports=El});var _t=a((dp,io)=>{var Ml=f(),Il=b();function jl(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Ml(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}io.exports=Il(jl)});var fe=a((gp,uo)=>{var Ul=_t();function Vl(n,e){return Ul(n,e)}uo.exports=Vl});var kt=a((qp,ao)=>{var Yl=me(),Cl=fe();function zl(n,e){return Yl(n,Cl(e,-1))}ao.exports=zl});var lo=a((yp,co)=>{var _l=et(),kl=tt(),Pl=ze(),$l=kt();function Bl(n,e){try{return Pl(kl(_l($l(n,e),2)))}catch{return NaN}}co.exports=Bl});var ho=a((bp,fo)=>{var Jl=fe(),Wl=et();function Fl(n,e){return Jl(n,Wl(e,-1))}fo.exports=Fl});var Pt=a((wp,bo)=>{var Ee=m(),mo=p(),po=d(),Ll=f(),Np=K(),go=w(),qo=x(),Rl=tt(),Kl=fe(),yo=re();function nt(n,e){Ee(!mo(n)&&!mo(e),"You must pass two arrays of numbers into the `dot` function!"),Ee(po(n)&&po(e),"You must pass two arrays of numbers into the `dot` function!"),go(n).concat(go(e)).forEach(s=>{Ee(Ll(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=qo(n),r=qo(e);if(Ee(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Ee(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return Rl(Kl(n,e));if(t.length===1&&r.length===2)return yo(e).map(s=>nt(n,s));if(t.length===2&&r.length===1)return n.map(s=>nt(s,e));if(t.length===2&&r.length===2){let s=yo(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(nt(n[i],s[l]));o.push(u)}return o}}bo.exports=nt});var xo=a((xp,wo)=>{var No=m(),Ql=d(),Xl=p(),Gl=x();function Zl(n){return No(Ql(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),No(Gl(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!Xl(e))}wo.exports=Zl});var Eo=a((vp,Ao)=>{var vo=m(),To=p(),So=d(),Hl=Y(),Oo=x();function Dl(n,e){vo(So(n)&&So(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),vo(Oo(n).length===1&&Oo(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Hl([n.length,e.length]);s++)!To(n[s])&&!To(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Ao.exports=Dl});var Co=a((Tp,Yo)=>{var Mo=m(),Io=p(),jo=d(),Uo=f(),ef=Y(),Vo=x();function tf(n,e){Mo(jo(n)&&jo(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Mo(Vo(n).length===1&&Vo(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<ef([n.length,e.length]);s++)!Io(n[s])&&Uo(n[s])&&!Io(e[s])&&Uo(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Yo.exports=tf});var _o=a((Sp,zo)=>{var nf=b(),rf=f();function sf(n){try{return rf(n)?Math.exp(n):NaN}catch{return NaN}}zo.exports=nf(sf)});var $o=a((Op,Po)=>{var of=b();function ko(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*ko(n-1)}catch{return NaN}}Po.exports=of(ko)});var Jo=a((Ap,Bo)=>{var uf=f(),af=b();function cf(n){try{let e=JSON.parse(n);return uf(e)?e:NaN}catch{return NaN}}Bo.exports=af(cf)});var $t=a((Ep,Wo)=>{var lf=f(),ff=b();function hf(n){try{let e=JSON.parse(n);return lf(e)?parseInt(e):NaN}catch{return NaN}}Wo.exports=ff(hf)});var Ro=a((Mp,Lo)=>{var L=m(),mf=p(),Bt=d(),Jt=f(),Fo=x(),pf=$t();function Wt(n,e){return L(!mf(n),"You must pass an array and an index into the `getValueAt` function!"),L(Bt(n),"You must pass an array and an index into the `getValueAt` function!"),L(Jt(e)||Bt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Bt(e)&&(L(Fo(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{L(Jt(t)&&pf(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),L(e.length<=Fo(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Jt(e)?(L(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(L(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Wt(n[e[0]],e.slice(1))):Wt(n,e[0])}Lo.exports=Wt});var Ft=a((Up,Ko)=>{var Ip=z(),jp=_(),df=f(),gf=oe();function qf(n){df(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return gf(e,n)}Ko.exports=qf});var Xo=a((Vp,Qo)=>{var rt=m(),yf=p(),bf=f(),Nf=Ft();function wf(n){rt(!yf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),rt(bf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),rt(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),rt(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Nf([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}Qo.exports=wf});var Lt=a((Cp,Go)=>{var Yp=m(),xf=Q();function vf(){return xf([...arguments])}Go.exports=vf});var Ho=a((zp,Zo)=>{var Tf=d(),Sf=w(),Of=Lt();function Af(){let n=Object.values(arguments).map(r=>Tf(r)?Sf(r):[r]),e=[];return Of(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}Zo.exports=Af});var Kt=a((kp,ti)=>{var Me=m(),st=p(),Do=f(),Rt=d(),Ef=k(),Mf=w(),_p=x(),If=Re();function ei(n,e){if(Me(!st(n),"You must pass an array into the `slice` function!"),Me(Rt(n),"You must pass an array into the `slice` function!"),st(e))return n.slice();Me(Rt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),Mf(e).forEach(s=>{Me(st(s)||Do(s)&&If(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];st(t)&&(t=Ef(0,n.length)),Do(t)&&(t=[t]);let r=[];return t.forEach(s=>{Me(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Rt(o)?r.push(ei(n[s],e.slice(1,e.length))):r.push(n[s])}),r}ti.exports=ei});var oi=a((Pp,si)=>{var B=m(),jf=p(),Uf=d(),Qt=f(),Vf=w(),Yf=x(),ot=Kt(),Cf=Pt(),ni=me(),ri=fe(),Xt=gt(),R=k();function Gt(n){B(!jf(n),"You must pass a square 2D array into the `inverse` function!"),B(Uf(n),"You must pass a square 2D array into the `inverse` function!"),Vf(n).forEach(t=>B(Qt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=Yf(n);if(B(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return B(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;B(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return ri(u,1/i)}else if(e[0]>1){let t=(r,s)=>Qt(r)||Qt(s)?ri(r,s):Cf(r,s);for(let r=1;r<e[0]-1;r++)try{let s=ot(n,[R(0,r),R(0,r)]),o=ot(n,[R(0,r),R(r,e[0])]),i=ot(n,[R(r,e[0]),R(0,r)]),u=ot(n,[R(r,e[0]),R(r,e[0])]),l=Gt(s),c=Gt(ni(u,t(-1,t(t(i,l),o)))),g=ni(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),I=t(-1,t(t(c,i),l)),S=c;return Xt(Xt(g,q,1),Xt(I,S,1),0)}catch{}B(!1,"This matrix cannot be inverted!")}}si.exports=Gt});var ui=a(($p,ii)=>{var zf=b(),Zt=f();function _f(n,e,t){try{return Zt(n)?Zt(e)?Zt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}ii.exports=zf(_f)});var li=a((Bp,ci)=>{var ai=f(),kf=p(),Pf=b();function $f(n,e){try{return e=kf(e)?Math.E:e,ai(n)?ai(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}ci.exports=Pf($f)});var hi=a((Jp,fi)=>{var Ie=f(),Bf=b();function Jf(n,e,t,r,s){try{return Ie(n)?Ie(e)?Ie(t)?Ie(r)?Ie(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}fi.exports=Bf(Jf)});var pi=a((Kp,mi)=>{var Wp=m(),Fp=p(),Lp=d(),Rp=f(),Wf=w(),Ff=Z(),Lf=Ne();function Rf(n){try{let e=Wf(n),t=Lf(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=Ff(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}mi.exports=Rf});var qi=a((Qp,gi)=>{var Kf=w(),Qf=ke(),Xf=Q(),di=Z();function Gf(n){try{if(n.length===0)return NaN;let e=Kf(n);if(e.length===0)return NaN;let t={},r=Xf(e);r.forEach(u=>{t[u]=Qf(e,u)});let s=di(r,(u,l)=>t[l]-t[u]),o=s[0],i=di(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}gi.exports=Gf});var wi=a((Zp,Ni)=>{var Zf=p(),Xp=z(),Gp=_(),{random:yi}=X(),Hf=oe(),Df=f();function bi(){let n=yi(),e=yi();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function eh(n){if(Zf(n))return bi();Df(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(bi());return Hf(e,n)}Ni.exports=eh});var vi=a((ed,xi)=>{var Hp=z(),Dp=_(),th=oe(),nh=f();function rh(n){nh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return th(e,n)}xi.exports=rh});var Oi=a((td,Si)=>{var Ti=d(),sh=f(),it=m(),oh=p();function Ht(n,e){if(it(Ti(n),"The `permute` function only works on arrays!"),oh(e)&&(e=n.length),it(sh(e),"`r` must be a whole number!"),e>n.length)return Ht(n);if(e<=0)return[[]];if(it(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{it(!Ti(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Ht(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}Si.exports=Ht});var Ii=a((nd,Mi)=>{var ih=d(),uh=x(),Ai=Be(),Ei=D();function ah(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(ih(e)){let t=uh(e);t.length===1?new Ei(e).print():t.length==2?new Ai(e).print():console.log(e)}else e instanceof Ai||e instanceof Ei?e.print():console.log(e)})}Mi.exports=ah});var Ui=a((rd,ji)=>{var ch=f(),lh=b();function fh(n){try{return ch(n)?Math.round(n):NaN}catch{return NaN}}ji.exports=lh(fh)});var Dt=a((sd,Ci)=>{var Vi=m(),hh=f(),Yi=d(),mh=se();function ph(n,e,t){Vi(Yi(n),"The first argument passed into the `setValueAt` function must be an array!"),hh(e)&&(e=[e]),Vi(Yi(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=mh(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}Ci.exports=ph});var _i=a((od,zi)=>{var dh=f(),gh=b();function qh(n){try{return dh(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}zi.exports=gh(qh)});var Pi=a((id,ki)=>{var yh=f(),bh=b();function Nh(n){try{return yh(n)?Math.sin(n):NaN}catch{return NaN}}ki.exports=bh(Nh)});var Bi=a((ud,$i)=>{var wh=_e();function xh(n){return wh(n)}$i.exports=xh});var Wi=a((ad,Ji)=>{var vh=f(),Th=b();function Sh(n){try{return vh(n)?Math.tan(n):NaN}catch{return NaN}}Ji.exports=Th(Sh)});var ut=a((cd,Li)=>{var Fi=C();function Oh(n,e){assert(Fi(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function Ah(n,e){assert(Fi(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}Li.exports={timeSync:Oh,timeAsync:Ah}});var Qi=a((ld,Ki)=>{var Ri=m(),Eh=d(),Mh=C(),Ih=_(),jh=qe(),Uh=Dt(),Vh=w();function Yh(n,e){Ri(Eh(n),"The first argument passed into the `where` function must be an array!"),Ri(Mh(e),"The second argument passed into the `where` function must be a function!");let t=Vh(n).length,r=Ih(n,e),s=[],o=0,i=!1;for(;!i;){let u=jh(r,!0);u?(s[o]=u,r=Uh(r,u,null),o++):i=!0}return o===0?null:s}Ki.exports=Yh});var Ch=a((fd,en)=>{var je={abs:mt(),add:me(),append:gt(),apply:_(),arccos:Vn(),arcsin:Cn(),arctan:_n(),argmax:Rn(),argmin:Xn(),assert:m(),ceil:Zn(),chop:er(),clamp:nr(),cohensd:ar(),combine:hr(),copy:se(),correl:wr(),cos:vr(),count:ke(),covariance:Nt(),DataFrame:Be(),diff:no(),distance:lo(),divide:ho(),dot:Pt(),dropMissing:xo(),dropMissingPairwise:Eo(),dropNaN:Ne(),dropNaNPairwise:Co(),exp:_o(),factorial:$o(),flatten:w(),float:Jo(),floor:Re(),getValueAt:Ro(),identity:Xo(),indexOf:qe(),int:$t(),intersect:Ho(),inverse:oi(),isArray:d(),isBoolean:G(),isEqual:K(),isFunction:C(),isNumber:f(),isObject:Je(),isString:V(),isUndefined:p(),lerp:ui(),log:li(),map:hi(),MathError:ne(),max:Y(),mean:ye(),median:pi(),min:Ve(),mode:qi(),multiply:_t(),ndarray:z(),normal:wi(),ones:vi(),permute:Oi(),pow:et(),print:Ii(),random:X().random,range:k(),reshape:oe(),reverse:pe(),round:Ui(),scale:fe(),seed:X().seed,Series:D(),set:Q(),setValueAt:Dt(),shape:x(),shuffle:It(),sign:_i(),sin:Pi(),slice:Kt(),sort:Z(),sqrt:ze(),std:_e(),stdev:Bi(),subtract:kt(),sum:tt(),tan:Wi(),time:ut().timeSync,timeSync:ut().timeSync,timeAsync:ut().timeAsync,transpose:re(),union:Lt(),variance:Ye(),vectorize:b(),where:Qi(),zeros:Ft(),dump:function(){Object.keys(je).forEach(n=>{typeof global<"u"&&(global[n]=je[n]),typeof window<"u"&&(window[n]=je[n])})}};typeof en<"u"&&(en.exports=je);typeof window<"u"&&(window.JSMathTools=je)});Ch();})();
