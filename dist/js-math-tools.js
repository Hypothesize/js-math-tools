(()=>{var ft=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var f=a((im,rn)=>{function au(n){return typeof n=="number"&&!isNaN(n)}rn.exports=au});var se=a((um,on)=>{var sn=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};on.exports=sn});var h=a((am,un)=>{var cu=se();un.exports=function(n,e){if(!n)throw new cu(e)}});var m=a((cm,an)=>{function lu(n){return n===null||typeof n>"u"}an.exports=lu});var p=a((lm,cn)=>{function fu(n){return n instanceof Array}cn.exports=fu});var w=a((fm,mn)=>{var ln=h(),hu=m(),fn=p();function hn(n){ln(!hu(n),"You must pass one array into the `flatten` function!"),ln(fn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){fn(t)?e=e.concat(hn(t)):e.push(t)}),e}mn.exports=hn});var Y=a((hm,pn)=>{var mu=w(),pu=f();function du(n){try{let e=mu(n),t=-1/0;for(let r=0;r<e.length;r++){if(!pu(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}pn.exports=du});var U=a((mm,dn)=>{function gu(n){return typeof n=="function"}dn.exports=gu});var b=a((pm,gn)=>{var ht=h(),qu=m(),mt=p(),yu=Y(),bu=U();function Nu(n){return ht(!qu(n),"You must pass a function into the `vectorize` function!"),ht(bu(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>mt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>mt(arguments[i])).map(i=>arguments[i].length),o=yu(s);s.forEach(i=>{ht(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>mt(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}gn.exports=Nu});var pt=a((dm,qn)=>{var wu=f(),xu=b();function vu(n){try{return wu(n)?Math.abs(n):NaN}catch{return NaN}}qn.exports=xu(vu)});var me=a((gm,yn)=>{var Tu=f(),Su=b();function Ou(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Tu(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}yn.exports=Su(Ou)});var x=a((qm,wn)=>{var Ve=h(),Au=m(),bn=p(),Eu=Y();function Nn(n){Ve(!Au(n),"You must pass an array into the `shape` function!"),Ve(bn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>bn(r));if(t.indexOf(!0)>-1){Ve(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Eu(r);r.forEach(function(o){Ve(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(Nn(n[0]))}return e}wn.exports=Nn});var pe=a((ym,vn)=>{var xn=h(),Mu=m(),ju=p();function Iu(n){xn(!Mu(n),"You must pass an array into the `reverse` function!"),xn(ju(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}vn.exports=Iu});var C=a((bm,Sn)=>{var de=h(),Uu=m(),Vu=p(),Yu=f(),Cu=w(),ge="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function Tn(n,e){if(e||(de(!Uu(n),ge),Vu(n)||(n=[n]),n=Cu(n),de(n.length>0,ge),n.forEach(t=>{de(Yu(t),ge),de(parseInt(t)===t,ge),de(t>=0,ge)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(Tn(n.slice(1),!0));return t}}Sn.exports=Tn});var B=a((Nm,An)=>{var dt=h(),_u=m(),zu=p(),ku=x(),On=pe(),Pu=C();function $u(n){dt(!_u(n),"You must pass an array into the `transpose` function!"),dt(zu(n),"You must pass an array into the `transpose` function!");let e=ku(n);if(dt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return On(n);if(e.length===2){let t=Pu(On(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}An.exports=$u});var qt=a((wm,Un)=>{var j=h(),En=m(),Mn=p(),Bu=f(),jn=x(),gt=B();function In(n,e,t=0){j(!En(n),"You must pass two arrays into the `append` function!"),j(!En(e),"You must pass two arrays into the `append` function!"),j(Mn(n),"You must pass two arrays into the `append` function!"),j(Mn(e),"You must pass two arrays into the `append` function!"),j(Bu(t),"The `axis` argument to the `append` function must be 0 or 1!"),j(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),j(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=jn(n),s=jn(e);j(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),j(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&j(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(j(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return gt(In(gt(n),gt(e),0))}}Un.exports=In});var _=a((xm,Vn)=>{var Ju=b();function Fu(n,e){try{return e(n)}catch{return NaN}}Vn.exports=Ju(Fu)});var Cn=a((vm,Yn)=>{var Wu=f(),Lu=b();function Ru(n){try{return Wu(n)?Math.acos(n):NaN}catch{return NaN}}Yn.exports=Lu(Ru)});var zn=a((Tm,_n)=>{var Ku=f(),Qu=b();function Xu(n){try{return Ku(n)?Math.asin(n):NaN}catch{return NaN}}_n.exports=Qu(Xu)});var Pn=a((Sm,kn)=>{var Gu=f(),Zu=b();function Hu(n){try{return Gu(n)?Math.atan(n):NaN}catch{return NaN}}kn.exports=Zu(Hu)});var J=a((Am,Bn)=>{var Om=p();function $n(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!$n(n[u],e[u]))return!1}return!0}}}Bn.exports=$n});var qe=a((Em,Rn)=>{var Jn=h(),Du=m(),Fn=p(),yt=x(),Wn=J();function Ln(n,e,t){if(Jn(!Du(n),"You must pass an array and a value into the `indexOf` function!"),Jn(Fn(n),"You must pass an array and a value into the `indexOf` function!"),yt(n).length===1||Fn(e)&&Wn(yt(n[0]),yt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Wn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Ln(s,e);if(o)return[r].concat(o)}return null}Rn.exports=Ln});var Qn=a((Mm,Kn)=>{var ea=qe(),ta=Y();function na(n){try{return ea(n,ta(n))}catch{return NaN}}Kn.exports=na});var Ye=a((jm,Xn)=>{var ra=w(),sa=f();function oa(n){try{let e=ra(n),t=1/0;for(let r=0;r<e.length;r++){if(!sa(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Xn.exports=oa});var Zn=a((Im,Gn)=>{var ia=qe(),ua=Ye();function aa(n){try{return ia(n,ua(n))}catch{return NaN}}Gn.exports=aa});var Dn=a((Um,Hn)=>{var ca=f(),la=b();function fa(n){try{return ca(n)?Math.ceil(n):NaN}catch{return NaN}}Hn.exports=la(fa)});var nr=a((Vm,tr)=>{var ha=m(),ma=pt(),pa=b(),er=f();function da(n,e){try{if(!er(n))return NaN;if(ha(e))e=1e-10;else if(!er(e))return NaN;return ma(n)<e?0:n}catch{return NaN}}tr.exports=pa(da)});var sr=a((Ym,rr)=>{var bt=f(),ga=b();function qa(n,e,t){try{return bt(n)?bt(e)?bt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}rr.exports=ga(qa)});var ye=a((Cm,or)=>{var ya=f(),ba=w();function Na(n){try{let e=ba(n),t=0;for(let r=0;r<e.length;r++){if(!ya(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}or.exports=Na});var Ce=a((_m,ir)=>{var wa=ye(),xa=w(),va=f();function Ta(n){try{let e=xa(n),t=wa(e),r=0;for(let s=0;s<e.length;s++){if(!va(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}ir.exports=Ta});var lr=a((zm,cr)=>{var ur=ye(),ar=Ce();function Sa(n,e){try{let t=ur(n),r=ur(e),s=Math.sqrt((ar(n)+ar(e))/2);return(t-r)/s}catch{return NaN}}cr.exports=Sa});var pr=a((km,mr)=>{var fr=p(),Oa=f(),_e=h();function hr(n,e){if(_e(fr(n),"The `combine` function only works on arrays!"),_e(Oa(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(_e(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{_e(!fr(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;hr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}mr.exports=hr});var F=a(($m,dr)=>{var Pm=h(),Aa=m(),Ea=p();function Nt(n){if(typeof n=="object"){if(Aa(n))return n;if(Ea(n))return n.map(Nt);{let e={};return Object.keys(n).forEach(function(t){e[t]=Nt(n[t])}),e}}else return n}dr.exports=Nt});var wt=a((Bm,yr)=>{var gr=ye(),qr=m();function Ma(n,e){try{let t=gr(n),r=gr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(qr(n[i]))return NaN;if(qr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}yr.exports=Ma});var ze=a((Jm,br)=>{var ja=f(),Ia=b();function Ua(n){try{return ja(n)?Math.sqrt(n):NaN}catch{return NaN}}br.exports=Ia(Ua)});var ke=a((Fm,Nr)=>{var Va=ze(),Ya=Ce();function Ca(n){try{return Va(Ya(n))}catch{return NaN}}Nr.exports=Ca});var vr=a((Wm,xr)=>{var _a=wt(),wr=ke();function za(n,e){try{return _a(n,e)/(wr(n)*wr(e))}catch{return NaN}}xr.exports=za});var Sr=a((Lm,Tr)=>{var ka=f(),Pa=b();function $a(n){try{return ka(n)?Math.cos(n):NaN}catch{return NaN}}Tr.exports=Pa($a)});var H=a((Rm,Ar)=>{var Or=h(),Ba=m(),Ja=p(),Fa=w();function Wa(n){Or(!Ba(n),"You must pass an array into the `set` function!"),Or(Ja(n),"You must pass an array into the `set` function!");let e=[],t={};return Fa(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Ar.exports=Wa});var Pe=a((Km,Ur)=>{var Er=h(),Mr=m(),jr=p(),Ir=w(),La=J(),Ra=H();function Ka(n,e){Er(!Mr(n),"You must pass an array and some items to count into the `count` function!"),Er(jr(n),"You must pass an array and some items to count into the `count` function!");let t=Ir(n);return e=Mr(e)?Ra(n):e,jr(e)?Ir(e).map(function(r){let s=t.filter(o=>La(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Ur.exports=Ka});var oe=a((Qm,zr)=>{var be=h(),Vr=p(),Yr=f(),Qa=x(),Cr=w(),Xa=n=>n.reduce((e,t)=>e*t);function _r(n,e){if(be(Vr(n),"The first argument passed into the `reshape` function must be an array!"),Yr(e)&&(e=[e]),be(Vr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),be(Qa(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{be(Yr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Cr(n);let t=Cr(n);be(Xa(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(_r(i,e.slice(1)))}return r}zr.exports=_r});var D=a((Zm,Lr)=>{var Xm=C(),Gm=_(),$r=m(),Ga=h(),Br=f(),Jr=F(),Za=oe(),Fr=Math.pow(2,64),N=[];Wr(parseInt(Math.random()*Fr));function Ha(n,e){n=T(n);function t(){n+=T("0x9e3779b97f4a7c15");let s=Jr(n);return s=(s^s>>30n)*T("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*T("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function T(n){return BigInt.asUintN(64,BigInt(n))}function kr(n,e){return n=T(n),e=BigInt(e),T(T(n<<e)|T(n>>T(64n-e)))}function Wr(n){if($r(n))return Jr(N);{Ga(Br(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Ha(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function Pr(){let n=T(kr(N[0]+N[3],23)+N[0]),e=T(N[1]<<17n);return N[2]=T(N[2]^N[0]),N[3]=T(N[3]^N[1]),N[1]=T(N[1]^N[2]),N[0]=T(N[0]^N[3]),N[2]=T(N[2]^e),N[3]=kr(N[3],45),parseInt(n)/Fr}function Da(n){if($r(n))return Pr();Br(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Pr());return Za(e,n)}Lr.exports={random:Da,seed:Wr}});var Ne=a((Hm,Kr)=>{var Rr=h(),ec=p(),tc=m(),nc=f(),rc=x();function sc(n){return Rr(ec(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Rr(rc(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!tc(e)&&nc(e))}Kr.exports=sc});var ee=a((Dm,Qr)=>{function oc(n){return typeof n=="boolean"}Qr.exports=oc});var E=a((ep,Xr)=>{function ic(n){return typeof n=="string"}Xr.exports=ic});var z=a((tp,Gr)=>{var xt=h(),vt=m(),Tt=f(),uc=pe();function ac(n,e,t=1){xt(!vt(n)&&!vt(e)&&!vt(t),"You must pass two numbers and optionally a step value to the `range` function!"),xt(Tt(n)&&Tt(e)&&Tt(t),"You must pass two numbers and optionally a step value to the `range` function!"),xt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=uc(s)),s}Gr.exports=ac});var te=a((np,Hr)=>{var St=h(),Zr=m(),cc=p(),lc=U();function fc(n,e){return n<e?-1:n>e?1:0}function hc(n,e){Zr(e)&&(e=fc),St(!Zr(n),"You must pass an array into the `sort` function!"),St(cc(n),"You must pass an array into the `sort` function!"),St(lc(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Hr.exports=hc});var W=a((op,rs)=>{var y=h(),$e=p(),ne=m(),ie=x(),Be=B(),we=z(),At=f(),xe=E(),rp=_(),mc=U(),pc=C(),Ot=F(),dc=H(),Dr=pe(),es=te(),ts=ee(),sp=Je();function gc(n){return At(n)&&parseInt(n)===n}function qc(n){return gc(n)&&n>=0}function ns(n,e){y(At(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var k=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y($e(r),"The new values must be a 1-dimensional array!");let s=ie(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(we(t._index.length,s[0]).map(o=>"row"+ns(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y($e(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ie(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ie(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ie(this.values)}isEmpty(){return this.values.filter(t=>!ne(t)).length===0}clear(){let e=this,t=e.copy();return t.values=pc(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||At(e))&&(e=[e]);let r=dc((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),ne(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;ne(e)&&(e=t.index),y($e(e),"The `indices` array must be a 1-dimensional array of strings."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(xe(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new k(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;ne(e)&&(e=we(0,r[0])),y($e(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(qc(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new k(Dr(e.values));return t.index=Dr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=we(0,e.shape[0]).map(r=>"row"+ns(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new k(Ot(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(mc(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>ne(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(we(0,r/2).concat(we(t.index.length-r/2,t.index.length)));let o=Ot(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(ts(e)||xe(e)||ne(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;ne(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),ts(e)&&(t=e);let r=this,s=Be([r.values,r.index]);s=Be(es(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new k(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=Be([e.values,e.index]);t=Be(es(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new k(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=Ot(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new k,r.name=t.name,r):(r.values=i,r.index=s,r)}};rs.exports=k});var Et=a((ip,ss)=>{var yc=h(),bc=f();function Nc(n,e){yc(bc(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}ss.exports=Nc});var ve=a((up,os)=>{var wc=p(),xc=m();function vc(n){return typeof n=="object"&&!xc(n)&&!wc(n)}os.exports=vc});var Mt=a((ap,is)=>{var Tc=E(),Sc=ve(),Oc=ee(),Ac=m(),Ec=se();function Mc(n,e){e=(()=>{if(Ac(e))return!0;if(Oc(e))return e;throw new Ec("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>Tc(u)?JSON.stringify(u):Sc(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}is.exports=Mc});var as=a((cp,us)=>{var jc=Mt();function Ic(n,e,t){let r=jc(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ft("fs"),o=ft("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}us.exports=Ic});var jt=a((hp,fs)=>{var L=p(),cs=ee(),lp=ve(),fp=Et(),Uc=Y(),ls=z(),Fe=E(),We=se(),Le=m(),R=h();function Vc(n,e,t,r,s,o){return t=(()=>{if(Le(t))return!1;if(cs(t))return t;throw new We("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Le(r))return!1;if(cs(r))return r;throw new We("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Le(s))return",";if(Fe(s))return R(s.length===1,u),s;if(L(s))return R(s.length===2,u),R(s[0].length===1,u),R(s[1].length===1,u),s;throw new We(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Le(o))return'"';if(Fe(o))return R(o.length===1,u),o;if(L(o))return R(o.length===2,u),R(o[0].length===1,u),R(o[1].length===1,u),o;throw new We(u)})(),(()=>{let l=e.split(`
`).filter(S=>S.length>0).map(S=>{let O=[],re="",he=!1;for(let $=0;$<S.length;$++){let A=S[$];if(A.match(/\\/g))$++;else if(L(o)&&A===o[0])he=!0;else if(L(o)&&A===o[1])he=!1;else if(Fe(o)&&A===o)he=!he;else if(L(s)&&A===s[0]||L(s)&&A===s[1]||Fe(s)&&A===s)if(he)re+=A;else{let ct=re;try{let lt=JSON.parse(ct);L(lt)?O.push(ct.trim()):O.push(lt)}catch{O.push(ct.trim())}re=""}else re+=A}if(re.length>0){let $=re;try{let A=JSON.parse($);L(A)?O.push($.trim()):O.push(A)}catch{O.push($.trim())}}return O}),c=(()=>{let S=t?l.shift():ls(0,l[0].length).map(O=>"col"+O);return r&&S.shift(),S})(),g=(()=>r?l.map(O=>O.shift()):ls(0,l.length).map(O=>"row"+O))(),q=Uc(l.map(S=>S.length)),I=new n(l.map(S=>(S.length=q,S)));return t&&(I.columns=c),r&&(I.index=g),I})()}fs.exports=Vc});var ms=a((mp,hs)=>{var Yc=h(),Cc=jt(),_c=E(),zc=m(),kc=se();async function Pc(n,e,t,r,s,o,i){t=(()=>zc(t)?"utf8":(Yc(_c(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ft("fs").readFileSync(e,t)}catch{}throw new kc(`The path "${e}" could not be loaded!`)})();return Cc(n,u,r,s,o,i)}hs.exports=Pc});var Re=a((pp,ps)=>{var $c=f(),Bc=b();function Jc(n){try{return $c(n)?Math.floor(n):NaN}catch{return NaN}}ps.exports=Bc(Jc)});var It=a((gp,gs)=>{var ds=h(),Fc=m(),Wc=p(),dp=Re(),{random:Lc}=D();function Rc(n){ds(!Fc(n),"You must pass an array into the `shuffle` function!"),ds(Wc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Lc()*t.length);e.push(t.splice(s,1)[0])}return e}gs.exports=Rc});var bs=a((qp,ys)=>{var Kc=m(),Qc=h(),qs=It();function Xc(n,e){return Kc(e)&&(e=0),Qc(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?qs(n.index):null,e===1?qs(n.columns):null)}ys.exports=Xc});var vs=a((yp,xs)=>{var Ns=h(),Gc=U(),Zc=m(),Ke=W(),Te=w();function ws(n){let e={};return Te(n).forEach((t,r)=>{e[t]=r}),e}function ue(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function Hc(n,e,t,r){Ns(Gc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),Zc(r)&&(r=0),Ns(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=ws(s.index),i=ws(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.index[c],g.index=e.columns;let q=t(g,c,e);return q||delete o[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Ke(Te(u));return l.name=ue(o)[0],l.index=ue(i),l}s.values=u,s.index=ue(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let g=new Ke(l);g.name=e.columns[c],g.index=e.index;let q=t(g,c,e);return q||delete i[s.index[c]],q});if(Te(u).length===0)return new n;if(u.length===1){let l=new Ke(Te(u));return l.name=ue(i)[0],l.index=ue(o),l}s.values=u,s.index=ue(i),s=s.transpose()}return s}xs.exports=Hc});var Es=a((bp,As)=>{var{random:Dc}=D(),Ts=m(),Ut=f(),ae=E(),Vt=ee(),Ss=p(),M=h(),Os=x(),el=z(),tl=te(),nl=w();function rl(n,e,t){let r=n.copy(),s=Dc().toString();return r=r.assign(s,r.index),Ts(e)&&(e=[s],t=[!0]),(Ut(e)||ae(e))&&(e=[e],(Vt(t)||ae(t))&&(t=[t])),M(Ss(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),M(Os(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),Ts(t)&&(t=el(0,e.length).map(o=>!0)),M(Ss(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(Os(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(M(ae(o)||Ut(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ae(o)){let i=r.columns.indexOf(o);return M(i>-1,`The column "${o}" does not exist!`),i}if(Ut(o))return M(parseInt(o)===o,"Column indices must be whole numbers!"),M(o>=0,`The column index ${o} is out of bounds!`),M(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(M(ae(o)||Vt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ae(o)){let i=o.trim().toLowerCase();return M(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(Vt(o))return o}),r.values=tl(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=nl(r.get(null,s).values),r=r.dropColumns(s),r}As.exports=rl});var js=a((Np,Ms)=>{var sl=E(),ol=J(),Se=z(),Qe=W();function il(n,e){function t(q,I){return sl(q)&&q.length>I?q.substring(0,I-3)+"...":q}if(ol(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Se(0,s).concat(Se(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Se(0,i).concat(Se(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Qe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Qe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Qe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Se(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let g=28;return c instanceof Qe?(c.values=c.values.map(q=>t(q,g)),c.name=t(c.name,g),c.index=c.index.map(q=>t(q,g))):(c.values=c.values.map(q=>q.map(I=>t(I,g))),c.columns=c.columns.map(q=>t(q,g)),c.index=c.index.map(q=>t(q,g))),console.table(c.toObject()),e}Ms.exports=il});var Us=a((wp,Is)=>{function ul(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}Is.exports=ul});var Oe=a((xp,Vs)=>{var al=W();function cl(n){return n instanceof al}Vs.exports=cl});var $s=a((vp,Ps)=>{var Ys=m(),Cs=E(),_s=f(),Xe=h(),zs=p(),ks=x(),ll=Oe();function fl(n,e,t,r){Ys(t)&&(t=[]),Ys(r)&&(r=[]),(Cs(t)||_s(t))&&(t=[t]),(Cs(r)||_s(r))&&(r=[r]),Xe(zs(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(zs(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(ks(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Xe(ks(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if(ll(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}Ps.exports=fl});var Ge=a((Tp,Bs)=>{var hl=f();function ml(n){return hl(n)&&parseInt(n)===n}function pl(n){return ml(n)&&n>=0}Bs.exports=pl});var Fs=a((Sp,Js)=>{var Yt=h(),dl=Ge(),gl=Ne();function ql(n,e,t,r,s){t=t||0,Yt(t===0||t===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,Yt(dl(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",Yt(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(l){let c=gl(l);return s>0?l.length-c.length<s:r==="any"?c.length===l.length:r==="all"?c.length>0:!0}let i=e.copy(),u=Math.random().toString();if(t===0){let l=i.index.filter(c=>{let g=i.get(c,null).values;return o(g)});return l.length>0?i.get(l,null):new n}else if(t===1){let l=i.columns.filter(c=>{let g=i.get(null,c).values;return o(g)});return l.length>0?i.get(null,l):new n}return i}Js.exports=ql});var Qs=a((Op,Ks)=>{var Ct=h(),yl=Ge(),Ae=m(),Ws=E(),Ls=Oe(),Rs=x();function bl(n,e,t,r,s){t=t||0,Ct(t===0||t===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),s=s||0,Ct(yl(s),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),r=s>0?"none":r||"any",Ct(r==="any"||r==="all"||r==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function o(l){if(s>0){let c=0;for(let g=0;g<l.length;g++){let q=l[g];if(Ae(q)&&c++,c>=s)return[]}}else if(r==="any")for(let c=0;c<l.length;c++){let g=l[c];if(Ae(g))return[]}else if(r==="all"){for(let c=0;c<l.length;c++){let g=l[c];if(!Ae(g))return l}return[]}return l}let i=e.copy(),u=Math.random().toString();if(t===0){i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Rs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Ae(c))return new n;Ws(c)&&(c=[c]),Ls(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(t===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Rs(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Ae(c))return new n;Ws(c)&&(c=[c]),Ls(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}Ks.exports=bl});var Ds=a((Ap,Hs)=>{var Nl=U(),Xs=h(),Gs=B(),Ze=W(),Zs=x(),ce=F();function wl(n,e,t,r){if(r=r||0,Xs(Nl(t),"The first parameter to the `apply` method must be a function."),Xs(r===0||r===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),r===0){let o=Gs(e.values).map((i,u)=>{let l=new Ze(i);return l.name=e.columns[u],l.index=e.index,t(l,u,e)});if(Zs(o).length===1){let i=new Ze(o);return i.index=ce(e.columns),i}else{let i=new n(Gs(o));return i.index=ce(e.index),i.columns=ce(e.columns),i}}else if(r===1){let s=e.values.map((o,i)=>{let u=new Ze(o);return u.name=e.index[i],u.index=e.columns,t(u,i,e)});if(Zs(s).length===1){let o=new Ze(s);return o.index=ce(e.index),o}else{let o=new n(s);return o.index=ce(e.index),o.columns=ce(e.columns),o}}}Hs.exports=wl});var to=a((Ep,eo)=>{var xl=m(),K=h(),vl=E(),_t=Oe(),Ee=p(),zt=x(),Tl=ve(),Sl=J(),Ol=B();function Al(n,e,t){let r,s;if(xl(t)?(s=e,K(!Ee(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,K(vl(r),"When using two parameters for the `assign` method, the first parameter must be a string."),K(_t(s)||Ee(s)&&zt(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),K(Tl(s)||_t(s)||Ee(s)&&zt(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method."),_t(s)){let o={};return K(n.isEmpty()||Sl(s.index,n.index),"The index of the new data does not match the index of the DataFrame."),o[r||s.name]=s.values,n.assign(o)}else if(Ee(s)){let o={};return o[r||"data"]=s,n.assign(o)}else{let o=n.copy(),i=o.shape;return Object.keys(s).forEach(u=>{let l=s[u];if(K(Ee(l),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),K(zt(l).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),o.isEmpty())o.values=Ol([l]),o.columns=[u],i=o.shape;else{K(l.length===i[0],`Column "${u}" in the new data is not the same length as the other columns in the original DataFrame.`);let c=o.columns.indexOf(u);c<0&&(o.columns.push(u),c=o.columns.indexOf(u)),o.values.forEach((g,q)=>{g[c]=l[q]})}}),o}}eo.exports=Al});var ro=a((Mp,no)=>{var El=F();function Ml(n,e){if(e.isEmpty())return new n;let t=new n(El(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}no.exports=Ml});var Je=a((Bp,lo)=>{var{random:jp}=D(),Ip=_(),d=h(),Up=F(),so=Pe(),Vp=Ne(),kt=w(),Q=p(),Yp=ee(),Cp=J(),_p=U(),oo=f(),He=E(),X=m(),zp=Y(),kp=Ye(),jl=C(),le=z(),io=W(),uo=H(),V=x(),Pp=te(),ao=B(),De=Et(),Il=as(),Ul=Mt(),Vl=ms(),Yl=jt(),Cl=bs(),_l=vs(),zl=Es(),kl=js(),Pl=Us(),$l=$s(),$p=Oe(),Bl=Fs(),co=Ge(),Jl=Qs(),Fl=Ds(),Wl=to(),Ll=ro();function et(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}var v=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){d(Q(r),"The new values must be a 2-dimensional array!");let s=V(r);d(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(le(t._index.length,s[0]).map(o=>"row"+De(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(le(t._columns.length,s[1]).map(o=>"col"+De(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){d(Q(r),"The new columns list must be a 1-dimensional array of strings!"),d(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),d(V(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+et(8):o.trim()));let s=(()=>{let o=so(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+et(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){d(Q(r),"The new index must be a 1-dimensional array of strings!"),d(r.length===t.shape[0],"The new index must be the same length as the old index!"),d(V(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+et(8):o.trim()));let s=(()=>{let o=so(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+et(8):o),t._index=r}}),d(X(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(Q(e)){let r=V(e);d(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=ao(r);let s=V(t.values);t._index=le(0,s[0]).map(o=>"row"+De(o,(s[0]-1).toString().length))}}get shape(){return V(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return uo(this.values).filter(t=>!X(t)).length===0}clear(){let e=this,t=new v(jl(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(He(e)||oo(e))&&(e=[e]),(He(t)||oo(t))&&(t=[t]);let s=uo((e||[]).concat(t||[]).map(o=>typeof o));return d(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&d(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(d(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),d(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),X(e)||(e=e.map(o=>{if(typeof o=="string")return d(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return d(o>=0,`Index ${o} is out of bounds!`),d(parseInt(o)===o,"Row numbers must be integers!"),d(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),X(t)||(t=t.map(o=>{if(typeof o=="string")return d(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return d(o>=0,`Column ${o} is out of bounds!`),d(parseInt(o)===o,"Column numbers must be integers!"),d(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;X(e)&&(e=r.index),X(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),d(Q(e)&&Q(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(V(e).length===1&&V(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(e.length>0,"The `rows` array must contain at least one row name."),d(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{d(He(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{d(He(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return kt(s)[0];if(e.length===1){let i=new io(kt(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new io(kt(s));return i.name=t[0],i.index=e,i}let o=new v(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;X(e)&&(e=le(0,s[0])),X(t)&&(t=le(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),d(Q(e)&&Q(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(V(e).length===1&&V(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(e.length>0,"The `rowIndices` array must contain at least one index."),d(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{d(co(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{d(co(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new v(ao(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=le(0,e.shape[0]).map(r=>"row"+De(r,(t.index.length-1).toString().length)),t}copy(){return Ll(v,this)}assign(e,t){return Wl(this,e,t)}apply(e,t){return Fl(v,this,e,t)}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){return Jl(v,this,e,t,r)}dropNaN(e,t,r){return Bl(v,this,e,t,r)}drop(e,t){return $l(v,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return Pl(this)}toCSVString(e){return Ul(this,e)}toCSV(e,t){return Il(this,e,t)}print(){return kl(v,this)}sort(e,t){return zl(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return _l(v,this,e,t)}shuffle(e){return Cl(this,e)}};v.fromCSV=function(){return Vl(v,...arguments)};v.fromCSVString=function(){return Yl(v,...arguments)};lo.exports=v});var go=a((Jp,po)=>{var fo=h(),ho=p(),mo=w();function Rl(n,e){fo(ho(n),"You must pass two arrays into the `diff` function!"),fo(ho(e),"You must pass two arrays into the `diff` function!");let t=mo(n),r=mo(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}po.exports=Rl});var tt=a((Fp,yo)=>{var qo=f(),Kl=b();function Ql(n,e){try{return qo(n)?qo(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}yo.exports=Kl(Ql)});var nt=a((Wp,bo)=>{var Xl=me(),Gl=w();function Zl(n){try{return Xl(...Gl(n))}catch{return NaN}}bo.exports=Zl});var Pt=a((Lp,No)=>{var Hl=f(),Dl=b();function ef(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Hl(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}No.exports=Dl(ef)});var fe=a((Rp,wo)=>{var tf=Pt();function nf(n,e){return tf(n,e)}wo.exports=nf});var $t=a((Kp,xo)=>{var rf=me(),sf=fe();function of(n,e){return rf(n,sf(e,-1))}xo.exports=of});var To=a((Qp,vo)=>{var uf=tt(),af=nt(),cf=ze(),lf=$t();function ff(n,e){try{return cf(af(uf(lf(n,e),2)))}catch{return NaN}}vo.exports=ff});var Oo=a((Xp,So)=>{var hf=fe(),mf=tt();function pf(n,e){return hf(n,mf(e,-1))}So.exports=pf});var Bt=a((Zp,Uo)=>{var Me=h(),Ao=m(),Eo=p(),df=f(),Gp=J(),Mo=w(),jo=x(),gf=nt(),qf=fe(),Io=B();function rt(n,e){Me(!Ao(n)&&!Ao(e),"You must pass two arrays of numbers into the `dot` function!"),Me(Eo(n)&&Eo(e),"You must pass two arrays of numbers into the `dot` function!"),Mo(n).concat(Mo(e)).forEach(s=>{Me(df(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=jo(n),r=jo(e);if(Me(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Me(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return gf(qf(n,e));if(t.length===1&&r.length===2)return Io(e).map(s=>rt(n,s));if(t.length===2&&r.length===1)return n.map(s=>rt(s,e));if(t.length===2&&r.length===2){let s=Io(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(rt(n[i],s[l]));o.push(u)}return o}}Uo.exports=rt});var Co=a((Hp,Yo)=>{var Vo=h(),yf=p(),bf=m(),Nf=x();function wf(n){return Vo(yf(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Vo(Nf(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!bf(e))}Yo.exports=wf});var Bo=a((Dp,$o)=>{var _o=h(),zo=m(),ko=p(),xf=Y(),Po=x();function vf(n,e){_o(ko(n)&&ko(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),_o(Po(n).length===1&&Po(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<xf([n.length,e.length]);s++)!zo(n[s])&&!zo(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}$o.exports=vf});var Qo=a((ed,Ko)=>{var Jo=h(),Fo=m(),Wo=p(),Lo=f(),Tf=Y(),Ro=x();function Sf(n,e){Jo(Wo(n)&&Wo(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Jo(Ro(n).length===1&&Ro(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Tf([n.length,e.length]);s++)!Fo(n[s])&&Lo(n[s])&&!Fo(e[s])&&Lo(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Ko.exports=Sf});var Go=a((td,Xo)=>{var Of=b(),Af=f();function Ef(n){try{return Af(n)?Math.exp(n):NaN}catch{return NaN}}Xo.exports=Of(Ef)});var Do=a((nd,Ho)=>{var Mf=b();function Zo(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*Zo(n-1)}catch{return NaN}}Ho.exports=Mf(Zo)});var ti=a((rd,ei)=>{var jf=f(),If=b();function Uf(n){try{let e=JSON.parse(n);return jf(e)?e:NaN}catch{return NaN}}ei.exports=If(Uf)});var Jt=a((sd,ni)=>{var Vf=f(),Yf=b();function Cf(n){try{let e=JSON.parse(n);return Vf(e)?parseInt(e):NaN}catch{return NaN}}ni.exports=Yf(Cf)});var oi=a((od,si)=>{var G=h(),_f=m(),Ft=p(),Wt=f(),ri=x(),zf=Jt();function Lt(n,e){return G(!_f(n),"You must pass an array and an index into the `getValueAt` function!"),G(Ft(n),"You must pass an array and an index into the `getValueAt` function!"),G(Wt(e)||Ft(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Ft(e)&&(G(ri(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{G(Wt(t)&&zf(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),G(e.length<=ri(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Wt(e)?(G(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(G(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Lt(n[e[0]],e.slice(1))):Lt(n,e[0])}si.exports=Lt});var Rt=a((ad,ii)=>{var id=C(),ud=_(),kf=f(),Pf=oe();function $f(n){kf(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Pf(e,n)}ii.exports=$f});var ai=a((cd,ui)=>{var st=h(),Bf=m(),Jf=f(),Ff=Rt();function Wf(n){st(!Bf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(Jf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Ff([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}ui.exports=Wf});var Kt=a((fd,ci)=>{var ld=h(),Lf=H();function Rf(){return Lf([...arguments])}ci.exports=Rf});var fi=a((hd,li)=>{var Kf=p(),Qf=w(),Xf=Kt();function Gf(){let n=Object.values(arguments).map(r=>Kf(r)?Qf(r):[r]),e=[];return Xf(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}li.exports=Gf});var Xt=a((pd,pi)=>{var je=h(),ot=m(),hi=f(),Qt=p(),Zf=z(),Hf=w(),md=x(),Df=Re();function mi(n,e){if(je(!ot(n),"You must pass an array into the `slice` function!"),je(Qt(n),"You must pass an array into the `slice` function!"),ot(e))return n.slice();je(Qt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),Hf(e).forEach(s=>{je(ot(s)||hi(s)&&Df(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];ot(t)&&(t=Zf(0,n.length)),hi(t)&&(t=[t]);let r=[];return t.forEach(s=>{je(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Qt(o)?r.push(mi(n[s],e.slice(1,e.length))):r.push(n[s])}),r}pi.exports=mi});var yi=a((dd,qi)=>{var P=h(),eh=m(),th=p(),Gt=f(),nh=w(),rh=x(),it=Xt(),sh=Bt(),di=me(),gi=fe(),Zt=qt(),Z=z();function Ht(n){P(!eh(n),"You must pass a square 2D array into the `inverse` function!"),P(th(n),"You must pass a square 2D array into the `inverse` function!"),nh(n).forEach(t=>P(Gt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=rh(n);if(P(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),P(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),P(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return P(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;P(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return gi(u,1/i)}else if(e[0]>1){let t=(r,s)=>Gt(r)||Gt(s)?gi(r,s):sh(r,s);for(let r=1;r<e[0]-1;r++)try{let s=it(n,[Z(0,r),Z(0,r)]),o=it(n,[Z(0,r),Z(r,e[0])]),i=it(n,[Z(r,e[0]),Z(0,r)]),u=it(n,[Z(r,e[0]),Z(r,e[0])]),l=Ht(s),c=Ht(di(u,t(-1,t(t(i,l),o)))),g=di(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),I=t(-1,t(t(c,i),l)),S=c;return Zt(Zt(g,q,1),Zt(I,S,1),0)}catch{}P(!1,"This matrix cannot be inverted!")}}qi.exports=Ht});var Ni=a((gd,bi)=>{var oh=b(),Dt=f();function ih(n,e,t){try{return Dt(n)?Dt(e)?Dt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}bi.exports=oh(ih)});var vi=a((qd,xi)=>{var wi=f(),uh=m(),ah=b();function ch(n,e){try{return e=uh(e)?Math.E:e,wi(n)?wi(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}xi.exports=ah(ch)});var Si=a((yd,Ti)=>{var Ie=f(),lh=b();function fh(n,e,t,r,s){try{return Ie(n)?Ie(e)?Ie(t)?Ie(r)?Ie(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Ti.exports=lh(fh)});var Ai=a((vd,Oi)=>{var bd=h(),Nd=m(),wd=p(),xd=f(),hh=w(),mh=te(),ph=Ne();function dh(n){try{let e=hh(n),t=ph(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=mh(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Oi.exports=dh});var ji=a((Td,Mi)=>{var gh=w(),qh=Pe(),yh=H(),Ei=te();function bh(n){try{if(n.length===0)return NaN;let e=gh(n);if(e.length===0)return NaN;let t={},r=yh(e);r.forEach(u=>{t[u]=qh(e,u)});let s=Ei(r,(u,l)=>t[l]-t[u]),o=s[0],i=Ei(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Mi.exports=bh});var Yi=a((Ad,Vi)=>{var Nh=m(),Sd=C(),Od=_(),{random:Ii}=D(),wh=oe(),xh=f();function Ui(){let n=Ii(),e=Ii();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function vh(n){if(Nh(n))return Ui();xh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Ui());return wh(e,n)}Vi.exports=vh});var _i=a((jd,Ci)=>{var Ed=C(),Md=_(),Th=oe(),Sh=f();function Oh(n){Sh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Th(e,n)}Ci.exports=Oh});var Pi=a((Id,ki)=>{var zi=p(),Ah=f(),ut=h(),Eh=m();function en(n,e){if(ut(zi(n),"The `permute` function only works on arrays!"),Eh(e)&&(e=n.length),ut(Ah(e),"`r` must be a whole number!"),e>n.length)return en(n);if(e<=0)return[[]];if(ut(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{ut(!zi(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);en(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}ki.exports=en});var Fi=a((Ud,Ji)=>{var Mh=p(),jh=x(),$i=Je(),Bi=W();function Ih(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(Mh(e)){let t=jh(e);t.length===1?new Bi(e).print():t.length==2?new $i(e).print():console.log(e)}else e instanceof $i||e instanceof Bi?e.print():console.log(e)})}Ji.exports=Ih});var Li=a((Vd,Wi)=>{var Uh=f(),Vh=b();function Yh(n){try{return Uh(n)?Math.round(n):NaN}catch{return NaN}}Wi.exports=Vh(Yh)});var tn=a((Yd,Qi)=>{var Ri=h(),Ch=f(),Ki=p(),_h=F();function zh(n,e,t){Ri(Ki(n),"The first argument passed into the `setValueAt` function must be an array!"),Ch(e)&&(e=[e]),Ri(Ki(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=_h(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}Qi.exports=zh});var Gi=a((Cd,Xi)=>{var kh=f(),Ph=b();function $h(n){try{return kh(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Xi.exports=Ph($h)});var Hi=a((_d,Zi)=>{var Bh=f(),Jh=b();function Fh(n){try{return Bh(n)?Math.sin(n):NaN}catch{return NaN}}Zi.exports=Jh(Fh)});var eu=a((zd,Di)=>{var Wh=ke();function Lh(n){return Wh(n)}Di.exports=Lh});var nu=a((kd,tu)=>{var Rh=f(),Kh=b();function Qh(n){try{return Rh(n)?Math.tan(n):NaN}catch{return NaN}}tu.exports=Kh(Qh)});var at=a((Pd,su)=>{var ru=U();function Xh(n,e){assert(ru(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function Gh(n,e){assert(ru(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}su.exports={timeSync:Xh,timeAsync:Gh}});var uu=a(($d,iu)=>{var ou=h(),Zh=p(),Hh=U(),Dh=_(),em=qe(),tm=tn(),nm=w();function rm(n,e){ou(Zh(n),"The first argument passed into the `where` function must be an array!"),ou(Hh(e),"The second argument passed into the `where` function must be a function!");let t=nm(n).length,r=Dh(n,e),s=[],o=0,i=!1;for(;!i;){let u=em(r,!0);u?(s[o]=u,r=tm(r,u,null),o++):i=!0}return o===0?null:s}iu.exports=rm});var sm=a((Bd,nn)=>{var Ue={abs:pt(),add:me(),append:qt(),apply:_(),arccos:Cn(),arcsin:zn(),arctan:Pn(),argmax:Qn(),argmin:Zn(),assert:h(),ceil:Dn(),chop:nr(),clamp:sr(),cohensd:lr(),combine:pr(),copy:F(),correl:vr(),cos:Sr(),count:Pe(),covariance:wt(),DataFrame:Je(),diff:go(),distance:To(),divide:Oo(),dot:Bt(),dropMissing:Co(),dropMissingPairwise:Bo(),dropNaN:Ne(),dropNaNPairwise:Qo(),exp:Go(),factorial:Do(),flatten:w(),float:ti(),floor:Re(),getValueAt:oi(),identity:ai(),indexOf:qe(),int:Jt(),intersect:fi(),inverse:yi(),isArray:p(),isBoolean:ee(),isEqual:J(),isFunction:U(),isNumber:f(),isObject:ve(),isString:E(),isUndefined:m(),lerp:Ni(),log:vi(),map:Si(),MathError:se(),max:Y(),mean:ye(),median:Ai(),min:Ye(),mode:ji(),multiply:Pt(),ndarray:C(),normal:Yi(),ones:_i(),permute:Pi(),pow:tt(),print:Fi(),random:D().random,range:z(),reshape:oe(),reverse:pe(),round:Li(),scale:fe(),seed:D().seed,Series:W(),set:H(),setValueAt:tn(),shape:x(),shuffle:It(),sign:Gi(),sin:Hi(),slice:Xt(),sort:te(),sqrt:ze(),std:ke(),stdev:eu(),subtract:$t(),sum:nt(),tan:nu(),time:at().timeSync,timeSync:at().timeSync,timeAsync:at().timeAsync,transpose:B(),union:Kt(),variance:Ce(),vectorize:b(),where:uu(),zeros:Rt(),dump:function(){Object.keys(Ue).forEach(n=>{typeof global<"u"&&(global[n]=Ue[n]),typeof window<"u"&&(window[n]=Ue[n])})}};typeof nn<"u"&&(nn.exports=Ue);typeof window<"u"&&(window.JSMathTools=Ue)});sm();})();
