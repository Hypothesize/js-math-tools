(()=>{var ut=(t=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(t,{get:(e,n)=>(typeof require!="undefined"?require:e)[n]}):t)(function(t){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var a=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var B=a((gd,rn)=>{var nn=class extends Error{constructor(e){typeof window<"u"?super(e):super(`

\x1B[31m`+e+`
\x1B[0m`)}};rn.exports=nn});var f=a((qd,sn)=>{var la=B();sn.exports=function(t,e){if(!t)throw new la(e)}});var p=a((yd,on)=>{function ha(t){return t===null||typeof t>"u"}on.exports=ha});var d=a((bd,un)=>{function fa(t){return t instanceof Array}un.exports=fa});var T=a((Nd,hn)=>{var an=f(),ma=p(),cn=d();function ln(t){an(!ma(t),"You must pass one array into the `flatten` function!"),an(cn(t),"The `flatten` function only works on arrays!");let e=[];return t.forEach(function(n){cn(n)?e=e.concat(ln(n)):e.push(n)}),e}hn.exports=ln});var ee=a((wd,mn)=>{var xd=d();function fn(t,e){let n=typeof t;if(n!==typeof e)return!1;if(n==="undefined")return!0;if(n==="boolean"||n==="number"||n==="bigint"||n==="string"||n==="function")return t===e;if(n==="object"){if(t===null||e===null)return t===null&&e===null;{let s=Object.keys(t),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!fn(t[u],e[u]))return!1}return!0}}}mn.exports=fn});var z=a((vd,dn)=>{var pn=f(),pa=p(),da=d(),ga=T();function qa(t){pn(!pa(t),"You must pass an array into the `set` function!"),pn(da(t),"You must pass an array into the `set` function!");let e=[],n={};return ga(t).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);n[s]||e.push(r),n[s]=!0}),e}dn.exports=qa});var Ae=a((Td,Nn)=>{var gn=f(),qn=p(),yn=d(),bn=T(),ya=ee(),ba=z();function Na(t,e){gn(!qn(t),"You must pass an array and some items to count into the `count` function!"),gn(yn(t),"You must pass an array and some items to count into the `count` function!");let n=bn(t);return e=qn(e)?ba(t):e,yn(e)?bn(e).map(function(r){let s=n.filter(o=>ya(r,o)).length;return{item:r,count:s}}):n.filter(r=>r===e).length}Nn.exports=Na});var j=a((Od,xn)=>{var Sd=f(),xa=p(),wa=d();function at(t){if(typeof t=="object"){if(xa(t))return t;if(wa(t))return t.map(at);{let e={};return Object.keys(t).forEach(function(n){e[n]=at(t[n])}),e}}else return t}xn.exports=at});var m=a((Ad,wn)=>{function va(t){return typeof t=="number"&&!isNaN(t)}wn.exports=va});var F=a((Ed,vn)=>{var Ta=T(),Sa=m();function Oa(t){try{let e=Ta(t),n=-1/0;for(let r=0;r<e.length;r++){if(!Sa(e[r]))return NaN;e[r]>n&&(n=e[r])}return n===-1/0?NaN:n}catch{return NaN}}vn.exports=Oa});var N=a((Id,On)=>{var Ee=f(),Aa=p(),Tn=d(),Ea=F();function Sn(t){Ee(!Aa(t),"You must pass an array into the `shape` function!"),Ee(Tn(t),"You must pass an array into the `shape` function!");let e=[t.length],n=t.map(r=>Tn(r));if(n.indexOf(!0)>-1){Ee(n.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=t.map(o=>o.length),s=Ea(r);r.forEach(function(o){Ee(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(Sn(t[0]))}return e}On.exports=Sn});var P=a((Md,An)=>{function Ia(t){return typeof t=="function"}An.exports=Ia});var V=a((Ud,In)=>{var ct=f(),En=p(),Ma=d(),Ua=P();function ja(t,e){return t<e?-1:t>e?1:0}function Va(t,e){En(e)&&(e=ja),ct(!En(t),"You must pass an array into the `sort` function!"),ct(Ma(t),"You must pass an array into the `sort` function!"),ct(Ua(e),"The second parameter of the `sort` function must be a comparison function!");let n=t.slice();return n.sort(e),n}In.exports=Va});var Yn=a((jd,Vn)=>{var Ie=f(),Mn=j(),Ya=d(),Un=ee(),jn=B(),Ca=N(),Me=V();function lt(t,e,n,r){if(r instanceof e){Ie(Un(Me(n.columns),Me(r.index)),"The index of the incoming Series must match the columns of the target DataFrame!");let s=Mn(n.values);s.push(n.columns.map(u=>r.get(u)));let o=new t(s);o.columns=n.columns;let i=!0;return o.resetIndex(i)}else if(r instanceof t){Ie(Un(Me(n.columns),Me(r.columns)),"The columns of the incoming DataFrame must match the columns of the target DataFrame!");let s=Mn(n.values);r.values.forEach(u=>{s.push(n.columns.map(c=>{let h=r.columns.indexOf(c);return u[h]}))});let o=new t(s);o.columns=n.columns;let i=!0;return o.resetIndex(i)}else if(Ya(r)){let s=Ca(r);if(s.length===1){Ie(r.length===n.columns.length,"When passing a 1-dimensional array into the `append` method, the array must have the same length as the number of columns in the target DataFrame!");let o=new e(r);return o.index=n.columns,lt(t,e,n,o)}else if(s.length===2){Ie(s[1]===n.columns.length,"When passing a 2-dimensional array into the `append` method, each row of the array must have the same length as the number of columns in the target DataFrame!");let o=new t(r);return o.columns=n.columns,lt(t,e,n,o)}else throw new jn("When passing an array into the `append` method, the array must be 1- or 2-dimensional! If 1-dimensional, it must be as long as the number of columns in the target DataFrame. If 2-dimensional, each row must be as long as the number of columns in the target DataFrame.")}else throw new jn("Only Series, DataFrames, and 1- or 2-dimensional arrays can be passed into the `append` method!")}Vn.exports=lt});var Pn=a((Vd,zn)=>{var Cn=f(),ka=P(),kn=d(),Bn=p();function Ba(t,e,n,r,s){if(s=s||0,Cn(ka(r),"The first parameter to the `apply` method must be a function."),Cn(s===0||s===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),s===0){let o={},i;if(n.columns.forEach((u,c)=>{let h=new e(n.values.map(q=>q[c]));h.name=u,h.index=n.index;let l=r(h,c,n);l instanceof e?o[u]=l.values:o[u]=l,Bn(i)&&(i=l instanceof e||kn(l))}),i){let u=new t(o);return u.index=n.index,u}else{let u=new e(n.columns.map(c=>o[c]));return u.index=n.columns,u}}else if(s===1){let o,i=n.values.map((u,c)=>{let h=new e(u);h.name=n.index[c],h.index=n.columns;let l=r(h,c,n);return Bn(o)&&(o=l instanceof e||kn(l)),l instanceof e?l.values:l});if(o){let u=new t(i);return u.index=n.index,u.columns=n.columns,u}else{let u=new e(i);return u.index=n.index,u}}}zn.exports=Ba});var Ue=a((Yd,_n)=>{var za=d(),Pa=p();function _a(t){return typeof t=="object"&&!Pa(t)&&!za(t)}_n.exports=_a});var S=a((Cd,$n)=>{function $a(t){return typeof t=="string"}$n.exports=$a});var Gn=a((kd,Jn)=>{var J=f(),Wn=d(),Wa=Ue(),Fa=S(),Ja=p(),Fn=N(),Ga=j(),ht=B(),Ra=V();function La(t,e,n,r,s){let o=g=>g instanceof e,i=(()=>{let g={};if(Ja(s))if(o(r)){let y=n.index.map(b=>r.get(b));J(y.length===n.index.length,"Each column of values to be assigned must have the same length as the number of rows in the target DataFrame!"),g[r.name]=y}else if(Wa(r))Object.keys(r).forEach(y=>{let b=r[y];if(o(b)){let U=n.index.map(D=>b.get(D));J(U.length===n.index.length,"Each column of values to be assigned must have the same length as the number of rows in the target DataFrame!"),g[y]=U}else if(Wn(b))J(Fn(b).length===1,"When using a single argument for the `assign` method, the argument must be either (1) a Series, or (2) an object consisting of key-value pairs where each key is a string representing a column name and each value is a one-dimensional array or Series!"),J(b.length===n.index.length,"Each column of values to be assigned must have the same length as the number of rows in the target DataFrame!"),g[y]=b;else throw new ht("When using a single argument for the `assign` method, the argument must be either (1) a Series, or (2) an object consisting of key-value pairs where each key is a string representing a column name and each value is a one-dimensional array or Series!")});else throw new ht("When using a single argument for the `assign` method, the argument must be either (1) a Series, or (2) an object consisting of key-value pairs where each key is a string representing a column name and each value is a one-dimensional array or Series!");else if(J(Fa(r),"When using two arguments for the `assign` method, the first argument must be a string representing a column name, and the second argument must be a one-dimensional array or Series!"),o(s)){let y=n.index.map(b=>s.get(b));J(y.length===n.index.length,"The one-dimensional array or Series to be assigned must have the same length as the number of rows in the target DataFrame!"),g[r]=y}else if(Wn(s))J(Fn(s).length===1,"When using two arguments for the `assign` method, the first argument must be a string representing a column name, and the second argument must be a one-dimensional array or Series!"),J(s.length===n.index.length,"The one-dimensional array or Series to be assigned must have the same length as the number of rows in the target DataFrame!"),g[r]=s;else throw new ht("When using two arguments for the `assign` method, the first argument must be a string representing a column name, and the second argument must be a one-dimensional array or Series!");return g})(),u=n.columns,c=n.index,h=Ga(n.values),l=Ra(Object.keys(i));h.forEach((g,y)=>{l.forEach(b=>{g.push(i[b][y])})});let q=new t(h);return q.columns=u.concat(l),q.index=c,q}Jn.exports=La});var Ln=a((Bd,Rn)=>{var Ka=j();function Qa(t,e){if(e.isEmpty)return new t;let n=new t(Ka(e.values));return n.columns=e.columns.slice(),n.index=e.index.slice(),n}Rn.exports=Qa});var er=a((zd,Dn)=>{var je=f(),Kn=d(),Qn=m(),Xn=S(),Zn=p(),Hn=N();function Xa(t,e,n,r,s){Zn(r)&&(r=[]),Zn(s)&&(s=[]),(Xn(r)||Qn(r))&&(r=[r]),(Xn(s)||Qn(s))&&(s=[s]),je(Kn(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),je(Kn(s),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),je(Hn(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),je(Hn(s).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let o,i;n.index.forEach((c,h)=>{r.indexOf(c)<0&&r.indexOf(h)<0&&(o||(o=[]),o.push(c))}),n.columns.forEach((c,h)=>{s.indexOf(c)<0&&s.indexOf(h)<0&&(i||(i=[]),i.push(c))});let u=n.get(o,i);if(u instanceof e){let c=new t;c=c.assign(u),n.index.indexOf(u.name)>-1&&(c=c.transpose()),u=c}return u}Dn.exports=Xa});var le=a((Pd,tr)=>{var Za=m();function Ha(t){return Za(t)&&parseInt(t)===t}function Da(t){return Ha(t)&&t>=0}tr.exports=Da});var rr=a((_d,nr)=>{var ft=f(),ec=S(),Ve=p(),tc=le(),nc=N();function rc(t,e,n,r,s,o){r=r||0,ft(r===0||r===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),o=o||0,ft(tc(o),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),s=o>0?"none":s||"any",ft(s==="any"||s==="all"||s==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function i(h){if(o>0){let l=0;for(let q=0;q<h.length;q++){let g=h[q];if(Ve(g)&&l++,l>=o)return[]}}else if(s==="any")for(let l=0;l<h.length;l++){let q=h[l];if(Ve(q))return[]}else if(s==="all"){for(let l=0;l<h.length;l++){let q=h[l];if(!Ve(q))return h}return[]}return h}let u=n.copy(),c=Math.random().toString();if(r===0){u=u.assign(c,u.index);let h=u.values.map(i).filter(q=>q.length>0);if(nc(h).length<2)return new t;u.values=h;let l=u.get(null,c);if(Ve(l))return new t;ec(l)&&(l=[l]),l instanceof e&&(l=l.values),u.index=l,u=u.drop(null,c)}else if(r===1){let h={};if(u.columns.forEach((q,g)=>{let y=u.values.map(U=>U[g]),b=i(y);b.length>0&&(h[q]=b)}),Object.keys(h).length===0)return new t;let l=new t(h);return l.index=u.index,l}return u}nr.exports=rc});var Ye=a(($d,or)=>{var sr=f(),sc=d(),oc=p(),ic=m(),uc=N();function ac(t){return sr(sc(t),"The value passed into the `dropNaN` function must be a one-dimensional array!"),sr(uc(t).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),t.filter(e=>!oc(e)&&ic(e))}or.exports=ac});var ur=a((Wd,ir)=>{var mt=f(),cc=Ye(),lc=le();function hc(t,e,n,r,s){n=n||0,mt(n===0||n===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,mt(lc(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",mt(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(c){let h=cc(c);return s>0?c.length-h.length<s:r==="any"?h.length===c.length:r==="all"?h.length>0:!0}let i=e.copy(),u=Math.random().toString();if(n===0){let c=i.index.filter(h=>{let l=i.get(h,null).values;return o(l)});return c.length>0?i.get(c,null):new t}else if(n===1){let c=i.columns.filter(h=>{let l=i.get(null,h).values;return o(l)});return c.length>0?i.get(null,c):new t}return i}ir.exports=hc});var hr=a((Fd,lr)=>{var ar=f(),he=T(),fc=P(),mc=p();function cr(t){let e={};return he(t).forEach((n,r)=>{e[n]=r}),e}function re(t){return Object.keys(t).sort((e,n)=>t[e]-t[n])}function pc(t,e,n,r,s){ar(fc(r),"The `filter` method takes a single parameter: a function that is used to filter the values."),mc(s)&&(s=0),ar(s===0||s===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let o=n.copy();if(o.isEmpty)return o;let i=cr(o.index),u=cr(o.columns);if(s===0){let c=o.values.filter((h,l)=>{let q=new e(h);q.name=n.index[l],q.index=n.columns;let g=r(q,l,n);return g||delete i[o.index[l]],g});if(he(c).length===0)return new t;if(c.length===1){let h=new e(he(c));return h.name=re(i)[0],h.index=re(u),h}o.values=c,o.index=re(i)}else if(s===1){o=o.transpose();let c=o.values.filter((h,l)=>{let q=new e(h);q.name=n.columns[l],q.index=n.index;let g=r(q,l,n);return g||delete u[o.index[l]],g});if(he(c).length===0)return new t;if(c.length===1){let h=new e(he(c));return h.name=re(u)[0],h.index=re(i),h}o.values=c,o.index=re(u),o=o.transpose()}return o}lr.exports=pc});var se=a((Jd,fr)=>{function dc(t){return typeof t=="boolean"}fr.exports=dc});var fe=a((Gd,pr)=>{var mr=f(),gc=p(),qc=d();function yc(t){mr(!gc(t),"You must pass an array into the `reverse` function!"),mr(qc(t),"You must pass an array into the `reverse` function!");let e=[];for(let n=t.length-1;n>=0;n--)e.push(t[n]);return e}pr.exports=yc});var E=a((Rd,dr)=>{var pt=f(),dt=p(),gt=m(),bc=fe();function Nc(t,e,n=1){pt(!dt(t)&&!dt(e)&&!dt(n),"You must pass two numbers and optionally a step value to the `range` function!"),pt(gt(t)&&gt(e)&&gt(n),"You must pass two numbers and optionally a step value to the `range` function!"),pt(n>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(t>e){r=!0;let o=t;t=e+n,e=o+n}let s=[];for(let o=t;o<e;o+=n)s.push(o);return r&&(s=bc(s)),s}dr.exports=Nc});var qt=a((Ld,yr)=>{var G=f(),R=d(),gr=se(),Ce=S(),ke=p(),Be=B(),xc=F(),qr=E();function wc(t,e,n,r,s,o){return n=(()=>{if(ke(n))return!1;if(gr(n))return n;throw new Be("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(ke(r))return!1;if(gr(r))return r;throw new Be("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(ke(s))return",";if(Ce(s))return G(s.length===1,u),s;if(R(s))return G(s.length===2,u),G(s[0].length===1,u),G(s[1].length===1,u),s;throw new Be(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(ke(o))return'"';if(Ce(o))return G(o.length===1,u),o;if(R(o))return G(o.length===2,u),G(o[0].length===1,u),G(o[1].length===1,u),o;throw new Be(u)})(),(()=>{let c=e.split(`
`).filter(y=>y.length>0).map(y=>{let b=[],U="",D=!1;for(let W=0;W<y.length;W++){let A=y[W];if(A.match(/\\/g))W++;else if(R(o)&&A===o[0])D=!0;else if(R(o)&&A===o[1])D=!1;else if(Ce(o)&&A===o)D=!D;else if(R(s)&&A===s[0]||R(s)&&A===s[1]||Ce(s)&&A===s)if(D)U+=A;else{let ot=U;try{let it=JSON.parse(ot);R(it)?b.push(ot.trim()):b.push(it)}catch{b.push(ot.trim())}U=""}else U+=A}if(U.length>0){let W=U;try{let A=JSON.parse(W);R(A)?b.push(W.trim()):b.push(A)}catch{b.push(W.trim())}}return b}),h=(()=>{let y=n?c.shift():qr(0,c[0].length).map(b=>"col"+b);return r&&y.shift(),y})(),l=(()=>r?c.map(b=>b.shift()):qr(0,c.length).map(b=>"row"+b))(),q=xc(c.map(y=>y.length)),g=new t(c.map(y=>(y.length=q,y)));return n&&(g.columns=h),r&&(g.index=l),g})()}yr.exports=wc});var Nr=a((Kd,br)=>{var vc=f(),Tc=qt(),Sc=S(),Oc=p(),Ac=B();async function Ec(t,e,n,r,s,o,i){n=(()=>Oc(n)?"utf8":(vc(Sc(n),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),n))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ut("fs").readFileSync(e,n)}catch{}throw new Ac(`The path "${e}" could not be loaded!`)})();return Tc(t,u,r,s,o,i)}br.exports=Ec});var vr=a((Qd,wr)=>{var I=f(),ze=m(),Pe=S(),xr=p(),Ic=z();function Mc(t,e,n){(Pe(e)||ze(e))&&(e=[e]),(Pe(n)||ze(n))&&(n=[n]);let r=Ic((e||[]).concat(n||[]).map(s=>typeof s));return I(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&I(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(I(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),I(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),xr(e)||(e=e.map(s=>{if(Pe(s))return I(t.index.indexOf(s)>-1,`Row "${s}" does not exist!`),s;if(ze(s))return I(s>=0,`Index ${s} is out of bounds!`),I(parseInt(s)===s,"Row numbers must be integers!"),I(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),xr(n)||(n=n.map(s=>{if(Pe(s))return I(t.columns.indexOf(s)>-1,`Column "${s}" does not exist!`),s;if(ze(s))return I(s>=0,`Column ${s} is out of bounds!`),I(parseInt(s)===s,"Column numbers must be integers!"),I(s<t.columns.length,`Column ${s} is out of bounds!`),t.columns[s]})),t.getSubsetByNames(e,n)}wr.exports=Mc});var Ar=a((Xd,Or)=>{var Tr=f(),Sr=S(),Uc=p(),jc=z(),Vc=V();function Yc(t){let e=t.toLowerCase(),n="";for(let s=0;s<e.length;s++){let o=e[s];o.match(/[a-z0-9]/g)?n+=o:n+=" "}let r=n.split(" ").filter(s=>s.length>0);return r[0]+r.slice(1).map(s=>s[0].toUpperCase()+s.substring(1)).join("")}function Cc(t,e,n){Uc(n)?n=e.columns:Sr(n)&&(n=[n]);let r={};n.forEach(o=>{Tr(Sr(o),"You must pass either a string or a one-dimensional array of strings into the `getDummies` (AKA `oneHotEncode`) method!");let i=e.columns.indexOf(o);Tr(i>-1,`The given DataFrame does not have a column called "${o}"!`);let u=e.values.map(h=>h[i]),c=Vc(jc(u));u.forEach(h=>{c.forEach(l=>{let q=o+"_"+Yc(l.toString());r[q]||(r[q]=[]),h===l?r[q].push(1):r[q].push(0)})})});let s=new t(r);return s.index=e.index,s}Or.exports=Cc});var Cr=a((Zd,Yr)=>{var L=f(),Er=d(),Ir=m(),Mr=p(),Ur=le(),jr=E(),Vr=N();function kc(t,e,n){let r=t.shape;Mr(e)&&(e=jr(0,r[0])),Mr(n)&&(n=jr(0,r[1])),Ir(e)&&(e=[e]),Ir(n)&&(n=[n]),L(Er(e)&&Er(n),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),L(Vr(e).length===1&&Vr(n).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),L(e.length>0,"The `rowIndices` array must contain at least one index."),L(n.length>0,"The `colIndices` array must contain at least one index."),e.forEach(i=>{L(Ur(i),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),L(i<t.index.length,`The row index ${i} is out of bounds.`)}),n.forEach(i=>{L(Ur(i),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),L(i<t.columns.length,`The column index ${i} is out of bounds.`)});let s=e.map(i=>t.index[i]),o=n.map(i=>t.columns[i]);return t.getSubsetByNames(s,o)}Yr.exports=kc});var _r=a((Hd,Pr)=>{var K=f(),yt=T(),kr=d(),_e=S(),Br=p(),zr=N();function Bc(t,e,n,r,s){Br(r)&&(r=n.index),Br(s)&&(s=n.columns),_e(r)&&(r=[r]),_e(s)&&(s=[s]),K(kr(r)&&kr(s),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),K(zr(r).length===1&&zr(s).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),K(r.length>0,"The `rows` array must contain at least one row name."),K(s.length>0,"The `cols` array must contain at least one column name."),r.forEach(u=>{K(_e(u),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),K(n.index.indexOf(u)>-1,`The row name "${u}" does not exist in the list of rows.`)}),s.forEach(u=>{K(_e(u),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),K(n.columns.indexOf(u)>-1,`The column name "${u}" does not exist in the list of columns.`)});let o=r.map(u=>s.map(c=>n.values[n.index.indexOf(u)][n.columns.indexOf(c)]));if(r.length===1&&s.length===1)return yt(o)[0];if(r.length===1){let u=new e(yt(o));return u.name=r[0],u.index=s,u}if(s.length===1){let u=new e(yt(o));return u.name=s[0],u.index=r,u}let i=new t(o);return i.columns=s,i.index=r,i}Pr.exports=Bc});var me=a((Dd,$r)=>{var zc=f(),Pc=m();function _c(t,e){zc(Pc(t),"The `leftPad` function only works on numbers!");let n=t.toString();for(;n.length<e;)n="0"+n;return n}$r.exports=_c});var Lr=a((eg,Rr)=>{var $e=f(),Wr=j(),$c=d(),Fr=ee(),Jr=me(),Gr=B(),Wc=N(),We=V();function bt(t,e,n,r){if(r instanceof e){$e(Fr(We(r.index),We(n.index)),"The index of the incoming Series must match the index of the target DataFrame!");let s=Wr(n.values);n.index.forEach((i,u)=>{let c=r.get(i);s[u].push(c)});let o=new t(s);return o.columns=n.columns.concat([r.name]),o}else if(r instanceof t){$e(Fr(We(r.index),We(n.index)),"The index of the incoming DataFrame must match the index of the target DataFrame!");let s=Wr(n.values);n.index.forEach((i,u)=>{let c=r.values[r.index.indexOf(i)];s[u]=s[u].concat(c)});let o=new t(s);return o.columns=n.columns.concat(r.columns),o}else if($c(r)){let s=Wc(r);if(s.length===1){$e(r.length===n.values.length,"When passing a 1-dimensional array into the `join` method, the array must have the same length as the number of rows in the target DataFrame!");let o=new e(r);return o.index=n.index,o.name="col"+Jr(n.columns.length,n.columns.length.toString().length),bt(t,e,n,o)}else if(s.length===2){$e(r.length===n.values.length,"When passing a 2-dimensional array into the `join` method, each column of the array must have the same length as the number of rows in the target DataFrame!");let o=new t(r);return o.index=n.index,o.columns=o.columns.map((i,u)=>"col"+Jr(n.columns.length+u,n.columns.length.toString().length)),bt(t,e,n,o)}else throw new Gr("When passing an array into the `join` method, the array must be 1- or 2-dimensional! If 1-dimensional, it must be as long as the number of rows of the target DataFrame. If 2-dimensional, each column must be as long as the number of rows in the target DataFrame.")}else throw new Gr("Only Series, DataFrames, and 1- or 2-dimensional arrays can be passed into the `join` method!")}Rr.exports=bt});var Qr=a((tg,Kr)=>{var Fc=S(),pe=E();function Jc(t,e,n){function r(g,y){return Fc(g)&&g.length>y?g.substring(0,y-3)+"...":g}if(n.isEmpty)return console.table({}),console.log("Shape:",[0,0],`
`),n;let s=typeof window>"u"?20:10,o=parseInt(s/2),i=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,u=parseInt(i/2),c=s>n.index.length?null:pe(0,o).concat(pe(n.index.length-o,n.index.length)),h=i>n.columns.length?null:pe(0,u).concat(pe(n.columns.length-u,n.columns.length)),l=n.get(c,h);l instanceof e&&(n.shape[0]===1?(l=new t([l.values]),l.index=n.index,l.columns=new e(n.columns).get(h).values):n.shape[1]===1&&(l=new t([l.values]).transpose(),l.index=new e(n.index).get(c).values,l.columns=n.columns)),s<=n.index.length&&(l._index.splice(o,0,"..."),l._values.splice(o,0,pe(0,l.columns.length).map(g=>"..."))),i<=n.columns.length&&(l._columns.splice(u,0,"..."),l._values=l._values.map(g=>(g.splice(u,0,"..."),g)));let q=28;return l instanceof e?(l.values=l.values.map(g=>r(g,q)),l.name=r(l.name,q),l.index=l.index.map(g=>r(g,q))):(l.values=l.values.map(g=>g.map(y=>r(y,q))),l.columns=l.columns.map(g=>r(g,q)),l.index=l.index.map(g=>r(g,q))),console.table(l.toObject()),console.log("Shape:",n.shape,`
`),n}Kr.exports=Jc});var Zr=a((ng,Xr)=>{var Gc=me(),Rc=E();function Lc(t,e){let n=e?t:t.copy();return n.index=Rc(0,t.shape[0]).map(r=>"row"+Gc(r,(n.index.length-1).toString().length)),n}Xr.exports=Lc});var x=a((rg,Hr)=>{var Nt=f(),Kc=p(),xt=d(),Qc=F(),Xc=P();function Zc(t){return Nt(!Kc(t),"You must pass a function into the `vectorize` function!"),Nt(Xc(t),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>xt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>xt(arguments[i])).map(i=>arguments[i].length),o=Qc(s);s.forEach(i=>{Nt(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(c=>xt(arguments[c])?arguments[c][i]:arguments[c]);r.push(e(...u))}return r}else return t(...arguments)}}Hr.exports=Zc});var Fe=a((sg,Dr)=>{var Hc=m(),Dc=x();function el(t){try{return Hc(t)?Math.floor(t):NaN}catch{return NaN}}Dr.exports=Dc(el)});var _=a((og,ts)=>{var de=f(),tl=p(),nl=d(),rl=m(),sl=T(),ge="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function es(t,e){if(e||(de(!tl(t),ge),nl(t)||(t=[t]),t=sl(t),de(t.length>0,ge),t.forEach(n=>{de(rl(n),ge),de(parseInt(n)===n,ge),de(n>=0,ge)})),t.length===1){let n=[];for(let r=0;r<t[0];r++)n.push(void 0);return n}else{let n=[];for(let r=0;r<t[0];r++)n.push(es(t.slice(1),!0));return n}}ts.exports=es});var te=a((ig,ns)=>{var ol=x();function il(t,e){try{return e(t)}catch{return NaN}}ns.exports=ol(il)});var oe=a((ug,us)=>{var qe=f(),rs=d(),ss=m(),ul=N(),os=T(),al=t=>t.reduce((e,n)=>e*n);function is(t,e){if(qe(rs(t),"The first argument passed into the `reshape` function must be an array!"),ss(e)&&(e=[e]),qe(rs(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),qe(ul(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{qe(ss(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return os(t);let n=os(t);qe(al(e)===n.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(n.length/e[0]);for(let o=0;o<e[0];o++){let i=n.slice(o*s,(o+1)*s);r.push(is(i,e.slice(1)))}return r}us.exports=is});var ie=a((lg,ds)=>{var ag=_(),cg=te(),ls=p(),cl=f(),hs=m(),fs=j(),ll=oe(),ms=Math.pow(2,64),w=[];ps(parseInt(Math.random()*ms));function hl(t,e){t=O(t);function n(){t+=O("0x9e3779b97f4a7c15");let s=fs(t);return s=(s^s>>30n)*O("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*O("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(n());return r}function O(t){return BigInt.asUintN(64,BigInt(t))}function as(t,e){return t=O(t),e=BigInt(e),O(O(t<<e)|O(t>>O(64n-e)))}function ps(t){if(ls(t))return fs(w);{cl(hs(t),"If passing a value into the `seed` function, then that value must be an integer!");let e=hl(parseInt(t),4);w[0]=e[0],w[1]=e[1],w[2]=e[2],w[3]=e[3]}}function cs(){let t=O(as(w[0]+w[3],23)+w[0]),e=O(w[1]<<17n);return w[2]=O(w[2]^w[0]),w[3]=O(w[3]^w[1]),w[1]=O(w[1]^w[2]),w[0]=O(w[0]^w[3]),w[2]=O(w[2]^e),w[3]=as(w[3],45),parseInt(t)/ms}function fl(t){if(ls(t))return cs();hs(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(cs());return ll(e,t)}ds.exports={random:fl,seed:ps}});var wt=a((fg,qs)=>{var gs=f(),ml=p(),pl=d(),hg=Fe(),{random:dl}=ie();function gl(t){gs(!ml(t),"You must pass an array into the `shuffle` function!"),gs(pl(t),"You must pass an array into the `shuffle` function!");let e=[],n=t.slice();for(let r=0;r<t.length;r++){let s=parseInt(dl()*n.length);e.push(n.splice(s,1)[0])}return e}qs.exports=gl});var Ns=a((mg,bs)=>{var ql=f(),yl=p(),ys=wt();function bl(t,e){return yl(e)&&(e=0),ql(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),t.get(e===0?ys(t.index):null,e===1?ys(t.columns):null)}bs.exports=bl});var Ss=a((pg,Ts)=>{var{random:Nl}=ie(),M=f(),xl=T(),xs=d(),vt=se(),Tt=m(),ue=S(),ws=p(),wl=E(),vs=N(),vl=V();function Tl(t,e,n){let r=t.copy(),s=Nl().toString();return r=r.assign(s,r.index),ws(e)&&(e=[s],n=[!0]),(Tt(e)||ue(e))&&(e=[e],(vt(n)||ue(n))&&(n=[n])),M(xs(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),M(vs(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),ws(n)&&(n=wl(0,e.length).map(o=>!0)),M(xs(n),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(vs(n).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(e.length===n.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(M(ue(o)||Tt(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ue(o)){let i=r.columns.indexOf(o);return M(i>-1,`The column "${o}" does not exist!`),i}if(Tt(o))return M(parseInt(o)===o,"Column indices must be whole numbers!"),M(o>=0,`The column index ${o} is out of bounds!`),M(o<r.columns.length,`The index ${o} is out of bounds!`),o}),n=n.map(o=>{if(M(ue(o)||vt(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ue(o)){let i=o.trim().toLowerCase();return M(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(vt(o))return o}),r.values=vl(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let c=n[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return c?-1:1;if(o[e[u]]>i[e[u]])return c?1:-1}),r.index=xl(r.get(null,s).values),r=r.dropColumns(s),r}Ts.exports=Tl});var St=a((dg,As)=>{var Sl=se(),Ol=Ue(),Al=S(),Os=p(),El=B();function Il(t,e){e=(()=>{if(Os(e))return!0;if(Sl(e))return e;throw new El("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let n=[""].concat(t.index);return[t.columns].concat(t.values).map((s,o)=>(e?[n[o]]:[]).concat(s).map(u=>Al(u)?JSON.stringify(u):Ol(u)?JSON.stringify(JSON.stringify(u)):Os(u)?"":u.toString()).join(",")).join(`
`)}As.exports=Il});var Is=a((gg,Es)=>{var Ml=St();function Ul(t,e,n){let r=Ml(t,n);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ut("fs"),o=ut("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return t}Es.exports=Ul});var Us=a((qg,Ms)=>{function jl(t){let e={};return t.values.forEach((n,r)=>{let s={};n.forEach((o,i)=>{s[t.columns[i]]=o}),e[t.index[r]]=s}),e}Ms.exports=jl});var Q=a((yg,Vs)=>{var Ot=f(),Vl=p(),Yl=d(),Cl=N(),js=fe(),kl=_();function Bl(t){Ot(!Vl(t),"You must pass an array into the `transpose` function!"),Ot(Yl(t),"You must pass an array into the `transpose` function!");let e=Cl(t);if(Ot(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return js(t);if(e.length===2){let n=kl(js(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)n[s][r]=t[r][s];return n}}Vs.exports=Bl});var Cs=a((bg,Ys)=>{var zl=f(),Pl=P();function _l(t,e){zl(Pl(e),"The parameter to the `apply` method must be a function.");let n=t.copy();return n.values=n.values.map((r,s)=>e(r,n.index[s])),n}Ys.exports=_l});var Bs=a((Ng,ks)=>{var $l=p();function Wl(t){let e=t.copy(),n=[];return e.values=e.values.filter((r,s)=>$l(r)?!1:(n.push(e.index[s]),!0)),e.index=n,e}ks.exports=Wl});var Ps=a((xg,zs)=>{var Fl=j();function Jl(t,e,n){let r=e.copy(),s=Fl(r.index),o=[],i=r.values.filter((u,c)=>{let h=n(u,c,r.values);return h||o.push(r.index[c]),h});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new t,r.name=e.name,r):(r.values=i,r.index=s,r)}zs.exports=Jl});var $s=a((wg,_s)=>{var X=f(),Gl=m(),Rl=S(),Ll=p(),Kl=z();function Ql(t,e){(Rl(e)||Gl(e))&&(e=[e]);let n=Kl((e||[]).map(r=>typeof r));return X(n.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),n.length===1&&X(n[0]==="string"||n[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),n.length===2&&(X(n.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),X(n.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),Ll(e)||(e=e.map(r=>{if(typeof r=="string")return X(t.index.indexOf(r)>-1,`Index "${r}" does not exist!`),r;if(typeof r=="number")return X(r>=0,`Index ${r} is out of bounds!`),X(parseInt(r)===r,"Indices must be integers!"),X(r<t.index.length,`Index ${r} is out of bounds!`),t.index[r]})),t.getSubsetByNames(e)}_s.exports=Ql});var Fs=a((vg,Ws)=>{var ye=f(),Xl=d(),Zl=p(),Hl=le(),Dl=E(),eh=N();function th(t,e){let n=t.shape;Zl(e)&&(e=Dl(0,n[0])),ye(Xl(e),"The `indices` array must be 1-dimensional array of whole numbers."),ye(eh(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),ye(e.length>0,"The `indices` array must contain at least one index."),e.forEach(s=>{ye(Hl(s),"The `indices` array must be a 1-dimensional array of whole numbers."),ye(s<t.index.length,`The row index ${s} is out of bounds.`)});let r=e.map(s=>t.index[s]);return t.getSubsetByNames(r)}Ws.exports=th});var Gs=a((Tg,Js)=>{var be=f(),nh=d(),rh=S(),sh=p(),oh=N();function ih(t,e,n){sh(n)&&(n=e.index),be(nh(n),"The `indices` array must be a 1-dimensional array of strings."),be(oh(n).length===1,"The `indices` array must be a 1-dimensional array of strings."),be(n.length>0,"The `indices` array must contain at least one index name."),n.forEach(o=>{be(rh(o),"The `indices` array must contain only strings."),be(e.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=n.map(o=>e.values[e.index.indexOf(o)]);if(r.length===1)return r[0];let s=new t(r);return s.index=n,s.name=e.name,s}Js.exports=ih});var Ks=a((Sg,Ls)=>{var uh=j(),Rs=E();function ah(t){let e=t.copy(),n=typeof window>"u"?20:10;if(e.index.length>n){e=e.get(Rs(0,n/2).concat(Rs(e.index.length-n/2,e.index.length)));let s=uh(e.index);s.splice(parseInt(s.length/2),0,"..."),e.values.push("..."),e.index.push("..."),e=e.get(s)}let r={};return e.values.forEach((s,o)=>{let i={};i[e.name]=s,r[e.index[o]]=i}),console.table(r),console.log("Shape:",t.shape,`
`),t}Ls.exports=ah});var to=a((Og,eo)=>{var Qs=f(),Xs=se(),Zs=S(),Hs=p(),ch=V(),Ds=Q();function lh(t,e,n){Qs(Xs(n)||Zs(n)||Hs(n),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let r=!0;Hs(n)&&(r=!0),Zs(n)&&(n=n.trim().toLowerCase(),Qs(n==="ascending"||n==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),r=n==="ascending"),Xs(n)&&(r=n);let s=Ds([e.values,e.index]);s=Ds(ch(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return r?-1:1;if(i[0]>u[0])return r?1:-1}));let o=new t(s[0]);return o.index=s[1],o.name=e.name,o}eo.exports=lh});var so=a((Ag,ro)=>{var hh=V(),no=Q();function fh(t,e){let n=no([e.values,e.index]);n=no(hh(n,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new t(n[0]);return r.index=n[1],r.name=e.name,r}ro.exports=fh});var io=a((Eg,oo)=>{function mh(t){let e={};return e[t.name]={},t.index.forEach((n,r)=>{e[t.name][n]=t.values[r]}),e}oo.exports=mh});var fo=a((Ig,ho)=>{var ne=f(),ph=j(),uo=d(),dh=S(),gh=p(),ao=me(),qh=_(),co=E(),lo=fe(),yh=Cs(),bh=Bs(),Nh=Ps(),xh=$s(),wh=Fs(),vh=Gs(),Th=Ks(),Sh=to(),Oh=so(),Ah=io(),Je=N(),Eh=Q();ho.exports=function(t){class e{constructor(r){let s=this;if(s.name="data",Object.defineProperty(s,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"values",{configurable:!0,enumerable:!0,get(){return s._values},set(o){ne(uo(o),"The new values must be a 1-dimensional array!");let i=Je(o);ne(i.length===1,"The new array of values must be 1-dimensional!"),i[0]<s._index.length?s._index=s._index.slice(0,i[0]):i[0]>s._index.length&&(s._index=s._index.concat(co(s._index.length,i[0]).map(u=>"row"+ao(u,(o.length-1).toString().length)))),s._values=o}}),Object.defineProperty(s,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"index",{configurable:!0,enumerable:!0,get(){return s._index},set(o){ne(uo(o),"The new index must be a 1-dimensional array of strings!"),ne(o.length===s.shape[0],"The new index must be the same length as the old index!"),ne(Je(o).length===1,"The new index must be a 1-dimensional array of strings!"),o.forEach(i=>{ne(dh(i),"All of the row names must be strings!")}),s._index=o}}),r){let o=Je(r);ne(o.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),s.values=r}}get shape(){return Je(this.values)}get isEmpty(){return this.values.filter(s=>!gh(s)).length===0}clear(){let r=this,s=r.copy();return s.values=qh(s.shape),s.index=r.index,s}get(r){return xh(this,r)}getSubsetByNames(r){return vh(e,this,r)}getSubsetByIndices(r){return wh(this,r)}loc(r){return this.getSubsetByNames(r)}iloc(r){return this.getSubsetByIndices(r)}reverse(){let r=this,s=new e(lo(r.values));return s.index=lo(r.index),s.name=r.name,s}resetIndex(){let r=this,s=r.copy();return s.index=co(0,r.shape[0]).map(o=>"row"+ao(o,(s.index.length-1).toString().length)),s}copy(){let r=this,s=new e(ph(r.values));return s.index=r.index.slice(),s.name=r.name,s}apply(r){return yh(this,r)}dropMissing(r,s){return bh(this,r,s)}toObject(){return Ah(this)}print(){return Th(this)}sort(r){return Sh(e,this,r)}sortByIndex(){return Oh(e,this)}filter(r){return Nh(e,this,r)}toDataFrame(){let r=this,s=new t(Eh([r.values]));return s.columns=[r.name],s.index=r.index,s}getDummies(){return this.toDataFrame().getDummies()}oneHotEncode(){return this.getDummies()}}return e}});var Mt=a((Mg,qo)=>{var C=f(),mo=Ae(),Ih=Yn(),Mh=Pn(),Uh=Gn(),jh=Ln(),Vh=er(),Yh=rr(),Ch=ur(),kh=hr(),Bh=Nr(),zh=qt(),Ph=vr(),po=Ar(),_h=Cr(),$h=_r(),Wh=Lr(),Fh=Qr(),Jh=Zr(),Gh=Ns(),Rh=Ss(),Lh=Is(),Kh=St(),Qh=Us(),Ge=d(),At=p(),Et=me(),Xh=_(),It=E(),Zh=z(),ae=N(),go=Q();function Re(t){let e="abcdefghijklmnopqrstuvwxyz1234567890",n="";for(let r=0;r<t;r++)n+=e[parseInt(Math.random()*e.length)];return n}var v=class{constructor(e){let n=this;if(Object.defineProperty(n,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(n,"values",{configurable:!0,enumerable:!0,get(){return n._values.length===0||!At(n._values[0])&&n._values[0].length===0?[[]]:n._values},set(r){C(Ge(r),"The new values must be a 2-dimensional array!");let s=ae(r);C(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<n._index.length?n._index=n._index.slice(0,s[0]):s[0]>n._index.length&&(n._index=n._index.concat(It(n._index.length,s[0]).map(o=>"row"+Et(o,(s[0]-1).toString().length)))),s[1]<n._columns.length?n._columns=n._columns.slice(0,s[1]):s[1]>n._columns.length&&(n._columns=n._columns.concat(It(n._columns.length,s[1]).map(o=>"col"+Et(o,(s[1]-1).toString().length)))),n._values=r}}),Object.defineProperty(n,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(n,"columns",{configurable:!0,enumerable:!0,get(){return n._columns},set(r){C(Ge(r),"The new columns list must be a 1-dimensional array of strings!"),C(n.isEmpty||r.length===n.shape[1],"The new columns list must be the same length as the old columns list!"),C(ae(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Re(8):o.trim()));let s=(()=>{let o=mo(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Re(8):o),n._columns=r}}),Object.defineProperty(n,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(n,"index",{configurable:!0,enumerable:!0,get(){return n._index},set(r){C(Ge(r),"The new index must be a 1-dimensional array of strings!"),C(n.isEmpty||r.length===n.shape[0],"The new index must be the same length as the old index!"),C(ae(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Re(8):o.trim()));let s=(()=>{let o=mo(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Re(8):o),n._index=r}}),C(At(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(Ge(e)){let r=ae(e);C(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),n.values=e}else{n._columns=Object.keys(e);let r=[];n._columns.forEach(o=>{let i=e[o];r.push(i)}),n._values=go(r);let s=ae(n.values);n._index=It(0,s[0]).map(o=>"row"+Et(o,(s[0]-1).toString().length))}}get shape(){return ae(this.values)}get rows(){return this.index}set rows(e){let n=this;n.index=e}get isEmpty(){return Zh(this.values).filter(n=>!At(n)).length===0}clear(){let e=this,n=new v(Xh(e.shape));return n.columns=e.columns.slice(),n.index=e.index.slice(),n}get(e,n){return Ph(this,e,n)}getSubsetByNames(e,n){return $h(v,k,this,e,n)}getSubsetByIndices(e,n){return _h(this,e,n)}loc(e,n){return this.getSubsetByNames(e,n)}iloc(e,n){return this.getSubsetByIndices(e,n)}getDummies(e){return po(v,this,e)}oneHotEncode(e){return po(v,this,e)}transpose(){let e=this,n=new v(go(e.values));return n.columns=e.index,n.index=e.columns,n}get T(){return this.transpose()}resetIndex(e){return Jh(this,e)}copy(){return jh(v,this)}assign(e,n){return Uh(v,k,this,e,n)}apply(e,n){return Mh(v,k,this,e,n)}map(e,n){return this.apply(e,n)}dropMissing(e,n,r){return Yh(v,k,this,e,n,r)}dropNaN(e,n,r){return Ch(v,this,e,n,r)}drop(e,n){return Vh(v,k,this,e,n)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return Qh(this)}toCSVString(e){return Kh(this,e)}toCSV(e,n){return Lh(this,e,n)}print(){return Fh(v,k,this)}sort(e,n){return Rh(this,e,n)}sortByIndex(){return this.sort()}filter(e,n){return kh(v,k,this,e,n)}shuffle(e){return Gh(this,e)}append(e){return Ih(v,k,this,e)}join(e){return Wh(v,k,this,e)}};v.fromCSV=function(){return Bh(v,...arguments)};v.fromCSVString=function(){return zh(v,...arguments)};var k=fo()(v);qo.exports={DataFrame:v,Series:k}});var Ut=a((Ug,yo)=>{var Hh=m(),Dh=x();function ef(t){try{return Hh(t)?Math.abs(t):NaN}catch{return NaN}}yo.exports=Dh(ef)});var Ne=a((jg,bo)=>{var tf=m(),nf=x();function rf(){try{let t=0,e=Object.values(arguments);for(let n=0;n<e.length;n++){if(!tf(e[n]))return NaN;t+=e[n]}return t}catch{return NaN}}bo.exports=nf(rf)});var Vt=a((Vg,To)=>{var Y=f(),No=p(),xo=d(),sf=m(),wo=N(),jt=Q();function vo(t,e,n=0){Y(!No(t),"You must pass two arrays into the `append` function!"),Y(!No(e),"You must pass two arrays into the `append` function!"),Y(xo(t),"You must pass two arrays into the `append` function!"),Y(xo(e),"You must pass two arrays into the `append` function!"),Y(sf(n),"The `axis` argument to the `append` function must be 0 or 1!"),Y(n>=0&&n<2,"The `axis` argument to the `append` function must be 0 or 1!"),Y(parseInt(n)===n,"The `axis` argument to the `append` function must be 0 or 1!");let r=wo(t),s=wo(e);Y(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),Y(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==n&&Y(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(Y(n<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return t.concat(e);if(r.length===2){if(n===0){let o=[];for(let i=0;i<r[0];i++)o.push(t[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(n===1)return jt(vo(jt(t),jt(e),0))}}To.exports=vo});var Oo=a((Yg,So)=>{var of=m(),uf=x();function af(t){try{return of(t)?Math.acos(t):NaN}catch{return NaN}}So.exports=uf(af)});var Eo=a((Cg,Ao)=>{var cf=m(),lf=x();function hf(t){try{return cf(t)?Math.asin(t):NaN}catch{return NaN}}Ao.exports=lf(hf)});var Mo=a((kg,Io)=>{var ff=m(),mf=x();function pf(t){try{return ff(t)?Math.atan(t):NaN}catch{return NaN}}Io.exports=mf(pf)});var xe=a((Bg,Co)=>{var Uo=f(),df=p(),jo=d(),Yt=N(),Vo=ee();function Yo(t,e,n){if(Uo(!df(t),"You must pass an array and a value into the `indexOf` function!"),Uo(jo(t),"You must pass an array and a value into the `indexOf` function!"),Yt(t).length===1||jo(e)&&Vo(Yt(t[0]),Yt(e))){for(let r=0;r<t.length;r++){let s=t[r];if(Vo(s,e)&&(n?s===e:!0))return[r]}return null}else for(let r=0;r<t.length;r++){let s=t[r],o=Yo(s,e);if(o)return[r].concat(o)}return null}Co.exports=Yo});var Bo=a((zg,ko)=>{var gf=xe(),qf=F();function yf(t){try{return gf(t,qf(t))}catch{return NaN}}ko.exports=yf});var Ct=a((Pg,zo)=>{var bf=T(),Nf=m();function xf(t){try{let e=bf(t),n=1/0;for(let r=0;r<e.length;r++){if(!Nf(e[r]))return NaN;e[r]<n&&(n=e[r])}return n===1/0?NaN:n}catch{return NaN}}zo.exports=xf});var _o=a((_g,Po)=>{var wf=xe(),vf=Ct();function Tf(t){try{return wf(t,vf(t))}catch{return NaN}}Po.exports=Tf});var Wo=a(($g,$o)=>{var Sf=m(),Of=x();function Af(t){try{return Sf(t)?Math.ceil(t):NaN}catch{return NaN}}$o.exports=Of(Af)});var Go=a((Wg,Jo)=>{var Ef=p(),If=Ut(),Mf=x(),Fo=m();function Uf(t,e){try{if(!Fo(t))return NaN;if(Ef(e))e=1e-10;else if(!Fo(e))return NaN;return If(t)<e?0:t}catch{return NaN}}Jo.exports=Mf(Uf)});var Lo=a((Fg,Ro)=>{var kt=m(),jf=x();function Vf(t,e,n){try{return kt(t)?kt(e)?kt(n)?t<e?e:t>n?n:t:NaN:NaN:NaN}catch{return NaN}}Ro.exports=jf(Vf)});var we=a((Jg,Ko)=>{var Yf=m(),Cf=T();function kf(t){try{let e=Cf(t),n=0;for(let r=0;r<e.length;r++){if(!Yf(e[r]))return NaN;n+=e[r]}return n/e.length}catch{return NaN}}Ko.exports=kf});var Le=a((Gg,Qo)=>{var Bf=we(),zf=T(),Pf=m();function _f(t){try{let e=zf(t),n=Bf(e),r=0;for(let s=0;s<e.length;s++){if(!Pf(e[s]))return NaN;r+=(e[s]-n)*(e[s]-n)}return r/e.length}catch{return NaN}}Qo.exports=_f});var Do=a((Rg,Ho)=>{var Xo=we(),Zo=Le();function $f(t,e){try{let n=Xo(t),r=Xo(e),s=Math.sqrt((Zo(t)+Zo(e))/2);return(n-r)/s}catch{return NaN}}Ho.exports=$f});var ri=a((Lg,ni)=>{var ei=d(),Wf=m(),Ke=f();function ti(t,e){if(Ke(ei(t),"The `combine` function only works on arrays!"),Ke(Wf(e),"`r` must be a whole number!"),e>t.length)return[t];if(e<=0)return[[]];if(Ke(e===parseInt(e),"`r` must be a whole number!"),t.length<2)return t;let n=[];return t.forEach((r,s)=>{Ke(!ei(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=t.slice(s+1);if(o.length<e-1)return;ti(o,e-1).forEach(u=>{n.push([r].concat(u))})}),n}ni.exports=ti});var Bt=a((Kg,ii)=>{var si=we(),oi=p();function Ff(t,e){try{let n=si(t),r=si(e),s=Math.max(t.length,e.length),o=0;for(let i=0;i<s;i++){if(oi(t[i]))return NaN;if(oi(e[i]))return NaN;o+=(t[i]-n)*(e[i]-r)}return o/t.length}catch{return NaN}}ii.exports=Ff});var Qe=a((Qg,ui)=>{var Jf=m(),Gf=x();function Rf(t){try{return Jf(t)?Math.sqrt(t):NaN}catch{return NaN}}ui.exports=Gf(Rf)});var Xe=a((Xg,ai)=>{var Lf=Qe(),Kf=Le();function Qf(t){try{return Lf(Kf(t))}catch{return NaN}}ai.exports=Qf});var hi=a((Zg,li)=>{var Xf=Bt(),ci=Xe();function Zf(t,e){try{return Xf(t,e)/(ci(t)*ci(e))}catch{return NaN}}li.exports=Zf});var mi=a((Hg,fi)=>{var Hf=m(),Df=x();function em(t){try{return Hf(t)?Math.cos(t):NaN}catch{return NaN}}fi.exports=Df(em)});var yi=a((Dg,qi)=>{var pi=f(),di=d(),gi=T();function tm(t,e){pi(di(t),"You must pass two arrays into the `diff` function!"),pi(di(e),"You must pass two arrays into the `diff` function!");let n=gi(t),r=gi(e),s=[];return n.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}qi.exports=tm});var Ze=a((eq,Ni)=>{var bi=m(),nm=x();function rm(t,e){try{return bi(t)?bi(e)?Math.pow(t,e):NaN:NaN}catch{return NaN}}Ni.exports=nm(rm)});var He=a((tq,xi)=>{var sm=Ne(),om=T();function im(t){try{return sm(...om(t))}catch{return NaN}}xi.exports=im});var zt=a((nq,wi)=>{var um=m(),am=x();function cm(){try{let t=1,e=Object.values(arguments);for(let n=0;n<e.length;n++){if(!um(e[n]))return NaN;t*=e[n]}return t}catch{return NaN}}wi.exports=am(cm)});var ce=a((rq,vi)=>{var lm=zt();function hm(t,e){return lm(t,e)}vi.exports=hm});var Pt=a((sq,Ti)=>{var fm=Ne(),mm=ce();function pm(t,e){return fm(t,mm(e,-1))}Ti.exports=pm});var Oi=a((oq,Si)=>{var dm=Ze(),gm=He(),qm=Qe(),ym=Pt();function bm(t,e){try{return qm(gm(dm(ym(t,e),2)))}catch{return NaN}}Si.exports=bm});var Ei=a((iq,Ai)=>{var Nm=ce(),xm=Ze();function wm(t,e){return Nm(t,xm(e,-1))}Ai.exports=wm});var _t=a((aq,Yi)=>{var ve=f(),Ii=p(),Mi=d(),vm=m(),uq=ee(),Ui=T(),ji=N(),Tm=He(),Sm=ce(),Vi=Q();function De(t,e){ve(!Ii(t)&&!Ii(e),"You must pass two arrays of numbers into the `dot` function!"),ve(Mi(t)&&Mi(e),"You must pass two arrays of numbers into the `dot` function!"),Ui(t).concat(Ui(e)).forEach(s=>{ve(vm(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let n=ji(t),r=ji(e);if(ve(n.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),ve(n[n.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${n[n.length-1]} !== ${r[0]})`),n.length===1&&r.length===1)return Tm(Sm(t,e));if(n.length===1&&r.length===2)return Vi(e).map(s=>De(t,s));if(n.length===2&&r.length===1)return t.map(s=>De(s,e));if(n.length===2&&r.length===2){let s=Vi(e),o=[];for(let i=0;i<t.length;i++){let u=[];for(let c=0;c<s.length;c++)u.push(De(t[i],s[c]));o.push(u)}return o}}Yi.exports=De});var Bi=a((cq,ki)=>{var Ci=f(),Om=d(),Am=p(),Em=N();function Im(t){return Ci(Om(t),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Ci(Em(t).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),t.filter(e=>!Am(e))}ki.exports=Im});var Fi=a((lq,Wi)=>{var zi=f(),Pi=p(),_i=d(),Mm=F(),$i=N();function Um(t,e){zi(_i(t)&&_i(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),zi($i(t).length===1&&$i(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let n=[],r=[];for(let s=0;s<Mm([t.length,e.length]);s++)!Pi(t[s])&&!Pi(e[s])&&(n.push(t[s]),r.push(e[s]));return[n,r]}Wi.exports=Um});var Xi=a((hq,Qi)=>{var Ji=f(),Gi=p(),Ri=d(),Li=m(),jm=F(),Ki=N();function Vm(t,e){Ji(Ri(t)&&Ri(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Ji(Ki(t).length===1&&Ki(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let n=[],r=[];for(let s=0;s<jm([t.length,e.length]);s++)!Gi(t[s])&&Li(t[s])&&!Gi(e[s])&&Li(e[s])&&(n.push(t[s]),r.push(e[s]));return[n,r]}Qi.exports=Vm});var Hi=a((fq,Zi)=>{var Ym=x(),Cm=m();function km(t){try{return Cm(t)?Math.exp(t):NaN}catch{return NaN}}Zi.exports=Ym(km)});var tu=a((mq,eu)=>{var Bm=x();function Di(t){try{return t!==parseInt(t)?NaN:t<=1?1:t*Di(t-1)}catch{return NaN}}eu.exports=Bm(Di)});var ru=a((pq,nu)=>{var zm=m(),Pm=x();function _m(t){try{let e=JSON.parse(t);return zm(e)?e:NaN}catch{return NaN}}nu.exports=Pm(_m)});var $t=a((dq,su)=>{var $m=m(),Wm=x();function Fm(t){try{let e=JSON.parse(t);return $m(e)?parseInt(e):NaN}catch{return NaN}}su.exports=Wm(Fm)});var uu=a((gq,iu)=>{var Z=f(),Jm=p(),Wt=d(),Ft=m(),ou=N(),Gm=$t();function Jt(t,e){return Z(!Jm(t),"You must pass an array and an index into the `getValueAt` function!"),Z(Wt(t),"You must pass an array and an index into the `getValueAt` function!"),Z(Ft(e)||Wt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Wt(e)&&(Z(ou(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(n=>{Z(Ft(n)&&Gm(n)===n,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),Z(e.length<=ou(t).length,"The index passed into the `getValueAt` function has too many dimensions!")),Ft(e)?(Z(e<t.length,`The index ${e} is out of bounds!`),t[e]):e.length>1?(Z(e[0]<t.length,`The index ${e[0]} is out of bounds!`),Jt(t[e[0]],e.slice(1))):Jt(t,e[0])}iu.exports=Jt});var Gt=a((bq,au)=>{var qq=_(),yq=te(),Rm=m(),Lm=oe();function Km(t){Rm(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(0);return Lm(e,t)}au.exports=Km});var lu=a((Nq,cu)=>{var et=f(),Qm=p(),Xm=m(),Zm=Gt();function Hm(t){et(!Qm(t),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(Xm(t),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(parseInt(t)===t,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),et(t>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Zm([t,t]);for(let n=0;n<t;n++)e[n][n]=1;return e}cu.exports=Hm});var Rt=a((wq,hu)=>{var xq=f(),Dm=z();function ep(){return Dm([...arguments])}hu.exports=ep});var mu=a((vq,fu)=>{var tp=d(),np=T(),rp=Rt();function sp(){let t=Object.values(arguments).map(r=>tp(r)?np(r):[r]),e=[];return rp(t).forEach(r=>{for(let s=0;s<t.length;s++)if(t[s].indexOf(r)<0)return;e.push(r)}),e}fu.exports=sp});var Kt=a((Sq,gu)=>{var Te=f(),tt=p(),pu=m(),Lt=d(),op=E(),ip=T(),Tq=N(),up=Fe();function du(t,e){if(Te(!tt(t),"You must pass an array into the `slice` function!"),Te(Lt(t),"You must pass an array into the `slice` function!"),tt(e))return t.slice();Te(Lt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),ip(e).forEach(s=>{Te(tt(s)||pu(s)&&up(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let n=e[0];tt(n)&&(n=op(0,t.length)),pu(n)&&(n=[n]);let r=[];return n.forEach(s=>{Te(s<t.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=t.length);let o=t[s];Lt(o)?r.push(du(t[s],e.slice(1,e.length))):r.push(t[s])}),r}gu.exports=du});var Nu=a((Oq,bu)=>{var $=f(),ap=p(),cp=d(),Qt=m(),lp=T(),hp=N(),nt=Kt(),fp=_t(),qu=Ne(),yu=ce(),Xt=Vt(),H=E();function Zt(t){$(!ap(t),"You must pass a square 2D array into the `inverse` function!"),$(cp(t),"You must pass a square 2D array into the `inverse` function!"),lp(t).forEach(n=>$(Qt(n),"The array passed into the `inverse` function must contain only numbers!"));let e=hp(t);if($(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),$(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),$(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return t;if(e[0]===1)return $(t[0][0]!==0,"This matrix cannot be inverted!"),1/t[0][0];if(e[0]===2){let n=t[0][0],r=t[0][1],s=t[1][0],o=t[1][1],i=n*o-r*s;$(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,n]];return yu(u,1/i)}else if(e[0]>1){let n=(r,s)=>Qt(r)||Qt(s)?yu(r,s):fp(r,s);for(let r=1;r<e[0]-1;r++)try{let s=nt(t,[H(0,r),H(0,r)]),o=nt(t,[H(0,r),H(r,e[0])]),i=nt(t,[H(r,e[0]),H(0,r)]),u=nt(t,[H(r,e[0]),H(r,e[0])]),c=Zt(s),h=Zt(qu(u,n(-1,n(n(i,c),o)))),l=qu(c,n(n(n(n(c,o),h),i),c)),q=n(-1,n(n(c,o),h)),g=n(-1,n(n(h,i),c)),y=h;return Xt(Xt(l,q,1),Xt(g,y,1),0)}catch{}$(!1,"This matrix cannot be inverted!")}}bu.exports=Zt});var wu=a((Aq,xu)=>{var mp=x(),Ht=m();function pp(t,e,n){try{return Ht(t)?Ht(e)?Ht(n)?n*(e-t)+t:NaN:NaN:NaN}catch{return NaN}}xu.exports=mp(pp)});var Su=a((Eq,Tu)=>{var vu=m(),dp=p(),gp=x();function qp(t,e){try{return e=dp(e)?Math.E:e,vu(t)?vu(e)?Math.log(t)/Math.log(e):NaN:NaN}catch{return NaN}}Tu.exports=gp(qp)});var Au=a((Iq,Ou)=>{var Se=m(),yp=x();function bp(t,e,n,r,s){try{return Se(t)?Se(e)?Se(n)?Se(r)?Se(s)?(s-r)*(t-e)/(n-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Ou.exports=yp(bp)});var Iu=a((Yq,Eu)=>{var Mq=f(),Uq=p(),jq=d(),Vq=m(),Np=T(),xp=V(),wp=Ye();function vp(t){try{let e=Np(t),n=wp(e);if(n.length===0)return NaN;if(n.length<e.length)return NaN;n=xp(n);let r;return n.length%2===0?r=(n[n.length/2-1]+n[n.length/2])/2:r=n[Math.floor(n.length/2)],r}catch{return NaN}}Eu.exports=vp});var ju=a((Cq,Uu)=>{var Tp=T(),Sp=Ae(),Op=z(),Mu=V();function Ap(t){try{if(t.length===0)return NaN;let e=Tp(t);if(e.length===0)return NaN;let n={},r=Op(e);r.forEach(u=>{n[u]=Sp(e,u)});let s=Mu(r,(u,c)=>n[c]-n[u]),o=s[0],i=Mu(s.filter(u=>n[u]===n[o]));return i.length===1?i[0]:i}catch{return NaN}}Uu.exports=Ap});var ku=a((zq,Cu)=>{var Ep=p(),kq=_(),Bq=te(),{random:Vu}=ie(),Ip=oe(),Mp=m();function Yu(){let t=Vu(),e=Vu();return Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*e)}function Up(t){if(Ep(t))return Yu();Mp(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(Yu());return Ip(e,t)}Cu.exports=Up});var zu=a(($q,Bu)=>{var Pq=_(),_q=te(),jp=oe(),Vp=m();function Yp(t){Vp(t)&&(t=[t]);let e=[],n=1;t.forEach(r=>n*=r);for(let r=0;r<n;r++)e.push(1);return jp(e,t)}Bu.exports=Yp});var $u=a((Wq,_u)=>{var Pu=d(),Cp=m(),rt=f(),kp=p();function Dt(t,e){if(rt(Pu(t),"The `permute` function only works on arrays!"),kp(e)&&(e=t.length),rt(Cp(e),"`r` must be a whole number!"),e>t.length)return Dt(t);if(e<=0)return[[]];if(rt(e===parseInt(e),"`r` must be a whole number!"),t.length<2)return t;let n=[];return t.forEach((r,s)=>{rt(!Pu(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=t.slice(0,s),i=t.slice(s+1),u=o.concat(i);Dt(u,e-1).forEach(h=>{n.push([r].concat(h))})}),n}_u.exports=Dt});var Gu=a((Fq,Ju)=>{var Bp=d(),zp=N(),{DataFrame:Wu,Series:Fu}=Mt();function Pp(){Object.keys(arguments).forEach(t=>{let e=arguments[t];if(Bp(e)){let n=zp(e);n.length===1?new Fu(e).print():n.length==2?new Wu(e).print():console.log(e)}else e instanceof Wu||e instanceof Fu?e.print():console.log(e)})}Ju.exports=Pp});var Lu=a((Jq,Ru)=>{var _p=m(),$p=x();function Wp(t){try{return _p(t)?Math.round(t):NaN}catch{return NaN}}Ru.exports=$p(Wp)});var en=a((Gq,Xu)=>{var Ku=f(),Fp=m(),Qu=d(),Jp=j();function Gp(t,e,n){Ku(Qu(t),"The first argument passed into the `setValueAt` function must be an array!"),Fp(e)&&(e=[e]),Ku(Qu(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Jp(t),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=n,r}Xu.exports=Gp});var Hu=a((Rq,Zu)=>{var Rp=m(),Lp=x();function Kp(t){try{return Rp(t)?t<0?-1:t>0?1:0:NaN}catch{return NaN}}Zu.exports=Lp(Kp)});var ea=a((Lq,Du)=>{var Qp=m(),Xp=x();function Zp(t){try{return Qp(t)?Math.sin(t):NaN}catch{return NaN}}Du.exports=Xp(Zp)});var na=a((Kq,ta)=>{var Hp=Xe();function Dp(t){return Hp(t)}ta.exports=Dp});var sa=a((Qq,ra)=>{var ed=m(),td=x();function nd(t){try{return ed(t)?Math.tan(t):NaN}catch{return NaN}}ra.exports=td(nd)});var st=a((Xq,ia)=>{var oa=P();function rd(t,e){assert(oa(t),"`fn` must be a function!");let n=new Date;return e?t(...e):t(),new Date-n}async function sd(t,e){assert(oa(t),"`fn` must be a function!");let n=new Date;return e?await t(...e):await t(),new Date-n}ia.exports={timeSync:rd,timeAsync:sd}});var ca=a((Zq,aa)=>{var ua=f(),od=d(),id=P(),ud=te(),ad=xe(),cd=en(),ld=T();function hd(t,e){ua(od(t),"The first argument passed into the `where` function must be an array!"),ua(id(e),"The second argument passed into the `where` function must be a function!");let n=ld(t).length,r=ud(t,e),s=[],o=0,i=!1;for(;!i;){let u=ad(r,!0);u?(s[o]=u,r=cd(r,u,null),o++):i=!0}return o===0?null:s}aa.exports=hd});var pd=a((Hq,tn)=>{var{DataFrame:fd,Series:md}=Mt(),Oe={abs:Ut(),add:Ne(),append:Vt(),apply:te(),arccos:Oo(),arcsin:Eo(),arctan:Mo(),argmax:Bo(),argmin:_o(),assert:f(),ceil:Wo(),chop:Go(),clamp:Lo(),cohensd:Do(),combine:ri(),copy:j(),correl:hi(),cos:mi(),count:Ae(),covariance:Bt(),DataFrame:fd,diff:yi(),distance:Oi(),divide:Ei(),dot:_t(),dropMissing:Bi(),dropMissingPairwise:Fi(),dropNaN:Ye(),dropNaNPairwise:Xi(),exp:Hi(),factorial:tu(),flatten:T(),float:ru(),floor:Fe(),getValueAt:uu(),identity:lu(),indexOf:xe(),int:$t(),intersect:mu(),inverse:Nu(),isArray:d(),isBoolean:se(),isEqual:ee(),isFunction:P(),isNumber:m(),isObject:Ue(),isString:S(),isUndefined:p(),lerp:wu(),log:Su(),map:Au(),MathError:B(),max:F(),mean:we(),median:Iu(),min:Ct(),mode:ju(),multiply:zt(),ndarray:_(),normal:ku(),ones:zu(),permute:$u(),pow:Ze(),print:Gu(),random:ie().random,range:E(),reshape:oe(),reverse:fe(),round:Lu(),scale:ce(),seed:ie().seed,Series:md,set:z(),setValueAt:en(),shape:N(),shuffle:wt(),sign:Hu(),sin:ea(),slice:Kt(),sort:V(),sqrt:Qe(),std:Xe(),stdev:na(),subtract:Pt(),sum:He(),tan:sa(),time:st().timeSync,timeSync:st().timeSync,timeAsync:st().timeAsync,transpose:Q(),union:Rt(),variance:Le(),vectorize:x(),where:ca(),zeros:Gt(),dump:function(){Object.keys(Oe).forEach(t=>{try{global[t]=Oe[t]}catch{try{window[t]=Oe[t]}catch{}}})}};typeof tn<"u"&&(tn.exports=Oe);typeof window<"u"&&(window.JSMathTools=Oe)});pd();})();
