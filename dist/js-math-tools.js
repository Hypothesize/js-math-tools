(()=>{var et=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var l=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=l((Hl,kt)=>{function ti(n){return typeof n=="number"&&!isNaN(n)}kt.exports=ti});var le=l((Zl,_t)=>{var Pt=class extends Error{constructor(e){typeof window!="undefined"?super("\u{1F449} "+e):super(`

\u{1F449} [31m`+e+`

[0m`)}};_t.exports=Pt});var d=l((Dl,Bt)=>{var ni=le();Bt.exports=function(n,e){if(!n)throw new ni(e)}});var g=l((ef,Rt)=>{function ri(n){return n===null||typeof n=="undefined"}Rt.exports=ri});var p=l((tf,Jt)=>{function si(n){return n instanceof Array}Jt.exports=si});var O=l((nf,Ft)=>{var Lt=d(),oi=g(),Kt=p();function Wt(n){Lt(!oi(n),"You must pass one array into the `flatten` function!"),Lt(Kt(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){Kt(t)?e=e.concat(Wt(t)):e.push(t)}),e}Ft.exports=Wt});var $=l((rf,Qt)=>{var ii=O(),ui=h();function ai(n){try{let e=ii(n),t=-1/0;for(let r=0;r<e.length;r++){if(!ui(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}Qt.exports=ai});var J=l((sf,Xt)=>{function ci(n){return typeof n=="function"}Xt.exports=ci});var b=l((of,Gt)=>{var tt=d(),li=g(),nt=p(),fi=$(),hi=J();function mi(n){return tt(!li(n),"You must pass a function into the `vectorize` function!"),tt(hi(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>nt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>nt(arguments[i])).map(i=>arguments[i].length),o=fi(s);s.forEach(i=>{tt(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(c=>nt(arguments[c])?arguments[c][i]:arguments[c]);r.push(e(...u))}return r}else return n(...arguments)}}Gt.exports=mi});var rt=l((uf,Ht)=>{var di=h(),pi=b();function gi(n){try{return di(n)?Math.abs(n):NaN}catch{return NaN}}Ht.exports=pi(gi)});var fe=l((af,Zt)=>{var qi=h(),yi=b();function bi(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!qi(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}Zt.exports=yi(bi)});var A=l((cf,tn)=>{var Ae=d(),Ni=g(),Dt=p(),wi=$();function en(n){Ae(!Ni(n),"You must pass an array into the `shape` function!"),Ae(Dt(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>Dt(r));if(t.indexOf(!0)>-1){Ae(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=wi(r);r.forEach(function(o){Ae(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(en(n[0]))}return e}tn.exports=en});var he=l((lf,rn)=>{var nn=d(),xi=g(),vi=p();function Ti(n){nn(!xi(n),"You must pass an array into the `reverse` function!"),nn(vi(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}rn.exports=Ti});var z=l((ff,on)=>{var me=d(),Oi=g(),Si=p(),Ai=h(),Ei=O(),de="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function sn(n,e){if(e||(me(!Oi(n),de),Si(n)||(n=[n]),n=Ei(n),me(n.length>0,de),n.forEach(t=>{me(Ai(t),de),me(parseInt(t)===t,de),me(t>=0,de)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(sn(n.slice(1),!0));return t}}on.exports=sn});var Z=l((hf,an)=>{var st=d(),Ii=g(),Mi=p(),ji=A(),un=he(),Ui=z();function Yi(n){st(!Ii(n),"You must pass an array into the `transpose` function!"),st(Mi(n),"You must pass an array into the `transpose` function!");let e=ji(n);if(st(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return un(n);if(e.length===2){let t=Ui(un(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}an.exports=Yi});var it=l((mf,mn)=>{var Y=d(),cn=g(),ln=p(),Vi=h(),fn=A(),ot=Z();function hn(n,e,t=0){Y(!cn(n),"You must pass two arrays into the `append` function!"),Y(!cn(e),"You must pass two arrays into the `append` function!"),Y(ln(n),"You must pass two arrays into the `append` function!"),Y(ln(e),"You must pass two arrays into the `append` function!"),Y(Vi(t),"The `axis` argument to the `append` function must be 0 or 1!"),Y(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),Y(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=fn(n),s=fn(e);Y(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),Y(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&Y(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(Y(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return ot(hn(ot(n),ot(e),0))}}mn.exports=hn});var k=l((df,dn)=>{var Ci=b();function $i(n,e){try{return e(n)}catch{return NaN}}dn.exports=Ci($i)});var gn=l((pf,pn)=>{var zi=h(),ki=b();function Pi(n){try{return zi(n)?Math.acos(n):NaN}catch{return NaN}}pn.exports=ki(Pi)});var yn=l((gf,qn)=>{var _i=h(),Bi=b();function Ri(n){try{return _i(n)?Math.asin(n):NaN}catch{return NaN}}qn.exports=Bi(Ri)});var Nn=l((qf,bn)=>{var Ji=h(),Li=b();function Ki(n){try{return Ji(n)?Math.atan(n):NaN}catch{return NaN}}bn.exports=Li(Ki)});var D=l((bf,xn)=>{var yf=p();function wn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!wn(n[u],e[u]))return!1}return!0}}}xn.exports=wn});var pe=l((Nf,An)=>{var vn=d(),Wi=g(),Tn=p(),ut=A(),On=D();function Sn(n,e,t){if(vn(!Wi(n),"You must pass an array and a value into the `indexOf` function!"),vn(Tn(n),"You must pass an array and a value into the `indexOf` function!"),ut(n).length===1||Tn(e)&&On(ut(n[0]),ut(e))){for(let r=0;r<n.length;r++){let s=n[r];if(On(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Sn(s,e);if(o)return[r].concat(o)}return null}An.exports=Sn});var In=l((wf,En)=>{var Fi=pe(),Qi=$();function Xi(n){try{return Fi(n,Qi(n))}catch{return NaN}}En.exports=Xi});var Ee=l((xf,Mn)=>{var Gi=O(),Hi=h();function Zi(n){try{let e=Gi(n),t=1/0;for(let r=0;r<e.length;r++){if(!Hi(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Mn.exports=Zi});var Un=l((vf,jn)=>{var Di=pe(),eu=Ee();function tu(n){try{return Di(n,eu(n))}catch{return NaN}}jn.exports=tu});var Vn=l((Tf,Yn)=>{var nu=h(),ru=b();function su(n){try{return nu(n)?Math.ceil(n):NaN}catch{return NaN}}Yn.exports=ru(su)});var zn=l((Of,$n)=>{var ou=g(),iu=rt(),uu=b(),Cn=h();function au(n,e){try{if(!Cn(n))return NaN;if(ou(e))e=1e-10;else if(!Cn(e))return NaN;return iu(n)<e?0:n}catch{return NaN}}$n.exports=uu(au)});var Pn=l((Sf,kn)=>{var at=h(),cu=b();function lu(n,e,t){try{return at(n)?at(e)?at(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}kn.exports=cu(lu)});var ge=l((Af,_n)=>{var fu=h(),hu=O();function mu(n){try{let e=hu(n),t=0;for(let r=0;r<e.length;r++){if(!fu(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}_n.exports=mu});var Ie=l((Ef,Bn)=>{var du=ge(),pu=O(),gu=h();function qu(n){try{let e=pu(n),t=du(e),r=0;for(let s=0;s<e.length;s++){if(!gu(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}Bn.exports=qu});var Kn=l((If,Ln)=>{var Rn=ge(),Jn=Ie();function yu(n,e){try{let t=Rn(n),r=Rn(e),s=Math.sqrt((Jn(n)+Jn(e))/2);return(t-r)/s}catch{return NaN}}Ln.exports=yu});var Xn=l((Mf,Qn)=>{var Wn=p(),bu=h(),Me=d();function Fn(n,e){if(Me(Wn(n),"The `combine` function only works on arrays!"),Me(bu(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Me(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Me(!Wn(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;Fn(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}Qn.exports=Fn});var ee=l((Uf,Gn)=>{var jf=d(),Nu=g(),wu=p();function ct(n){if(typeof n=="object"){if(Nu(n))return n;if(wu(n))return n.map(ct);{let e={};return Object.keys(n).forEach(function(t){e[t]=ct(n[t])}),e}}else return n}Gn.exports=ct});var lt=l((Yf,Dn)=>{var Hn=ge(),Zn=g();function xu(n,e){try{let t=Hn(n),r=Hn(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(Zn(n[i]))return NaN;if(Zn(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}Dn.exports=xu});var je=l((Vf,er)=>{var vu=h(),Tu=b();function Ou(n){try{return vu(n)?Math.sqrt(n):NaN}catch{return NaN}}er.exports=Tu(Ou)});var Ue=l((Cf,tr)=>{var Su=je(),Au=Ie();function Eu(n){try{return Su(Au(n))}catch{return NaN}}tr.exports=Eu});var sr=l(($f,rr)=>{var Iu=lt(),nr=Ue();function Mu(n,e){try{return Iu(n,e)/(nr(n)*nr(e))}catch{return NaN}}rr.exports=Mu});var ir=l((zf,or)=>{var ju=h(),Uu=b();function Yu(n){try{return ju(n)?Math.cos(n):NaN}catch{return NaN}}or.exports=Uu(Yu)});var X=l((kf,ar)=>{var ur=d(),Vu=g(),Cu=p(),$u=O();function zu(n){ur(!Vu(n),"You must pass an array into the `set` function!"),ur(Cu(n),"You must pass an array into the `set` function!");let e=[],t={};return $u(n).forEach(r=>{let s=typeof r=="undefined"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}ar.exports=zu});var Ye=l((Pf,mr)=>{var cr=d(),lr=g(),fr=p(),hr=O(),ku=D(),Pu=X();function _u(n,e){cr(!lr(n),"You must pass an array and some items to count into the `count` function!"),cr(fr(n),"You must pass an array and some items to count into the `count` function!");let t=hr(n);return e=lr(e)?Pu(n):e,fr(e)?hr(e).map(function(r){let s=t.filter(o=>ku(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}mr.exports=_u});var te=l((_f,yr)=>{var qe=d(),dr=p(),pr=h(),Bu=A(),gr=O(),Ru=n=>n.reduce((e,t)=>e*t);function qr(n,e){if(qe(dr(n),"The first argument passed into the `reshape` function must be an array!"),pr(e)&&(e=[e]),qe(dr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),qe(Bu(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{qe(pr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return gr(n);let t=gr(n);qe(Ru(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(qr(i,e.slice(1)))}return r}yr.exports=qr});var ne=l((Jf,Sr)=>{var Bf=z(),Rf=k(),br=g(),Ju=d(),Nr=h(),wr=ee(),Lu=te(),xr=Math.pow(2,64),N=[];Tr(parseInt(Math.random()*xr));function Ku(n,e){n=I(n);function t(){n+=I("0x9e3779b97f4a7c15");let s=wr(n);return s=(s^s>>30n)*I("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*I("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function I(n){return BigInt.asUintN(64,BigInt(n))}function vr(n,e){return n=I(n),e=BigInt(e),I(I(n<<e)|I(n>>I(64n-e)))}function Tr(n){if(br(n))return wr(N);{Ju(Nr(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Ku(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function Or(){let n=I(vr(N[0]+N[3],23)+N[0]),e=I(N[1]<<17n);return N[2]=I(N[2]^N[0]),N[3]=I(N[3]^N[1]),N[1]=I(N[1]^N[2]),N[0]=I(N[0]^N[3]),N[2]=I(N[2]^e),N[3]=vr(N[3],45),parseInt(n)/xr}function Wu(n){if(br(n))return Or();Nr(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Or());return Lu(e,n)}Sr.exports={random:Wu,seed:Tr}});var Ve=l((Lf,Er)=>{var Ar=d(),Fu=p(),Qu=g(),Xu=h(),Gu=A();function Hu(n){return Ar(Fu(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Ar(Gu(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!Qu(e)&&Xu(e))}Er.exports=Hu});var ye=l((Kf,Ir)=>{function Zu(n){return typeof n=="boolean"}Ir.exports=Zu});var re=l((Wf,Mr)=>{function Du(n){return typeof n=="string"}Mr.exports=Du});var G=l((Ff,jr)=>{var ft=d(),ht=g(),mt=h(),ea=he();function ta(n,e,t=1){ft(!ht(n)&&!ht(e)&&!ht(t),"You must pass two numbers and optionally a step value to the `range` function!"),ft(mt(n)&&mt(e)&&mt(t),"You must pass two numbers and optionally a step value to the `range` function!"),ft(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=ea(s)),s}jr.exports=ta});var se=l((Qf,Yr)=>{var dt=d(),Ur=g(),na=p(),ra=J();function sa(n,e){return n<e?-1:n>e?1:0}function oa(n,e){Ur(e)&&(e=sa),dt(!Ur(n),"You must pass an array into the `sort` function!"),dt(na(n),"You must pass an array into the `sort` function!"),dt(ra(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Yr.exports=oa});var ze=l((Hf,kr)=>{var y=d(),Ce=p(),H=g(),oe=A(),$e=Z(),be=G(),pt=h(),Ne=re(),Xf=k(),ia=J(),ua=z(),gt=ee(),aa=X(),Vr=he(),Cr=se(),$r=ye(),Gf=ke();function ca(n){return pt(n)&&parseInt(n)===n}function la(n){return ca(n)&&n>=0}function zr(n,e){y(pt(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var P=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(Ce(r),"The new values must be a 1-dimensional array!");let s=oe(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(be(t._index.length,s[0]).map(o=>"row"+zr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(Ce(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(oe(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(Ne(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=oe(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return oe(this.values)}isEmpty(){return this.values.filter(t=>!H(t)).length===0}clear(){let e=this,t=e.copy();return t.values=ua(t.shape),t.index=e.index,t}get(e){let t=this;(Ne(e)||pt(e))&&(e=[e]);let r=aa((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),H(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;H(e)&&(e=t.index),y(Ce(e),"The `indices` array must be a 1-dimensional array of strings."),y(oe(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(Ne(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new P(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;H(e)&&(e=be(0,r[0])),y(Ce(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(oe(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(la(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new P(Vr(e.values));return t.index=Vr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=be(0,e.shape[0]).map(r=>"row"+zr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new P(gt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(ia(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>H(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window=="undefined"?20:10;if(t.index.length>r){t=t.get(be(0,r/2).concat(be(t.index.length-r/2,t.index.length)));let o=gt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y($r(e)||Ne(e)||H(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;H(e)&&(t=!0),Ne(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),$r(e)&&(t=e);let r=this,s=$e([r.values,r.index]);s=$e(Cr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new P(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=$e([e.values,e.index]);t=$e(Cr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new P(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=gt(r.index),o=[],i=r.values.filter((u,c)=>{let a=e(u,c,r.values);return a||o.push(r.index[c]),a});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new P,r.name=t.name,r):(r.values=i,r.index=s,r)}};kr.exports=P});var qt=l((Zf,Pr)=>{var fa=d();function ha(n,e){fa(isNumber(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}Pr.exports=ha});var yt=l((Df,_r)=>{var ma=p(),da=g();function pa(n){return typeof n=="object"&&!da(n)&&!ma(n)}_r.exports=pa});var bt=l((th,Kr)=>{var L=p(),Br=ye(),eh=yt(),Rr=qt(),ga=$(),Jr=G(),Pe=re(),Lr=le();function qa(n,e,t,r,s){return e=(()=>isUndefined(e)?!0:(assert(Br(e),"The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!"),e))(),t=(()=>isUndefined(t)?!1:(assert(Br(t),"The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!"),t))(),r=(()=>{let i="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(isUndefined(r))return",";if(Pe(r))return assert(r.length===1,i),r;if(L(r))return assert(r.length===2,i),assert(r[0].length===1,i),assert(r[1].length===1,i),r;throw new Lr(i)})(),s=(()=>{let i="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(isUndefined(s))return'"';if(Pe(s))return assert(s.length===1,i),s;if(L(s))return assert(s.length===2,i),assert(s[0].length===1,i),assert(s[1].length===1,i),s;throw new Lr(i)})(),(()=>{let u=n.split(`
`).filter(w=>w.length>0).map(w=>{let C=[],Q="",ce=!1;for(let R=0;R<w.length;R++){let j=w[R];if(j.match(/\\/g))R++;else if(L(s)&&j===s[0])ce=!0;else if(L(s)&&j===s[1])ce=!1;else if(Pe(s)&&j===s)ce=!ce;else if(L(r)&&j===r[0]||L(r)&&j===r[1]||Pe(r)&&j===r)if(ce)Q+=j;else{let Ze=Q;try{let De=JSON.parse(Ze);L(De)?C.push(Ze.trim()):C.push(De)}catch{C.push(Ze.trim())}Q=""}else Q+=j}if(Q.length>0){let R=Q;try{let j=JSON.parse(R);L(j)?C.push(R.trim()):C.push(j)}catch{C.push(R.trim())}}return C}),c=ga(u.map(w=>w.length)),a=e?u.shift():Jr(0,c).map(w=>`col${Rr(w,c.toString().length)}`),m=t?u.map(w=>w.splice(0,1)[0]):Jr(0,u.length).map(w=>`row${Rr(w,u.length.toString().length)}`),q=new DataFrame(u.map(w=>(w.length=c,w)));return q.columns=a,q.index=m,q})()}Kr.exports=qa});var Fr=l((nh,Wr)=>{var ya=d(),ba=bt(),Na=re(),wa=g(),xa=le();async function va(n,e,t,r,s,o){e=(()=>wa(e)?"utf8":(ya(Na(e),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),e))();let i=await(async()=>{try{return await(await fetch(n)).text()}catch{}try{return et("fs").readFileSync(n,e)}catch{}throw new xa(`The path "${n}" could not be loaded!`)})();return ba(i,t,r,s,o)}Wr.exports=va});var ke=l((ih,Dr)=>{var{random:Ta}=ne(),rh=k(),f=d(),V=ee(),Qr=Ye(),Oa=Ve(),_=O(),S=p(),we=ye(),Xr=D(),Gr=J(),K=h(),E=re(),v=g(),sh=$(),oh=Ee(),Sa=z(),U=G(),M=ze(),Hr=X(),T=A(),Aa=se(),xe=Z(),_e=qt();function Be(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function Ea(n){return K(n)&&parseInt(n)===n}function Re(n){return Ea(n)&&n>=0}function Ia(n){return n instanceof Object&&!S(n)}function ie(n){return n instanceof M}function Ma(n){let e=/"(.*?)"/g,t=n.match(e),r=n.slice();return t&&t.forEach(s=>{r=r.replace(s,`\u201C${s.substring(1,s.length-1)}\u201D`)}),e=/'(.*?)'/g,t=n.match(e),t&&t.forEach(s=>{r=r.replace(s,`\u2018${s.substring(1,s.length-1)}\u2019`)}),`"${r}"`}function Zr(n){let e={};return _(n).forEach((t,r)=>{e[t]=r}),e}function ue(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}var x=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){f(S(r),"The new values must be a 2-dimensional array!");let s=T(r);f(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(U(t._index.length,s[0]).map(o=>"row"+_e(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(U(t._columns.length,s[1]).map(o=>"col"+_e(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){f(S(r),"The new columns list must be a 1-dimensional array of strings!"),f(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),f(T(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Be(8):o.trim()));let s=(()=>{let o=Qr(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Be(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){f(S(r),"The new index must be a 1-dimensional array of strings!"),f(r.length===t.shape[0],"The new index must be the same length as the old index!"),f(T(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Be(8):o.trim()));let s=(()=>{let o=Qr(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Be(8):o),t._index=r}}),f(v(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(S(e)){let r=T(e);f(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=xe(r);let s=T(t.values);t._index=U(0,s[0]).map(o=>"row"+_e(o,(s[0]-1).toString().length))}}get shape(){return T(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return Hr(this.values).filter(t=>!v(t)).length===0}clear(){let e=this,t=new x(Sa(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(E(e)||K(e))&&(e=[e]),(E(t)||K(t))&&(t=[t]);let s=Hr((e||[]).concat(t||[]).map(o=>typeof o));return f(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&f(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(f(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),f(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),v(e)||(e=e.map(o=>{if(typeof o=="string")return f(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Index ${o} is out of bounds!`),f(parseInt(o)===o,"Row numbers must be integers!"),f(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),v(t)||(t=t.map(o=>{if(typeof o=="string")return f(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Column ${o} is out of bounds!`),f(parseInt(o)===o,"Column numbers must be integers!"),f(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;v(e)&&(e=r.index),v(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),f(S(e)&&S(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(T(e).length===1&&T(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(e.length>0,"The `rows` array must contain at least one row name."),f(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{f(E(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{f(E(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return _(s)[0];if(e.length===1){let i=new M(_(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new M(_(s));return i.name=t[0],i.index=e,i}let o=new x(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;v(e)&&(e=U(0,s[0])),v(t)&&(t=U(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),f(S(e)&&S(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(T(e).length===1&&T(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(e.length>0,"The `rowIndices` array must contain at least one index."),f(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{f(Re(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{f(Re(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new x(xe(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=U(0,e.shape[0]).map(r=>"row"+_e(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new x;let t=new x(V(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;v(t)?(s=e,f(!S(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,f(E(r),"When using two parameters for the `assign` method, the first parameter must be a string."),f(ie(s)||S(s)&&T(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),f(Ia(s)||ie(s)||S(s)&&T(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(ie(s)){let i={};return f(o.isEmpty()||Xr(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(S(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(c=>{let a=s[c];if(f(S(a),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),f(T(a).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=xe([a]),i.columns=[c],u=i.shape;else{f(a.length===u[0],`Column "${c}" in the new data is not the same length as the other columns in the original DataFrame.`);let m=i.columns.indexOf(c);m<0&&(i.columns.push(c),m=i.columns.indexOf(c)),i.values.forEach((q,w)=>{q[m]=a[w]})}}),i}}apply(e,t){t=t||0,f(Gr(e),"The first parameter to the `apply` method must be a function."),f(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=xe(r.values).map((i,u)=>{let c=new M(i);return c.name=r.columns[u],c.index=r.index,e(c,u,r)});if(T(o).length===1){let i=new M(o);return i.index=V(r.columns),i}else{let i=new x(xe(o));return i.index=V(r.index),i.columns=V(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new M(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(T(s).length===1){let o=new M(s);return o.index=V(r.index),o}else{let o=new x(s);return o.index=V(r.index),o.columns=V(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,f(Re(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(c){if(r>0){let a=0;for(let m=0;m<c.length;m++){let q=c[m];if(v(q)&&a++,a>=r)return[]}}else if(t==="any")for(let a=0;a<c.length;a++){let m=c[a];if(v(m))return[]}else if(t==="all"){for(let a=0;a<c.length;a++){let m=c[a];if(!v(m))return c}return[]}return c}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let c=i.values.map(s).filter(m=>m.length>0);if(T(c).length<2)return new x;i.values=c;let a=i.get(null,u);if(v(a))return new x;E(a)&&(a=[a]),ie(a)&&(a=a.values),i.index=a,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let c=i.values.map(s).filter(m=>m.length>0);if(T(c).length<2)return new x;i.values=c;let a=i.get(null,u);if(v(a))return new x;E(a)&&(a=[a]),ie(a)&&(a=a.values),i.index=a,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,f(Re(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(c){let a=Oa(c);return r>0?c.length-a.length<r:t==="any"?a.length===c.length:t==="all"?a.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let c=i.index.filter(a=>{let m=i.get(a,null).values;return s(m)});return c.length>0?i.get(c,null):new x}else if(e===1){let c=i.columns.filter(a=>{let m=i.get(null,a).values;return s(m)});return c.length>0?i.get(null,c):new x}return i}drop(e,t){let r=this;v(e)&&(e=[]),v(t)&&(t=[]),(E(e)||K(e))&&(e=[e]),(E(t)||K(t))&&(t=[t]),f(S(e),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(S(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(T(e).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(T(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;r.index.forEach((u,c)=>{e.indexOf(u)<0&&e.indexOf(c)<0&&(s||(s=[]),s.push(u))}),r.columns.forEach((u,c)=>{t.indexOf(u)<0&&t.indexOf(c)<0&&(o||(o=[]),o.push(u))});let i=r.get(s,o);if(ie(i)){let u=new x;u=u.assign(i),r.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){let e=this,t={};return e.values.forEach((r,s)=>{let o={};r.forEach((i,u)=>{o[e.columns[u]]=i}),t[e.index[s]]=o}),t}toCSVString(e){let t=this;e=v(e)?{}:e;let r=we(e.hasHeaderRow)?e.hasHeaderRow:!0,s=we(e.hasIndexColumn)?e.hasIndexColumn:!1,o,i,u;return r&&s?(o=["(index)"].concat(V(t.index)),i=V(t.columns),u=[i].concat(t.values).map((c,a)=>[o[a]].concat(c))):!r&&s?(o=V(t.index),u=t.values.map((c,a)=>[o[a]].concat(c))):r&&!s?(i=V(t.columns),u=[i].concat(t.values)):!r&&!s&&(u=t.values),u=u.map((c,a)=>c.map(m=>E(m)?Ma(m):m).join(",")).join(`
`),u}toCSV(e,t){let r=this,s=r.toCSVString(t);try{let o=e;if(e.includes("/")){let u=e.split("/");o=u[u.length-1]}let i=document.createElement("a");i.href=`data:text/csv;charset=utf-8,${encodeURIComponent(s)}`,i.download=o,i.dispatchEvent(new MouseEvent("click"))}catch{}try{let o=et("fs"),i=et("path");o.writeFileSync(i.resolve(e),s,"utf8")}catch{}return r}print(){function e(q,w){return E(q)&&q.length>w?q.substring(0,w-3)+"...":q}let t=this;if(Xr(t.shape,[0]))return console.table({}),t;let r=typeof window=="undefined"?20:10,s=parseInt(r/2),o=typeof window=="undefined"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>t.index.length?null:U(0,s).concat(U(t.index.length-s,t.index.length)),c=o>t.columns.length?null:U(0,i).concat(U(t.columns.length-i,t.columns.length)),a=t.get(u,c);a instanceof M&&(t.shape[0]===1?(a=new x([a.values]),a.index=t.index,a.columns=new M(t.columns).get(c).values):t.shape[1]===1&&(a=new x([a.values]).transpose(),a.index=new M(t.index).get(u).values,a.columns=t.columns)),r<=t.index.length&&(a._index.splice(s,0,"..."),a._values.splice(s,0,U(0,a.columns.length).map(q=>"..."))),o<=t.columns.length&&(a._columns.splice(i,0,"..."),a._values=a._values.map(q=>(q.splice(i,0,"..."),q)));let m=28;return a instanceof M?(a.values=a.values.map(q=>e(q,m)),a.name=e(a.name,m),a.index=a.index.map(q=>e(q,m))):(a.values=a.values.map(q=>q.map(w=>e(w,m))),a.columns=a.columns.map(q=>e(q,m)),a.index=a.index.map(q=>e(q,m))),console.table(a.toObject()),t}sort(e,t){let s=this.copy(),o=Ta().toString();return s=s.assign(o,s.index),v(e)&&(e=[o],t=[!0]),(K(e)||E(e))&&(e=[e],(we(t)||E(t))&&(t=[t])),f(S(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),f(T(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),v(t)&&(t=U(0,e.length).map(i=>!0)),f(S(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),f(T(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),f(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(i=>{if(f(E(i)||K(i),"Column references can either be column names (as strings) or column indices (as whole numbers)."),E(i)){let u=s.columns.indexOf(i);return f(u>-1,`The column "${i}" does not exist!`),u}if(K(i))return f(parseInt(i)===i,"Column indices must be whole numbers!"),f(i>=0,`The column index ${i} is out of bounds!`),f(i<s.columns.length,`The index ${i} is out of bounds!`),i}),t=t.map(i=>{if(f(E(i)||we(i),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),E(i)){let u=i.trim().toLowerCase();return f(u==="ascending"||u==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),u==="ascending"}if(we(i))return i}),s.values=Aa(s.values,(i,u)=>{let c=0;for(;i[e[c]]===u[e[c]]&&c<e.length;)c++;let a=t[c];if(i[e[c]]===u[e[c]])return 0;if(i[e[c]]<u[e[c]])return a?-1:1;if(i[e[c]]>u[e[c]])return a?1:-1}),s.index=_(s.get(null,o).values),s=s.dropColumns(o),s}sortByIndex(){return this.sort()}filter(e,t){f(Gr(e),"The `filter` method takes a single parameter: a function that is used to filter the values."),v(t)&&(t=0),f(t===0||t===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let r=this,s=r.copy();if(s.isEmpty())return s;let o=Zr(s.index),i=Zr(s.columns);if(t===0){let u=s.values.filter((c,a)=>{let m=new M(c);m.name=r.index[a],m.index=r.columns;let q=e(m,a,r);return q||delete o[s.index[a]],q});if(_(u).length===0)return new x;if(u.length===1){let c=new M(_(u));return c.name=ue(o)[0],c.index=ue(i),c}s.values=u,s.index=ue(o)}else if(t===1){s=s.transpose();let u=s.values.filter((c,a)=>{let m=new M(c);m.name=r.columns[a],m.index=r.index;let q=e(m,a,r);return q||delete i[s.index[a]],q});if(_(u).length===0)return new x;if(u.length===1){let c=new M(_(u));return c.name=ue(i)[0],c.index=ue(o),c}s.values=u,s.index=ue(i),s=s.transpose()}return s}shuffle(e){v(e)&&(e=0),f(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined.");let t=this;return t.get(e===0?shuffle(t.index):null,e===1?shuffle(t.columns):null)}};x.fromCSV=Fr();x.fromCSVString=bt();Dr.exports=x});var ss=l((uh,rs)=>{var es=d(),ts=p(),ns=O();function ja(n,e){es(ts(n),"You must pass two arrays into the `diff` function!"),es(ts(e),"You must pass two arrays into the `diff` function!");let t=ns(n),r=ns(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}rs.exports=ja});var Je=l((ah,is)=>{var os=h(),Ua=b();function Ya(n,e){try{return os(n)?os(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}is.exports=Ua(Ya)});var Le=l((ch,us)=>{var Va=fe(),Ca=O();function $a(n){try{return Va(...Ca(n))}catch{return NaN}}us.exports=$a});var Nt=l((lh,as)=>{var za=h(),ka=b();function Pa(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!za(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}as.exports=ka(Pa)});var ae=l((fh,cs)=>{var _a=Nt();function Ba(n,e){return _a(n,e)}cs.exports=Ba});var wt=l((hh,ls)=>{var Ra=fe(),Ja=ae();function La(n,e){return Ra(n,Ja(e,-1))}ls.exports=La});var hs=l((mh,fs)=>{var Ka=Je(),Wa=Le(),Fa=je(),Qa=wt();function Xa(n,e){try{return Fa(Wa(Ka(Qa(n,e),2)))}catch{return NaN}}fs.exports=Xa});var ds=l((dh,ms)=>{var Ga=ae(),Ha=Je();function Za(n,e){return Ga(n,Ha(e,-1))}ms.exports=Za});var xt=l((gh,Ns)=>{var ve=d(),ps=g(),gs=p(),Da=h(),ph=D(),qs=O(),ys=A(),ec=Le(),tc=ae(),bs=Z();function Ke(n,e){ve(!ps(n)&&!ps(e),"You must pass two arrays of numbers into the `dot` function!"),ve(gs(n)&&gs(e),"You must pass two arrays of numbers into the `dot` function!"),qs(n).concat(qs(e)).forEach(s=>{ve(Da(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=ys(n),r=ys(e);if(ve(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),ve(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return ec(tc(n,e));if(t.length===1&&r.length===2)return bs(e).map(s=>Ke(n,s));if(t.length===2&&r.length===1)return n.map(s=>Ke(s,e));if(t.length===2&&r.length===2){let s=bs(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let c=0;c<s.length;c++)u.push(Ke(n[i],s[c]));o.push(u)}return o}}Ns.exports=Ke});var vs=l((qh,xs)=>{var ws=d(),nc=p(),rc=g(),sc=A();function oc(n){return ws(nc(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),ws(sc(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!rc(e))}xs.exports=oc});var Is=l((yh,Es)=>{var Ts=d(),Os=g(),Ss=p(),ic=$(),As=A();function uc(n,e){Ts(Ss(n)&&Ss(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Ts(As(n).length===1&&As(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<ic([n.length,e.length]);s++)!Os(n[s])&&!Os(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Es.exports=uc});var $s=l((bh,Cs)=>{var Ms=d(),js=g(),Us=p(),Ys=h(),ac=$(),Vs=A();function cc(n,e){Ms(Us(n)&&Us(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Ms(Vs(n).length===1&&Vs(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<ac([n.length,e.length]);s++)!js(n[s])&&Ys(n[s])&&!js(e[s])&&Ys(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Cs.exports=cc});var ks=l((Nh,zs)=>{var lc=b(),fc=h();function hc(n){try{return fc(n)?Math.exp(n):NaN}catch{return NaN}}zs.exports=lc(hc)});var Bs=l((wh,_s)=>{var mc=b();function Ps(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*Ps(n-1)}catch{return NaN}}_s.exports=mc(Ps)});var Js=l((xh,Rs)=>{var dc=h(),pc=b();function gc(n){try{let e=JSON.parse(n);return dc(e)?e:NaN}catch{return NaN}}Rs.exports=pc(gc)});var We=l((vh,Ls)=>{var qc=h(),yc=b();function bc(n){try{return qc(n)?Math.floor(n):NaN}catch{return NaN}}Ls.exports=yc(bc)});var vt=l((Th,Ks)=>{var Nc=h(),wc=b();function xc(n){try{let e=JSON.parse(n);return Nc(e)?parseInt(e):NaN}catch{return NaN}}Ks.exports=wc(xc)});var Qs=l((Oh,Fs)=>{var W=d(),vc=g(),Tt=p(),Ot=h(),Ws=A(),Tc=vt();function St(n,e){return W(!vc(n),"You must pass an array and an index into the `getValueAt` function!"),W(Tt(n),"You must pass an array and an index into the `getValueAt` function!"),W(Ot(e)||Tt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Tt(e)&&(W(Ws(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{W(Ot(t)&&Tc(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),W(e.length<=Ws(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Ot(e)?(W(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(W(e[0]<n.length,`The index ${e[0]} is out of bounds!`),St(n[e[0]],e.slice(1))):St(n,e[0])}Fs.exports=St});var At=l((Eh,Xs)=>{var Sh=z(),Ah=k(),Oc=h(),Sc=te();function Ac(n){Oc(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Sc(e,n)}Xs.exports=Ac});var Hs=l((Ih,Gs)=>{var Fe=d(),Ec=g(),Ic=h(),Mc=At();function jc(n){Fe(!Ec(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),Fe(Ic(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),Fe(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),Fe(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Mc([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}Gs.exports=jc});var Et=l((jh,Zs)=>{var Mh=d(),Uc=X();function Yc(){return Uc([...arguments])}Zs.exports=Yc});var eo=l((Uh,Ds)=>{var Vc=p(),Cc=O(),$c=Et();function zc(){let n=Object.values(arguments).map(r=>Vc(r)?Cc(r):[r]),e=[];return $c(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}Ds.exports=zc});var Mt=l((Vh,ro)=>{var Te=d(),Qe=g(),to=h(),It=p(),kc=G(),Pc=O(),Yh=A(),_c=We();function no(n,e){if(Te(!Qe(n),"You must pass an array into the `slice` function!"),Te(It(n),"You must pass an array into the `slice` function!"),Qe(e))return n.slice();Te(It(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),Pc(e).forEach(s=>{Te(Qe(s)||to(s)&&_c(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];Qe(t)&&(t=kc(0,n.length)),to(t)&&(t=[t]);let r=[];return t.forEach(s=>{Te(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];It(o)?r.push(no(n[s],e.slice(1,e.length))):r.push(n[s])}),r}ro.exports=no});var uo=l((Ch,io)=>{var B=d(),Bc=g(),Rc=p(),jt=h(),Jc=O(),Lc=A(),Xe=Mt(),Kc=xt(),so=fe(),oo=ae(),Ut=it(),F=G();function Yt(n){B(!Bc(n),"You must pass a square 2D array into the `inverse` function!"),B(Rc(n),"You must pass a square 2D array into the `inverse` function!"),Jc(n).forEach(t=>B(jt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=Lc(n);if(B(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return B(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;B(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return oo(u,1/i)}else if(e[0]>1){let t=(r,s)=>jt(r)||jt(s)?oo(r,s):Kc(r,s);for(let r=1;r<e[0]-1;r++)try{let s=Xe(n,[F(0,r),F(0,r)]),o=Xe(n,[F(0,r),F(r,e[0])]),i=Xe(n,[F(r,e[0]),F(0,r)]),u=Xe(n,[F(r,e[0]),F(r,e[0])]),c=Yt(s),a=Yt(so(u,t(-1,t(t(i,c),o)))),m=so(c,t(t(t(t(c,o),a),i),c)),q=t(-1,t(t(c,o),a)),w=t(-1,t(t(a,i),c)),C=a;return Ut(Ut(m,q,1),Ut(w,C,1),0)}catch{}B(!1,"This matrix cannot be inverted!")}}io.exports=Yt});var co=l(($h,ao)=>{var Wc=b(),Vt=h();function Fc(n,e,t){try{return Vt(n)?Vt(e)?Vt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}ao.exports=Wc(Fc)});var ho=l((zh,fo)=>{var lo=h(),Qc=g(),Xc=b();function Gc(n,e){try{return e=Qc(e)?Math.E:e,lo(n)?lo(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}fo.exports=Xc(Gc)});var po=l((kh,mo)=>{var Oe=h(),Hc=b();function Zc(n,e,t,r,s){try{return Oe(n)?Oe(e)?Oe(t)?Oe(r)?Oe(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}mo.exports=Hc(Zc)});var qo=l((Jh,go)=>{var Ph=d(),_h=g(),Bh=p(),Rh=h(),Dc=O(),el=se(),tl=Ve();function nl(n){try{let e=Dc(n),t=tl(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=el(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}go.exports=nl});var No=l((Lh,bo)=>{var rl=O(),sl=Ye(),ol=X(),yo=se();function il(n){try{if(n.length===0)return NaN;let e=rl(n);if(e.length===0)return NaN;let t={},r=ol(e);r.forEach(u=>{t[u]=sl(e,u)});let s=yo(r,(u,c)=>t[c]-t[u]),o=s[0],i=yo(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}bo.exports=il});var To=l((Fh,vo)=>{var ul=g(),Kh=z(),Wh=k(),{random:wo}=ne(),al=te(),cl=h();function xo(){let n=wo(),e=wo();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function ll(n){if(ul(n))return xo();cl(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(xo());return al(e,n)}vo.exports=ll});var So=l((Gh,Oo)=>{var Qh=z(),Xh=k(),fl=te(),hl=h();function ml(n){hl(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return fl(e,n)}Oo.exports=ml});var Io=l((Hh,Eo)=>{var Ao=p(),dl=h(),Ge=d(),pl=g();function Ct(n,e){if(Ge(Ao(n),"The `permute` function only works on arrays!"),pl(e)&&(e=n.length),Ge(dl(e),"`r` must be a whole number!"),e>n.length)return Ct(n);if(e<=0)return[[]];if(Ge(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ge(!Ao(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Ct(u,e-1).forEach(a=>{t.push([r].concat(a))})}),t}Eo.exports=Ct});var Yo=l((Zh,Uo)=>{var gl=p(),ql=A(),Mo=ke(),jo=ze();function yl(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(gl(e)){let t=ql(e);t.length===1?new jo(e).print():t.length==2?new Mo(e).print():console.log(e)}else e instanceof Mo||e instanceof jo?e.print():console.log(e)})}Uo.exports=yl});var Co=l((Dh,Vo)=>{var bl=h(),Nl=b();function wl(n){try{return bl(n)?Math.round(n):NaN}catch{return NaN}}Vo.exports=Nl(wl)});var $t=l((em,ko)=>{var $o=d(),xl=h(),zo=p(),vl=ee();function Tl(n,e,t){$o(zo(n),"The first argument passed into the `setValueAt` function must be an array!"),xl(e)&&(e=[e]),$o(zo(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=vl(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}ko.exports=Tl});var Bo=l((nm,_o)=>{var Po=d(),Ol=g(),Sl=p(),tm=We(),{random:Al}=ne();function El(n){Po(!Ol(n),"You must pass an array into the `shuffle` function!"),Po(Sl(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Al()*t.length);e.push(t.splice(s,1)[0])}return e}_o.exports=El});var Jo=l((rm,Ro)=>{var Il=h(),Ml=b();function jl(n){try{return Il(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Ro.exports=Ml(jl)});var Ko=l((sm,Lo)=>{var Ul=h(),Yl=b();function Vl(n){try{return Ul(n)?Math.sin(n):NaN}catch{return NaN}}Lo.exports=Yl(Vl)});var Fo=l((om,Wo)=>{var Cl=Ue();function $l(n){return Cl(n)}Wo.exports=$l});var Xo=l((im,Qo)=>{var zl=h(),kl=b();function Pl(n){try{return zl(n)?Math.tan(n):NaN}catch{return NaN}}Qo.exports=kl(Pl)});var He=l((um,Ho)=>{var Go=J();function _l(n,e){assert(Go(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function Bl(n,e){assert(Go(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}Ho.exports={timeSync:_l,timeAsync:Bl}});var ei=l((am,Do)=>{var Zo=d(),Rl=p(),Jl=J(),Ll=k(),Kl=pe(),Wl=$t(),Fl=O();function Ql(n,e){Zo(Rl(n),"The first argument passed into the `where` function must be an array!"),Zo(Jl(e),"The second argument passed into the `where` function must be a function!");let t=Fl(n).length,r=Ll(n,e),s=[],o=0,i=!1;for(;!i;){let u=Kl(r,!0);u?(s[o]=u,r=Wl(r,u,null),o++):i=!0}return o===0?null:s}Do.exports=Ql});var Xl=l((cm,zt)=>{var Se={abs:rt(),add:fe(),append:it(),apply:k(),arccos:gn(),arcsin:yn(),arctan:Nn(),argmax:In(),argmin:Un(),assert:d(),ceil:Vn(),chop:zn(),clamp:Pn(),cohensd:Kn(),combine:Xn(),copy:ee(),correl:sr(),cos:ir(),count:Ye(),covariance:lt(),DataFrame:ke(),diff:ss(),distance:hs(),divide:ds(),dot:xt(),dropMissing:vs(),dropMissingPairwise:Is(),dropNaN:Ve(),dropNaNPairwise:$s(),exp:ks(),factorial:Bs(),flatten:O(),float:Js(),floor:We(),getValueAt:Qs(),identity:Hs(),indexOf:pe(),int:vt(),intersect:eo(),inverse:uo(),isArray:p(),isBoolean:ye(),isEqual:D(),isFunction:J(),isNumber:h(),isObject:yt(),isString:re(),isUndefined:g(),lerp:co(),log:ho(),map:po(),MathError:le(),max:$(),mean:ge(),median:qo(),min:Ee(),mode:No(),multiply:Nt(),ndarray:z(),normal:To(),ones:So(),permute:Io(),pow:Je(),print:Yo(),random:ne().random,range:G(),reshape:te(),reverse:he(),round:Co(),scale:ae(),seed:ne().seed,Series:ze(),set:X(),setValueAt:$t(),shape:A(),shuffle:Bo(),sign:Jo(),sin:Ko(),slice:Mt(),sort:se(),sqrt:je(),std:Ue(),stdev:Fo(),subtract:wt(),sum:Le(),tan:Xo(),time:He().timeSync,timeSync:He().timeSync,timeAsync:He().timeAsync,transpose:Z(),union:Et(),variance:Ie(),vectorize:b(),where:ei(),zeros:At(),dump:function(){Object.keys(Se).forEach(n=>{typeof global!="undefined"&&(global[n]=Se[n]),typeof window!="undefined"&&(window[n]=Se[n])})}};typeof zt!="undefined"&&(zt.exports=Se);typeof window!="undefined"&&(window.JSMathTools=Se)});Xl();})();
