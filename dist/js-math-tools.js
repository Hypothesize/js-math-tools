(()=>{var it=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=a((Vf,Kt)=>{function pi(n){return typeof n=="number"&&!isNaN(n)}Kt.exports=pi});var ee=a((Uf,Qt)=>{var Wt=class extends Error{constructor(e){typeof window!="undefined"?super("\u{1F449} "+e):super(`

\u{1F449} [31m`+e+`
[0m`)}};Qt.exports=Wt});var m=a((Yf,Xt)=>{var di=ee();Xt.exports=function(n,e){if(!n)throw new di(e)}});var p=a((Cf,Gt)=>{function gi(n){return n===null||typeof n=="undefined"}Gt.exports=gi});var g=a((zf,Zt)=>{function qi(n){return n instanceof Array}Zt.exports=qi});var x=a((kf,tn)=>{var Ht=m(),yi=p(),Dt=g();function en(n){Ht(!yi(n),"You must pass one array into the `flatten` function!"),Ht(Dt(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){Dt(t)?e=e.concat(en(t)):e.push(t)}),e}tn.exports=en});var z=a(($f,nn)=>{var bi=x(),Ni=h();function wi(n){try{let e=bi(n),t=-1/0;for(let r=0;r<e.length;r++){if(!Ni(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}nn.exports=wi});var k=a((Pf,rn)=>{function xi(n){return typeof n=="function"}rn.exports=xi});var b=a((_f,sn)=>{var ut=m(),vi=p(),at=g(),Ti=z(),Oi=k();function Si(n){return ut(!vi(n),"You must pass a function into the `vectorize` function!"),ut(Oi(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>at(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>at(arguments[i])).map(i=>arguments[i].length),o=Ti(s);s.forEach(i=>{ut(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(c=>at(arguments[c])?arguments[c][i]:arguments[c]);r.push(e(...u))}return r}else return n(...arguments)}}sn.exports=Si});var ct=a((Bf,on)=>{var Ai=h(),Ei=b();function Mi(n){try{return Ai(n)?Math.abs(n):NaN}catch{return NaN}}on.exports=Ei(Mi)});var me=a((Jf,un)=>{var Ii=h(),ji=b();function Vi(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Ii(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}un.exports=ji(Vi)});var S=a((Ff,ln)=>{var Me=m(),Ui=p(),an=g(),Yi=z();function cn(n){Me(!Ui(n),"You must pass an array into the `shape` function!"),Me(an(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>an(r));if(t.indexOf(!0)>-1){Me(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Yi(r);r.forEach(function(o){Me(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(cn(n[0]))}return e}ln.exports=cn});var pe=a((Lf,hn)=>{var fn=m(),Ci=p(),zi=g();function ki(n){fn(!Ci(n),"You must pass an array into the `reverse` function!"),fn(zi(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}hn.exports=ki});var $=a((Rf,pn)=>{var de=m(),$i=p(),Pi=g(),_i=h(),Bi=x(),ge="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function mn(n,e){if(e||(de(!$i(n),ge),Pi(n)||(n=[n]),n=Bi(n),de(n.length>0,ge),n.forEach(t=>{de(_i(t),ge),de(parseInt(t)===t,ge),de(t>=0,ge)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(mn(n.slice(1),!0));return t}}pn.exports=mn});var te=a((Kf,gn)=>{var lt=m(),Ji=p(),Fi=g(),Li=S(),dn=pe(),Ri=$();function Ki(n){lt(!Ji(n),"You must pass an array into the `transpose` function!"),lt(Fi(n),"You must pass an array into the `transpose` function!");let e=Li(n);if(lt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return dn(n);if(e.length===2){let t=Ri(dn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}gn.exports=Ki});var ht=a((Wf,wn)=>{var Y=m(),qn=p(),yn=g(),Wi=h(),bn=S(),ft=te();function Nn(n,e,t=0){Y(!qn(n),"You must pass two arrays into the `append` function!"),Y(!qn(e),"You must pass two arrays into the `append` function!"),Y(yn(n),"You must pass two arrays into the `append` function!"),Y(yn(e),"You must pass two arrays into the `append` function!"),Y(Wi(t),"The `axis` argument to the `append` function must be 0 or 1!"),Y(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),Y(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=bn(n),s=bn(e);Y(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),Y(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&Y(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(Y(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return ft(Nn(ft(n),ft(e),0))}}wn.exports=Nn});var P=a((Qf,xn)=>{var Qi=b();function Xi(n,e){try{return e(n)}catch{return NaN}}xn.exports=Qi(Xi)});var Tn=a((Xf,vn)=>{var Gi=h(),Zi=b();function Hi(n){try{return Gi(n)?Math.acos(n):NaN}catch{return NaN}}vn.exports=Zi(Hi)});var Sn=a((Gf,On)=>{var Di=h(),eu=b();function tu(n){try{return Di(n)?Math.asin(n):NaN}catch{return NaN}}On.exports=eu(tu)});var En=a((Zf,An)=>{var nu=h(),ru=b();function su(n){try{return nu(n)?Math.atan(n):NaN}catch{return NaN}}An.exports=ru(su)});var ne=a((Df,In)=>{var Hf=g();function Mn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!Mn(n[u],e[u]))return!1}return!0}}}In.exports=Mn});var qe=a((eh,Cn)=>{var jn=m(),ou=p(),Vn=g(),mt=S(),Un=ne();function Yn(n,e,t){if(jn(!ou(n),"You must pass an array and a value into the `indexOf` function!"),jn(Vn(n),"You must pass an array and a value into the `indexOf` function!"),mt(n).length===1||Vn(e)&&Un(mt(n[0]),mt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Un(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Yn(s,e);if(o)return[r].concat(o)}return null}Cn.exports=Yn});var kn=a((th,zn)=>{var iu=qe(),uu=z();function au(n){try{return iu(n,uu(n))}catch{return NaN}}zn.exports=au});var Ie=a((nh,$n)=>{var cu=x(),lu=h();function fu(n){try{let e=cu(n),t=1/0;for(let r=0;r<e.length;r++){if(!lu(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}$n.exports=fu});var _n=a((rh,Pn)=>{var hu=qe(),mu=Ie();function pu(n){try{return hu(n,mu(n))}catch{return NaN}}Pn.exports=pu});var Jn=a((sh,Bn)=>{var du=h(),gu=b();function qu(n){try{return du(n)?Math.ceil(n):NaN}catch{return NaN}}Bn.exports=gu(qu)});var Rn=a((oh,Ln)=>{var yu=p(),bu=ct(),Nu=b(),Fn=h();function wu(n,e){try{if(!Fn(n))return NaN;if(yu(e))e=1e-10;else if(!Fn(e))return NaN;return bu(n)<e?0:n}catch{return NaN}}Ln.exports=Nu(wu)});var Wn=a((ih,Kn)=>{var pt=h(),xu=b();function vu(n,e,t){try{return pt(n)?pt(e)?pt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}Kn.exports=xu(vu)});var ye=a((uh,Qn)=>{var Tu=h(),Ou=x();function Su(n){try{let e=Ou(n),t=0;for(let r=0;r<e.length;r++){if(!Tu(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}Qn.exports=Su});var je=a((ah,Xn)=>{var Au=ye(),Eu=x(),Mu=h();function Iu(n){try{let e=Eu(n),t=Au(e),r=0;for(let s=0;s<e.length;s++){if(!Mu(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}Xn.exports=Iu});var Dn=a((ch,Hn)=>{var Gn=ye(),Zn=je();function ju(n,e){try{let t=Gn(n),r=Gn(e),s=Math.sqrt((Zn(n)+Zn(e))/2);return(t-r)/s}catch{return NaN}}Hn.exports=ju});var rr=a((lh,nr)=>{var er=g(),Vu=h(),Ve=m();function tr(n,e){if(Ve(er(n),"The `combine` function only works on arrays!"),Ve(Vu(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(Ve(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{Ve(!er(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;tr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}nr.exports=tr});var re=a((hh,sr)=>{var fh=m(),Uu=p(),Yu=g();function dt(n){if(typeof n=="object"){if(Uu(n))return n;if(Yu(n))return n.map(dt);{let e={};return Object.keys(n).forEach(function(t){e[t]=dt(n[t])}),e}}else return n}sr.exports=dt});var gt=a((mh,ur)=>{var or=ye(),ir=p();function Cu(n,e){try{let t=or(n),r=or(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(ir(n[i]))return NaN;if(ir(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}ur.exports=Cu});var Ue=a((ph,ar)=>{var zu=h(),ku=b();function $u(n){try{return zu(n)?Math.sqrt(n):NaN}catch{return NaN}}ar.exports=ku($u)});var Ye=a((dh,cr)=>{var Pu=Ue(),_u=je();function Bu(n){try{return Pu(_u(n))}catch{return NaN}}cr.exports=Bu});var hr=a((gh,fr)=>{var Ju=gt(),lr=Ye();function Fu(n,e){try{return Ju(n,e)/(lr(n)*lr(e))}catch{return NaN}}fr.exports=Fu});var pr=a((qh,mr)=>{var Lu=h(),Ru=b();function Ku(n){try{return Lu(n)?Math.cos(n):NaN}catch{return NaN}}mr.exports=Ru(Ku)});var Q=a((yh,gr)=>{var dr=m(),Wu=p(),Qu=g(),Xu=x();function Gu(n){dr(!Wu(n),"You must pass an array into the `set` function!"),dr(Qu(n),"You must pass an array into the `set` function!");let e=[],t={};return Xu(n).forEach(r=>{let s=typeof r=="undefined"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}gr.exports=Gu});var Ce=a((bh,wr)=>{var qr=m(),yr=p(),br=g(),Nr=x(),Zu=ne(),Hu=Q();function Du(n,e){qr(!yr(n),"You must pass an array and some items to count into the `count` function!"),qr(br(n),"You must pass an array and some items to count into the `count` function!");let t=Nr(n);return e=yr(e)?Hu(n):e,br(e)?Nr(e).map(function(r){let s=t.filter(o=>Zu(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}wr.exports=Du});var se=a((Nh,Sr)=>{var be=m(),xr=g(),vr=h(),ea=S(),Tr=x(),ta=n=>n.reduce((e,t)=>e*t);function Or(n,e){if(be(xr(n),"The first argument passed into the `reshape` function must be an array!"),vr(e)&&(e=[e]),be(xr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),be(ea(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{be(vr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Tr(n);let t=Tr(n);be(ta(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(Or(i,e.slice(1)))}return r}Sr.exports=Or});var oe=a((vh,Yr)=>{var wh=$(),xh=P(),Ar=p(),na=m(),Er=h(),Mr=re(),ra=se(),Ir=Math.pow(2,64),N=[];Vr(parseInt(Math.random()*Ir));function sa(n,e){n=A(n);function t(){n+=A("0x9e3779b97f4a7c15");let s=Mr(n);return s=(s^s>>30n)*A("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*A("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function A(n){return BigInt.asUintN(64,BigInt(n))}function jr(n,e){return n=A(n),e=BigInt(e),A(A(n<<e)|A(n>>A(64n-e)))}function Vr(n){if(Ar(n))return Mr(N);{na(Er(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=sa(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function Ur(){let n=A(jr(N[0]+N[3],23)+N[0]),e=A(N[1]<<17n);return N[2]=A(N[2]^N[0]),N[3]=A(N[3]^N[1]),N[1]=A(N[1]^N[2]),N[0]=A(N[0]^N[3]),N[2]=A(N[2]^e),N[3]=jr(N[3],45),parseInt(n)/Ir}function oa(n){if(Ar(n))return Ur();Er(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Ur());return ra(e,n)}Yr.exports={random:oa,seed:Vr}});var ze=a((Th,zr)=>{var Cr=m(),ia=g(),ua=p(),aa=h(),ca=S();function la(n){return Cr(ia(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Cr(ca(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!ua(e)&&aa(e))}zr.exports=la});var ie=a((Oh,kr)=>{function fa(n){return typeof n=="boolean"}kr.exports=fa});var X=a((Sh,$r)=>{function ha(n){return typeof n=="string"}$r.exports=ha});var G=a((Ah,Pr)=>{var qt=m(),yt=p(),bt=h(),ma=pe();function pa(n,e,t=1){qt(!yt(n)&&!yt(e)&&!yt(t),"You must pass two numbers and optionally a step value to the `range` function!"),qt(bt(n)&&bt(e)&&bt(t),"You must pass two numbers and optionally a step value to the `range` function!"),qt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=ma(s)),s}Pr.exports=pa});var ue=a((Eh,Br)=>{var Nt=m(),_r=p(),da=g(),ga=k();function qa(n,e){return n<e?-1:n>e?1:0}function ya(n,e){_r(e)&&(e=qa),Nt(!_r(n),"You must pass an array into the `sort` function!"),Nt(da(n),"You must pass an array into the `sort` function!"),Nt(ga(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Br.exports=ya});var xe=a((jh,Kr)=>{var y=m(),ke=g(),Z=p(),ae=S(),$e=te(),Ne=G(),wt=h(),we=X(),Mh=P(),ba=k(),Na=$(),xt=re(),wa=Q(),Jr=pe(),Fr=ue(),Lr=ie(),Ih=Pe();function xa(n){return wt(n)&&parseInt(n)===n}function va(n){return xa(n)&&n>=0}function Rr(n,e){y(wt(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var _=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(ke(r),"The new values must be a 1-dimensional array!");let s=ae(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(Ne(t._index.length,s[0]).map(o=>"row"+Rr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(ke(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ae(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(we(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ae(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ae(this.values)}isEmpty(){return this.values.filter(t=>!Z(t)).length===0}clear(){let e=this,t=e.copy();return t.values=Na(t.shape),t.index=e.index,t}get(e){let t=this;(we(e)||wt(e))&&(e=[e]);let r=wa((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),Z(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;Z(e)&&(e=t.index),y(ke(e),"The `indices` array must be a 1-dimensional array of strings."),y(ae(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(we(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new _(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;Z(e)&&(e=Ne(0,r[0])),y(ke(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ae(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(va(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new _(Jr(e.values));return t.index=Jr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=Ne(0,e.shape[0]).map(r=>"row"+Rr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new _(xt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(ba(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>Z(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window=="undefined"?20:10;if(t.index.length>r){t=t.get(Ne(0,r/2).concat(Ne(t.index.length-r/2,t.index.length)));let o=xt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Lr(e)||we(e)||Z(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;Z(e)&&(t=!0),we(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Lr(e)&&(t=e);let r=this,s=$e([r.values,r.index]);s=$e(Fr(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new _(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=$e([e.values,e.index]);t=$e(Fr(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new _(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=xt(r.index),o=[],i=r.values.filter((u,c)=>{let l=e(u,c,r.values);return l||o.push(r.index[c]),l});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new _,r.name=t.name,r):(r.values=i,r.index=s,r)}};Kr.exports=_});var vt=a((Vh,Wr)=>{var Ta=m(),Oa=h();function Sa(n,e){Ta(Oa(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}Wr.exports=Sa});var _e=a((Uh,Qr)=>{var Aa=g(),Ea=p();function Ma(n){return typeof n=="object"&&!Ea(n)&&!Aa(n)}Qr.exports=Ma});var Tt=a((Yh,Xr)=>{var Ia=X(),ja=_e(),Va=ie(),Ua=p(),Ya=ee();function Ca(n,e){e=(()=>{if(Ua(e))return!0;if(Va(e))return e;throw new Ya("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>Ia(u)?JSON.stringify(u):ja(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}Xr.exports=Ca});var Zr=a((Ch,Gr)=>{var za=Tt();function ka(n,e,t){let r=za(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=it("fs"),o=it("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}Gr.exports=ka});var Ot=a(($h,es)=>{var F=g(),Hr=ie(),zh=_e(),kh=vt(),$a=z(),Dr=G(),Be=X(),Je=ee(),Fe=p(),L=m();function Pa(n,e,t,r,s,o){return t=(()=>{if(Fe(t))return!1;if(Hr(t))return t;throw new Je("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Fe(r))return!1;if(Hr(r))return r;throw new Je("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Fe(s))return",";if(Be(s))return L(s.length===1,u),s;if(F(s))return L(s.length===2,u),L(s[0].length===1,u),L(s[1].length===1,u),s;throw new Je(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Fe(o))return'"';if(Be(o))return L(o.length===1,u),o;if(F(o))return L(o.length===2,u),L(o[0].length===1,u),L(o[1].length===1,u),o;throw new Je(u)})(),(()=>{let c=e.split(`
`).filter(M=>M.length>0).map(M=>{let I=[],D="",he=!1;for(let J=0;J<M.length;J++){let j=M[J];if(j.match(/\\/g))J++;else if(F(o)&&j===o[0])he=!0;else if(F(o)&&j===o[1])he=!1;else if(Be(o)&&j===o)he=!he;else if(F(s)&&j===s[0]||F(s)&&j===s[1]||Be(s)&&j===s)if(he)D+=j;else{let st=D;try{let ot=JSON.parse(st);F(ot)?I.push(st.trim()):I.push(ot)}catch{I.push(st.trim())}D=""}else D+=j}if(D.length>0){let J=D;try{let j=JSON.parse(J);F(j)?I.push(J.trim()):I.push(j)}catch{I.push(J.trim())}}return I}),l=(()=>{let M=t?c.shift():Dr(0,c[0].length).map(I=>"col"+I);return r&&M.shift(),M})(),d=(()=>r?c.map(I=>I.shift()):Dr(0,c.length).map(I=>"row"+I))(),q=$a(c.map(M=>M.length)),V=new n(c.map(M=>(M.length=q,M)));return t&&(V.columns=l),r&&(V.index=d),V})()}es.exports=Pa});var ns=a((Ph,ts)=>{var _a=m(),Ba=Ot(),Ja=X(),Fa=p(),La=ee();async function Ra(n,e,t,r,s,o,i){t=(()=>Fa(t)?"utf8":(_a(Ja(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return it("fs").readFileSync(e,t)}catch{}throw new La(`The path "${e}" could not be loaded!`)})();return Ba(n,u,r,s,o,i)}ts.exports=Ra});var Le=a((_h,rs)=>{var Ka=h(),Wa=b();function Qa(n){try{return Ka(n)?Math.floor(n):NaN}catch{return NaN}}rs.exports=Wa(Qa)});var St=a((Jh,os)=>{var ss=m(),Xa=p(),Ga=g(),Bh=Le(),{random:Za}=oe();function Ha(n){ss(!Xa(n),"You must pass an array into the `shuffle` function!"),ss(Ga(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Za()*t.length);e.push(t.splice(s,1)[0])}return e}os.exports=Ha});var as=a((Fh,us)=>{var Da=p(),ec=m(),is=St();function tc(n,e){return Da(e)&&(e=0),ec(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?is(n.index):null,e===1?is(n.columns):null)}us.exports=tc});var hs=a((Lh,fs)=>{var cs=m(),nc=k(),rc=p(),Re=xe(),ve=x();function ls(n){let e={};return ve(n).forEach((t,r)=>{e[t]=r}),e}function ce(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function sc(n,e,t,r){cs(nc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),rc(r)&&(r=0),cs(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=ls(s.index),i=ls(s.columns);if(r===0){let u=s.values.filter((c,l)=>{let d=new Re(c);d.name=e.index[l],d.index=e.columns;let q=t(d,l,e);return q||delete o[s.index[l]],q});if(ve(u).length===0)return new n;if(u.length===1){let c=new Re(ve(u));return c.name=ce(o)[0],c.index=ce(i),c}s.values=u,s.index=ce(o)}else if(r===1){s=s.transpose();let u=s.values.filter((c,l)=>{let d=new Re(c);d.name=e.columns[l],d.index=e.index;let q=t(d,l,e);return q||delete i[s.index[l]],q});if(ve(u).length===0)return new n;if(u.length===1){let c=new Re(ve(u));return c.name=ce(i)[0],c.index=ce(o),c}s.values=u,s.index=ce(i),s=s.transpose()}return s}fs.exports=sc});var Pe=a((Qh,gs)=>{var{random:oc}=oe(),Rh=P(),f=m(),H=re(),ms=Ce(),ic=ze(),Ke=x(),T=g(),At=ie(),ps=ne(),uc=k(),R=h(),E=X(),O=p(),Kh=z(),Wh=Ie(),ac=$(),U=G(),C=xe(),ds=Q(),v=S(),cc=ue(),Te=te(),We=vt(),lc=Zr(),fc=Tt(),hc=ns(),mc=Ot(),pc=as(),dc=hs();function Qe(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function gc(n){return R(n)&&parseInt(n)===n}function Xe(n){return gc(n)&&n>=0}function qc(n){return n instanceof Object&&!T(n)}function le(n){return n instanceof C}var w=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){f(T(r),"The new values must be a 2-dimensional array!");let s=v(r);f(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(U(t._index.length,s[0]).map(o=>"row"+We(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(U(t._columns.length,s[1]).map(o=>"col"+We(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){f(T(r),"The new columns list must be a 1-dimensional array of strings!"),f(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),f(v(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Qe(8):o.trim()));let s=(()=>{let o=ms(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Qe(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){f(T(r),"The new index must be a 1-dimensional array of strings!"),f(r.length===t.shape[0],"The new index must be the same length as the old index!"),f(v(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Qe(8):o.trim()));let s=(()=>{let o=ms(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Qe(8):o),t._index=r}}),f(O(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(T(e)){let r=v(e);f(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=Te(r);let s=v(t.values);t._index=U(0,s[0]).map(o=>"row"+We(o,(s[0]-1).toString().length))}}get shape(){return v(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return ds(this.values).filter(t=>!O(t)).length===0}clear(){let e=this,t=new w(ac(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(E(e)||R(e))&&(e=[e]),(E(t)||R(t))&&(t=[t]);let s=ds((e||[]).concat(t||[]).map(o=>typeof o));return f(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&f(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(f(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),f(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),O(e)||(e=e.map(o=>{if(typeof o=="string")return f(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Index ${o} is out of bounds!`),f(parseInt(o)===o,"Row numbers must be integers!"),f(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),O(t)||(t=t.map(o=>{if(typeof o=="string")return f(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Column ${o} is out of bounds!`),f(parseInt(o)===o,"Column numbers must be integers!"),f(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;O(e)&&(e=r.index),O(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),f(T(e)&&T(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(v(e).length===1&&v(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(e.length>0,"The `rows` array must contain at least one row name."),f(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{f(E(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{f(E(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return Ke(s)[0];if(e.length===1){let i=new C(Ke(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new C(Ke(s));return i.name=t[0],i.index=e,i}let o=new w(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;O(e)&&(e=U(0,s[0])),O(t)&&(t=U(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),f(T(e)&&T(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(v(e).length===1&&v(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(e.length>0,"The `rowIndices` array must contain at least one index."),f(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{f(Xe(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{f(Xe(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new w(Te(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=U(0,e.shape[0]).map(r=>"row"+We(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new w;let t=new w(H(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;O(t)?(s=e,f(!T(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,f(E(r),"When using two parameters for the `assign` method, the first parameter must be a string."),f(le(s)||T(s)&&v(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),f(qc(s)||le(s)||T(s)&&v(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(le(s)){let i={};return f(o.isEmpty()||ps(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(T(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(c=>{let l=s[c];if(f(T(l),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),f(v(l).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=Te([l]),i.columns=[c],u=i.shape;else{f(l.length===u[0],`Column "${c}" in the new data is not the same length as the other columns in the original DataFrame.`);let d=i.columns.indexOf(c);d<0&&(i.columns.push(c),d=i.columns.indexOf(c)),i.values.forEach((q,V)=>{q[d]=l[V]})}}),i}}apply(e,t){t=t||0,f(uc(e),"The first parameter to the `apply` method must be a function."),f(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=Te(r.values).map((i,u)=>{let c=new C(i);return c.name=r.columns[u],c.index=r.index,e(c,u,r)});if(v(o).length===1){let i=new C(o);return i.index=H(r.columns),i}else{let i=new w(Te(o));return i.index=H(r.index),i.columns=H(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new C(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(v(s).length===1){let o=new C(s);return o.index=H(r.index),o}else{let o=new w(s);return o.index=H(r.index),o.columns=H(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,f(Xe(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(c){if(r>0){let l=0;for(let d=0;d<c.length;d++){let q=c[d];if(O(q)&&l++,l>=r)return[]}}else if(t==="any")for(let l=0;l<c.length;l++){let d=c[l];if(O(d))return[]}else if(t==="all"){for(let l=0;l<c.length;l++){let d=c[l];if(!O(d))return c}return[]}return c}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let c=i.values.map(s).filter(d=>d.length>0);if(v(c).length<2)return new w;i.values=c;let l=i.get(null,u);if(O(l))return new w;E(l)&&(l=[l]),le(l)&&(l=l.values),i.index=l,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let c=i.values.map(s).filter(d=>d.length>0);if(v(c).length<2)return new w;i.values=c;let l=i.get(null,u);if(O(l))return new w;E(l)&&(l=[l]),le(l)&&(l=l.values),i.index=l,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,f(Xe(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(c){let l=ic(c);return r>0?c.length-l.length<r:t==="any"?l.length===c.length:t==="all"?l.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let c=i.index.filter(l=>{let d=i.get(l,null).values;return s(d)});return c.length>0?i.get(c,null):new w}else if(e===1){let c=i.columns.filter(l=>{let d=i.get(null,l).values;return s(d)});return c.length>0?i.get(null,c):new w}return i}drop(e,t){let r=this;O(e)&&(e=[]),O(t)&&(t=[]),(E(e)||R(e))&&(e=[e]),(E(t)||R(t))&&(t=[t]),f(T(e),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(T(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(v(e).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(v(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;r.index.forEach((u,c)=>{e.indexOf(u)<0&&e.indexOf(c)<0&&(s||(s=[]),s.push(u))}),r.columns.forEach((u,c)=>{t.indexOf(u)<0&&t.indexOf(c)<0&&(o||(o=[]),o.push(u))});let i=r.get(s,o);if(le(i)){let u=new w;u=u.assign(i),r.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){let e=this,t={};return e.values.forEach((r,s)=>{let o={};r.forEach((i,u)=>{o[e.columns[u]]=i}),t[e.index[s]]=o}),t}toCSVString(e){return fc(this,e)}toCSV(e,t){return lc(this,e,t)}print(){function e(q,V){return E(q)&&q.length>V?q.substring(0,V-3)+"...":q}let t=this;if(ps(t.shape,[0]))return console.table({}),t;let r=typeof window=="undefined"?20:10,s=parseInt(r/2),o=typeof window=="undefined"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>t.index.length?null:U(0,s).concat(U(t.index.length-s,t.index.length)),c=o>t.columns.length?null:U(0,i).concat(U(t.columns.length-i,t.columns.length)),l=t.get(u,c);l instanceof C&&(t.shape[0]===1?(l=new w([l.values]),l.index=t.index,l.columns=new C(t.columns).get(c).values):t.shape[1]===1&&(l=new w([l.values]).transpose(),l.index=new C(t.index).get(u).values,l.columns=t.columns)),r<=t.index.length&&(l._index.splice(s,0,"..."),l._values.splice(s,0,U(0,l.columns.length).map(q=>"..."))),o<=t.columns.length&&(l._columns.splice(i,0,"..."),l._values=l._values.map(q=>(q.splice(i,0,"..."),q)));let d=28;return l instanceof C?(l.values=l.values.map(q=>e(q,d)),l.name=e(l.name,d),l.index=l.index.map(q=>e(q,d))):(l.values=l.values.map(q=>q.map(V=>e(V,d))),l.columns=l.columns.map(q=>e(q,d)),l.index=l.index.map(q=>e(q,d))),console.table(l.toObject()),t}sort(e,t){let s=this.copy(),o=oc().toString();return s=s.assign(o,s.index),O(e)&&(e=[o],t=[!0]),(R(e)||E(e))&&(e=[e],(At(t)||E(t))&&(t=[t])),f(T(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),f(v(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),O(t)&&(t=U(0,e.length).map(i=>!0)),f(T(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),f(v(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),f(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(i=>{if(f(E(i)||R(i),"Column references can either be column names (as strings) or column indices (as whole numbers)."),E(i)){let u=s.columns.indexOf(i);return f(u>-1,`The column "${i}" does not exist!`),u}if(R(i))return f(parseInt(i)===i,"Column indices must be whole numbers!"),f(i>=0,`The column index ${i} is out of bounds!`),f(i<s.columns.length,`The index ${i} is out of bounds!`),i}),t=t.map(i=>{if(f(E(i)||At(i),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),E(i)){let u=i.trim().toLowerCase();return f(u==="ascending"||u==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),u==="ascending"}if(At(i))return i}),s.values=cc(s.values,(i,u)=>{let c=0;for(;i[e[c]]===u[e[c]]&&c<e.length;)c++;let l=t[c];if(i[e[c]]===u[e[c]])return 0;if(i[e[c]]<u[e[c]])return l?-1:1;if(i[e[c]]>u[e[c]])return l?1:-1}),s.index=Ke(s.get(null,o).values),s=s.dropColumns(o),s}sortByIndex(){return this.sort()}filter(e,t){return dc(w,this,e,t)}shuffle(e){return pc(this,e)}};w.fromCSV=function(){return hc(w,...arguments)};w.fromCSVString=function(){return mc(w,...arguments)};gs.exports=w});var ws=a((Xh,Ns)=>{var qs=m(),ys=g(),bs=x();function yc(n,e){qs(ys(n),"You must pass two arrays into the `diff` function!"),qs(ys(e),"You must pass two arrays into the `diff` function!");let t=bs(n),r=bs(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}Ns.exports=yc});var Ge=a((Gh,vs)=>{var xs=h(),bc=b();function Nc(n,e){try{return xs(n)?xs(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}vs.exports=bc(Nc)});var Ze=a((Zh,Ts)=>{var wc=me(),xc=x();function vc(n){try{return wc(...xc(n))}catch{return NaN}}Ts.exports=vc});var Et=a((Hh,Os)=>{var Tc=h(),Oc=b();function Sc(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Tc(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}Os.exports=Oc(Sc)});var fe=a((Dh,Ss)=>{var Ac=Et();function Ec(n,e){return Ac(n,e)}Ss.exports=Ec});var Mt=a((em,As)=>{var Mc=me(),Ic=fe();function jc(n,e){return Mc(n,Ic(e,-1))}As.exports=jc});var Ms=a((tm,Es)=>{var Vc=Ge(),Uc=Ze(),Yc=Ue(),Cc=Mt();function zc(n,e){try{return Yc(Uc(Vc(Cc(n,e),2)))}catch{return NaN}}Es.exports=zc});var js=a((nm,Is)=>{var kc=fe(),$c=Ge();function Pc(n,e){return kc(n,$c(e,-1))}Is.exports=Pc});var It=a((sm,ks)=>{var Oe=m(),Vs=p(),Us=g(),_c=h(),rm=ne(),Ys=x(),Cs=S(),Bc=Ze(),Jc=fe(),zs=te();function He(n,e){Oe(!Vs(n)&&!Vs(e),"You must pass two arrays of numbers into the `dot` function!"),Oe(Us(n)&&Us(e),"You must pass two arrays of numbers into the `dot` function!"),Ys(n).concat(Ys(e)).forEach(s=>{Oe(_c(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Cs(n),r=Cs(e);if(Oe(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Oe(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return Bc(Jc(n,e));if(t.length===1&&r.length===2)return zs(e).map(s=>He(n,s));if(t.length===2&&r.length===1)return n.map(s=>He(s,e));if(t.length===2&&r.length===2){let s=zs(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let c=0;c<s.length;c++)u.push(He(n[i],s[c]));o.push(u)}return o}}ks.exports=He});var _s=a((om,Ps)=>{var $s=m(),Fc=g(),Lc=p(),Rc=S();function Kc(n){return $s(Fc(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),$s(Rc(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!Lc(e))}Ps.exports=Kc});var Ks=a((im,Rs)=>{var Bs=m(),Js=p(),Fs=g(),Wc=z(),Ls=S();function Qc(n,e){Bs(Fs(n)&&Fs(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Bs(Ls(n).length===1&&Ls(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Wc([n.length,e.length]);s++)!Js(n[s])&&!Js(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Rs.exports=Qc});var Ds=a((um,Hs)=>{var Ws=m(),Qs=p(),Xs=g(),Gs=h(),Xc=z(),Zs=S();function Gc(n,e){Ws(Xs(n)&&Xs(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Ws(Zs(n).length===1&&Zs(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Xc([n.length,e.length]);s++)!Qs(n[s])&&Gs(n[s])&&!Qs(e[s])&&Gs(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Hs.exports=Gc});var to=a((am,eo)=>{var Zc=b(),Hc=h();function Dc(n){try{return Hc(n)?Math.exp(n):NaN}catch{return NaN}}eo.exports=Zc(Dc)});var so=a((cm,ro)=>{var el=b();function no(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*no(n-1)}catch{return NaN}}ro.exports=el(no)});var io=a((lm,oo)=>{var tl=h(),nl=b();function rl(n){try{let e=JSON.parse(n);return tl(e)?e:NaN}catch{return NaN}}oo.exports=nl(rl)});var jt=a((fm,uo)=>{var sl=h(),ol=b();function il(n){try{let e=JSON.parse(n);return sl(e)?parseInt(e):NaN}catch{return NaN}}uo.exports=ol(il)});var lo=a((hm,co)=>{var K=m(),ul=p(),Vt=g(),Ut=h(),ao=S(),al=jt();function Yt(n,e){return K(!ul(n),"You must pass an array and an index into the `getValueAt` function!"),K(Vt(n),"You must pass an array and an index into the `getValueAt` function!"),K(Ut(e)||Vt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Vt(e)&&(K(ao(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{K(Ut(t)&&al(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),K(e.length<=ao(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Ut(e)?(K(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(K(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Yt(n[e[0]],e.slice(1))):Yt(n,e[0])}co.exports=Yt});var Ct=a((dm,fo)=>{var mm=$(),pm=P(),cl=h(),ll=se();function fl(n){cl(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return ll(e,n)}fo.exports=fl});var mo=a((gm,ho)=>{var De=m(),hl=p(),ml=h(),pl=Ct();function dl(n){De(!hl(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),De(ml(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),De(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),De(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=pl([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}ho.exports=dl});var zt=a((ym,po)=>{var qm=m(),gl=Q();function ql(){return gl([...arguments])}po.exports=ql});var qo=a((bm,go)=>{var yl=g(),bl=x(),Nl=zt();function wl(){let n=Object.values(arguments).map(r=>yl(r)?bl(r):[r]),e=[];return Nl(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}go.exports=wl});var $t=a((wm,No)=>{var Se=m(),et=p(),yo=h(),kt=g(),xl=G(),vl=x(),Nm=S(),Tl=Le();function bo(n,e){if(Se(!et(n),"You must pass an array into the `slice` function!"),Se(kt(n),"You must pass an array into the `slice` function!"),et(e))return n.slice();Se(kt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),vl(e).forEach(s=>{Se(et(s)||yo(s)&&Tl(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];et(t)&&(t=xl(0,n.length)),yo(t)&&(t=[t]);let r=[];return t.forEach(s=>{Se(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];kt(o)?r.push(bo(n[s],e.slice(1,e.length))):r.push(n[s])}),r}No.exports=bo});var To=a((xm,vo)=>{var B=m(),Ol=p(),Sl=g(),Pt=h(),Al=x(),El=S(),tt=$t(),Ml=It(),wo=me(),xo=fe(),_t=ht(),W=G();function Bt(n){B(!Ol(n),"You must pass a square 2D array into the `inverse` function!"),B(Sl(n),"You must pass a square 2D array into the `inverse` function!"),Al(n).forEach(t=>B(Pt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=El(n);if(B(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return B(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;B(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return xo(u,1/i)}else if(e[0]>1){let t=(r,s)=>Pt(r)||Pt(s)?xo(r,s):Ml(r,s);for(let r=1;r<e[0]-1;r++)try{let s=tt(n,[W(0,r),W(0,r)]),o=tt(n,[W(0,r),W(r,e[0])]),i=tt(n,[W(r,e[0]),W(0,r)]),u=tt(n,[W(r,e[0]),W(r,e[0])]),c=Bt(s),l=Bt(wo(u,t(-1,t(t(i,c),o)))),d=wo(c,t(t(t(t(c,o),l),i),c)),q=t(-1,t(t(c,o),l)),V=t(-1,t(t(l,i),c)),M=l;return _t(_t(d,q,1),_t(V,M,1),0)}catch{}B(!1,"This matrix cannot be inverted!")}}vo.exports=Bt});var So=a((vm,Oo)=>{var Il=b(),Jt=h();function jl(n,e,t){try{return Jt(n)?Jt(e)?Jt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}Oo.exports=Il(jl)});var Mo=a((Tm,Eo)=>{var Ao=h(),Vl=p(),Ul=b();function Yl(n,e){try{return e=Vl(e)?Math.E:e,Ao(n)?Ao(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}Eo.exports=Ul(Yl)});var jo=a((Om,Io)=>{var Ae=h(),Cl=b();function zl(n,e,t,r,s){try{return Ae(n)?Ae(e)?Ae(t)?Ae(r)?Ae(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Io.exports=Cl(zl)});var Uo=a((Im,Vo)=>{var Sm=m(),Am=p(),Em=g(),Mm=h(),kl=x(),$l=ue(),Pl=ze();function _l(n){try{let e=kl(n),t=Pl(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=$l(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Vo.exports=_l});var zo=a((jm,Co)=>{var Bl=x(),Jl=Ce(),Fl=Q(),Yo=ue();function Ll(n){try{if(n.length===0)return NaN;let e=Bl(n);if(e.length===0)return NaN;let t={},r=Fl(e);r.forEach(u=>{t[u]=Jl(e,u)});let s=Yo(r,(u,c)=>t[c]-t[u]),o=s[0],i=Yo(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Co.exports=Ll});var _o=a((Ym,Po)=>{var Rl=p(),Vm=$(),Um=P(),{random:ko}=oe(),Kl=se(),Wl=h();function $o(){let n=ko(),e=ko();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function Ql(n){if(Rl(n))return $o();Wl(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push($o());return Kl(e,n)}Po.exports=Ql});var Jo=a((km,Bo)=>{var Cm=$(),zm=P(),Xl=se(),Gl=h();function Zl(n){Gl(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Xl(e,n)}Bo.exports=Zl});var Ro=a(($m,Lo)=>{var Fo=g(),Hl=h(),nt=m(),Dl=p();function Ft(n,e){if(nt(Fo(n),"The `permute` function only works on arrays!"),Dl(e)&&(e=n.length),nt(Hl(e),"`r` must be a whole number!"),e>n.length)return Ft(n);if(e<=0)return[[]];if(nt(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{nt(!Fo(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);Ft(u,e-1).forEach(l=>{t.push([r].concat(l))})}),t}Lo.exports=Ft});var Xo=a((Pm,Qo)=>{var ef=g(),tf=S(),Ko=Pe(),Wo=xe();function nf(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(ef(e)){let t=tf(e);t.length===1?new Wo(e).print():t.length==2?new Ko(e).print():console.log(e)}else e instanceof Ko||e instanceof Wo?e.print():console.log(e)})}Qo.exports=nf});var Zo=a((_m,Go)=>{var rf=h(),sf=b();function of(n){try{return rf(n)?Math.round(n):NaN}catch{return NaN}}Go.exports=sf(of)});var Lt=a((Bm,ei)=>{var Ho=m(),uf=h(),Do=g(),af=re();function cf(n,e,t){Ho(Do(n),"The first argument passed into the `setValueAt` function must be an array!"),uf(e)&&(e=[e]),Ho(Do(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=af(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}ei.exports=cf});var ni=a((Jm,ti)=>{var lf=h(),ff=b();function hf(n){try{return lf(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}ti.exports=ff(hf)});var si=a((Fm,ri)=>{var mf=h(),pf=b();function df(n){try{return mf(n)?Math.sin(n):NaN}catch{return NaN}}ri.exports=pf(df)});var ii=a((Lm,oi)=>{var gf=Ye();function qf(n){return gf(n)}oi.exports=qf});var ai=a((Rm,ui)=>{var yf=h(),bf=b();function Nf(n){try{return yf(n)?Math.tan(n):NaN}catch{return NaN}}ui.exports=bf(Nf)});var rt=a((Km,li)=>{var ci=k();function wf(n,e){assert(ci(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function xf(n,e){assert(ci(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}li.exports={timeSync:wf,timeAsync:xf}});var mi=a((Wm,hi)=>{var fi=m(),vf=g(),Tf=k(),Of=P(),Sf=qe(),Af=Lt(),Ef=x();function Mf(n,e){fi(vf(n),"The first argument passed into the `where` function must be an array!"),fi(Tf(e),"The second argument passed into the `where` function must be a function!");let t=Ef(n).length,r=Of(n,e),s=[],o=0,i=!1;for(;!i;){let u=Sf(r,!0);u?(s[o]=u,r=Af(r,u,null),o++):i=!0}return o===0?null:s}hi.exports=Mf});var If=a((Qm,Rt)=>{var Ee={abs:ct(),add:me(),append:ht(),apply:P(),arccos:Tn(),arcsin:Sn(),arctan:En(),argmax:kn(),argmin:_n(),assert:m(),ceil:Jn(),chop:Rn(),clamp:Wn(),cohensd:Dn(),combine:rr(),copy:re(),correl:hr(),cos:pr(),count:Ce(),covariance:gt(),DataFrame:Pe(),diff:ws(),distance:Ms(),divide:js(),dot:It(),dropMissing:_s(),dropMissingPairwise:Ks(),dropNaN:ze(),dropNaNPairwise:Ds(),exp:to(),factorial:so(),flatten:x(),float:io(),floor:Le(),getValueAt:lo(),identity:mo(),indexOf:qe(),int:jt(),intersect:qo(),inverse:To(),isArray:g(),isBoolean:ie(),isEqual:ne(),isFunction:k(),isNumber:h(),isObject:_e(),isString:X(),isUndefined:p(),lerp:So(),log:Mo(),map:jo(),MathError:ee(),max:z(),mean:ye(),median:Uo(),min:Ie(),mode:zo(),multiply:Et(),ndarray:$(),normal:_o(),ones:Jo(),permute:Ro(),pow:Ge(),print:Xo(),random:oe().random,range:G(),reshape:se(),reverse:pe(),round:Zo(),scale:fe(),seed:oe().seed,Series:xe(),set:Q(),setValueAt:Lt(),shape:S(),shuffle:St(),sign:ni(),sin:si(),slice:$t(),sort:ue(),sqrt:Ue(),std:Ye(),stdev:ii(),subtract:Mt(),sum:Ze(),tan:ai(),time:rt().timeSync,timeSync:rt().timeSync,timeAsync:rt().timeAsync,transpose:te(),union:zt(),variance:je(),vectorize:b(),where:mi(),zeros:Ct(),dump:function(){Object.keys(Ee).forEach(n=>{typeof global!="undefined"&&(global[n]=Ee[n]),typeof window!="undefined"&&(window[n]=Ee[n])})}};typeof Rt!="undefined"&&(Rt.exports=Ee);typeof window!="undefined"&&(window.JSMathTools=Ee)});If();})();
