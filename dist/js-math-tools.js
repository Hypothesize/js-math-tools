(()=>{var st=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var c=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var h=c((gf,Lt)=>{function ui(n){return typeof n=="number"&&!isNaN(n)}Lt.exports=ui});var te=c((qf,Kt)=>{var Rt=class extends Error{constructor(e){typeof window!="undefined"?super("\u{1F449} "+e):super(`

\u{1F449} [31m`+e+`

[0m`)}};Kt.exports=Rt});var m=c((yf,Wt)=>{var ai=te();Wt.exports=function(n,e){if(!n)throw new ai(e)}});var d=c((bf,Ft)=>{function ci(n){return n===null||typeof n=="undefined"}Ft.exports=ci});var g=c((Nf,Qt)=>{function li(n){return n instanceof Array}Qt.exports=li});var v=c((wf,Ht)=>{var Xt=m(),fi=d(),Gt=g();function Zt(n){Xt(!fi(n),"You must pass one array into the `flatten` function!"),Xt(Gt(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){Gt(t)?e=e.concat(Zt(t)):e.push(t)}),e}Ht.exports=Zt});var z=c((xf,Dt)=>{var hi=v(),mi=h();function pi(n){try{let e=hi(n),t=-1/0;for(let r=0;r<e.length;r++){if(!mi(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}Dt.exports=pi});var L=c((vf,en)=>{function di(n){return typeof n=="function"}en.exports=di});var b=c((Tf,tn)=>{var ot=m(),gi=d(),it=g(),qi=z(),yi=L();function bi(n){return ot(!gi(n),"You must pass a function into the `vectorize` function!"),ot(yi(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>it(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>it(arguments[i])).map(i=>arguments[i].length),o=qi(s);s.forEach(i=>{ot(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(a=>it(arguments[a])?arguments[a][i]:arguments[a]);r.push(e(...u))}return r}else return n(...arguments)}}tn.exports=bi});var ut=c((Of,nn)=>{var Ni=h(),wi=b();function xi(n){try{return Ni(n)?Math.abs(n):NaN}catch{return NaN}}nn.exports=wi(xi)});var pe=c((Sf,rn)=>{var vi=h(),Ti=b();function Oi(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!vi(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}rn.exports=Ti(Oi)});var S=c((Af,un)=>{var Ee=m(),Si=d(),sn=g(),Ai=z();function on(n){Ee(!Si(n),"You must pass an array into the `shape` function!"),Ee(sn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>sn(r));if(t.indexOf(!0)>-1){Ee(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Ai(r);r.forEach(function(o){Ee(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(on(n[0]))}return e}un.exports=on});var de=c((Ef,cn)=>{var an=m(),Ei=d(),Mi=g();function Ii(n){an(!Ei(n),"You must pass an array into the `reverse` function!"),an(Mi(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}cn.exports=Ii});var k=c((Mf,fn)=>{var ge=m(),ji=d(),Vi=g(),Ui=h(),Yi=v(),qe="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function ln(n,e){if(e||(ge(!ji(n),qe),Vi(n)||(n=[n]),n=Yi(n),ge(n.length>0,qe),n.forEach(t=>{ge(Ui(t),qe),ge(parseInt(t)===t,qe),ge(t>=0,qe)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(ln(n.slice(1),!0));return t}}fn.exports=ln});var ne=c((If,mn)=>{var at=m(),Ci=d(),zi=g(),ki=S(),hn=de(),$i=k();function Pi(n){at(!Ci(n),"You must pass an array into the `transpose` function!"),at(zi(n),"You must pass an array into the `transpose` function!");let e=ki(n);if(at(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return hn(n);if(e.length===2){let t=$i(hn(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}mn.exports=Pi});var lt=c((jf,yn)=>{var C=m(),pn=d(),dn=g(),_i=h(),gn=S(),ct=ne();function qn(n,e,t=0){C(!pn(n),"You must pass two arrays into the `append` function!"),C(!pn(e),"You must pass two arrays into the `append` function!"),C(dn(n),"You must pass two arrays into the `append` function!"),C(dn(e),"You must pass two arrays into the `append` function!"),C(_i(t),"The `axis` argument to the `append` function must be 0 or 1!"),C(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),C(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=gn(n),s=gn(e);C(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),C(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&C(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(C(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return ct(qn(ct(n),ct(e),0))}}yn.exports=qn});var $=c((Vf,bn)=>{var Bi=b();function Ji(n,e){try{return e(n)}catch{return NaN}}bn.exports=Bi(Ji)});var wn=c((Uf,Nn)=>{var Li=h(),Ri=b();function Ki(n){try{return Li(n)?Math.acos(n):NaN}catch{return NaN}}Nn.exports=Ri(Ki)});var vn=c((Yf,xn)=>{var Wi=h(),Fi=b();function Qi(n){try{return Wi(n)?Math.asin(n):NaN}catch{return NaN}}xn.exports=Fi(Qi)});var On=c((Cf,Tn)=>{var Xi=h(),Gi=b();function Zi(n){try{return Xi(n)?Math.atan(n):NaN}catch{return NaN}}Tn.exports=Gi(Zi)});var re=c((kf,An)=>{var zf=g();function Sn(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!Sn(n[u],e[u]))return!1}return!0}}}An.exports=Sn});var ye=c(($f,Vn)=>{var En=m(),Hi=d(),Mn=g(),ft=S(),In=re();function jn(n,e,t){if(En(!Hi(n),"You must pass an array and a value into the `indexOf` function!"),En(Mn(n),"You must pass an array and a value into the `indexOf` function!"),ft(n).length===1||Mn(e)&&In(ft(n[0]),ft(e))){for(let r=0;r<n.length;r++){let s=n[r];if(In(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=jn(s,e);if(o)return[r].concat(o)}return null}Vn.exports=jn});var Yn=c((Pf,Un)=>{var Di=ye(),eu=z();function tu(n){try{return Di(n,eu(n))}catch{return NaN}}Un.exports=tu});var Me=c((_f,Cn)=>{var nu=v(),ru=h();function su(n){try{let e=nu(n),t=1/0;for(let r=0;r<e.length;r++){if(!ru(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Cn.exports=su});var kn=c((Bf,zn)=>{var ou=ye(),iu=Me();function uu(n){try{return ou(n,iu(n))}catch{return NaN}}zn.exports=uu});var Pn=c((Jf,$n)=>{var au=h(),cu=b();function lu(n){try{return au(n)?Math.ceil(n):NaN}catch{return NaN}}$n.exports=cu(lu)});var Jn=c((Lf,Bn)=>{var fu=d(),hu=ut(),mu=b(),_n=h();function pu(n,e){try{if(!_n(n))return NaN;if(fu(e))e=1e-10;else if(!_n(e))return NaN;return hu(n)<e?0:n}catch{return NaN}}Bn.exports=mu(pu)});var Rn=c((Rf,Ln)=>{var ht=h(),du=b();function gu(n,e,t){try{return ht(n)?ht(e)?ht(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}Ln.exports=du(gu)});var be=c((Kf,Kn)=>{var qu=h(),yu=v();function bu(n){try{let e=yu(n),t=0;for(let r=0;r<e.length;r++){if(!qu(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}Kn.exports=bu});var Ie=c((Wf,Wn)=>{var Nu=be(),wu=v(),xu=h();function vu(n){try{let e=wu(n),t=Nu(e),r=0;for(let s=0;s<e.length;s++){if(!xu(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}Wn.exports=vu});var Gn=c((Ff,Xn)=>{var Fn=be(),Qn=Ie();function Tu(n,e){try{let t=Fn(n),r=Fn(e),s=Math.sqrt((Qn(n)+Qn(e))/2);return(t-r)/s}catch{return NaN}}Xn.exports=Tu});var er=c((Qf,Dn)=>{var Zn=g(),Ou=h(),je=m();function Hn(n,e){if(je(Zn(n),"The `combine` function only works on arrays!"),je(Ou(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(je(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{je(!Zn(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;Hn(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}Dn.exports=Hn});var se=c((Gf,tr)=>{var Xf=m(),Su=d(),Au=g();function mt(n){if(typeof n=="object"){if(Su(n))return n;if(Au(n))return n.map(mt);{let e={};return Object.keys(n).forEach(function(t){e[t]=mt(n[t])}),e}}else return n}tr.exports=mt});var pt=c((Zf,sr)=>{var nr=be(),rr=d();function Eu(n,e){try{let t=nr(n),r=nr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(rr(n[i]))return NaN;if(rr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}sr.exports=Eu});var Ve=c((Hf,or)=>{var Mu=h(),Iu=b();function ju(n){try{return Mu(n)?Math.sqrt(n):NaN}catch{return NaN}}or.exports=Iu(ju)});var Ue=c((Df,ir)=>{var Vu=Ve(),Uu=Ie();function Yu(n){try{return Vu(Uu(n))}catch{return NaN}}ir.exports=Yu});var cr=c((eh,ar)=>{var Cu=pt(),ur=Ue();function zu(n,e){try{return Cu(n,e)/(ur(n)*ur(e))}catch{return NaN}}ar.exports=zu});var fr=c((th,lr)=>{var ku=h(),$u=b();function Pu(n){try{return ku(n)?Math.cos(n):NaN}catch{return NaN}}lr.exports=$u(Pu)});var X=c((nh,mr)=>{var hr=m(),_u=d(),Bu=g(),Ju=v();function Lu(n){hr(!_u(n),"You must pass an array into the `set` function!"),hr(Bu(n),"You must pass an array into the `set` function!");let e=[],t={};return Ju(n).forEach(r=>{let s=typeof r=="undefined"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}mr.exports=Lu});var Ye=c((rh,yr)=>{var pr=m(),dr=d(),gr=g(),qr=v(),Ru=re(),Ku=X();function Wu(n,e){pr(!dr(n),"You must pass an array and some items to count into the `count` function!"),pr(gr(n),"You must pass an array and some items to count into the `count` function!");let t=qr(n);return e=dr(e)?Ku(n):e,gr(e)?qr(e).map(function(r){let s=t.filter(o=>Ru(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}yr.exports=Wu});var oe=c((sh,vr)=>{var Ne=m(),br=g(),Nr=h(),Fu=S(),wr=v(),Qu=n=>n.reduce((e,t)=>e*t);function xr(n,e){if(Ne(br(n),"The first argument passed into the `reshape` function must be an array!"),Nr(e)&&(e=[e]),Ne(br(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),Ne(Fu(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{Ne(Nr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return wr(n);let t=wr(n);Ne(Qu(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(xr(i,e.slice(1)))}return r}vr.exports=xr});var ie=c((uh,jr)=>{var oh=k(),ih=$(),Tr=d(),Xu=m(),Or=h(),Sr=se(),Gu=oe(),Ar=Math.pow(2,64),N=[];Mr(parseInt(Math.random()*Ar));function Zu(n,e){n=A(n);function t(){n+=A("0x9e3779b97f4a7c15");let s=Sr(n);return s=(s^s>>30n)*A("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*A("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function A(n){return BigInt.asUintN(64,BigInt(n))}function Er(n,e){return n=A(n),e=BigInt(e),A(A(n<<e)|A(n>>A(64n-e)))}function Mr(n){if(Tr(n))return Sr(N);{Xu(Or(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=Zu(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function Ir(){let n=A(Er(N[0]+N[3],23)+N[0]),e=A(N[1]<<17n);return N[2]=A(N[2]^N[0]),N[3]=A(N[3]^N[1]),N[1]=A(N[1]^N[2]),N[0]=A(N[0]^N[3]),N[2]=A(N[2]^e),N[3]=Er(N[3],45),parseInt(n)/Ar}function Hu(n){if(Tr(n))return Ir();Or(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Ir());return Gu(e,n)}jr.exports={random:Hu,seed:Mr}});var Ce=c((ah,Ur)=>{var Vr=m(),Du=g(),ea=d(),ta=h(),na=S();function ra(n){return Vr(Du(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Vr(na(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!ea(e)&&ta(e))}Ur.exports=ra});var ue=c((ch,Yr)=>{function sa(n){return typeof n=="boolean"}Yr.exports=sa});var G=c((lh,Cr)=>{function oa(n){return typeof n=="string"}Cr.exports=oa});var Z=c((fh,zr)=>{var dt=m(),gt=d(),qt=h(),ia=de();function ua(n,e,t=1){dt(!gt(n)&&!gt(e)&&!gt(t),"You must pass two numbers and optionally a step value to the `range` function!"),dt(qt(n)&&qt(e)&&qt(t),"You must pass two numbers and optionally a step value to the `range` function!"),dt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=ia(s)),s}zr.exports=ua});var ae=c((hh,$r)=>{var yt=m(),kr=d(),aa=g(),ca=L();function la(n,e){return n<e?-1:n>e?1:0}function fa(n,e){kr(e)&&(e=la),yt(!kr(n),"You must pass an array into the `sort` function!"),yt(aa(n),"You must pass an array into the `sort` function!"),yt(ca(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}$r.exports=fa});var $e=c((dh,Lr)=>{var y=m(),ze=g(),H=d(),ce=S(),ke=ne(),we=Z(),bt=h(),xe=G(),mh=$(),ha=L(),ma=k(),Nt=se(),pa=X(),Pr=de(),_r=ae(),Br=ue(),ph=Pe();function da(n){return bt(n)&&parseInt(n)===n}function ga(n){return da(n)&&n>=0}function Jr(n,e){y(bt(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var P=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y(ze(r),"The new values must be a 1-dimensional array!");let s=ce(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(we(t._index.length,s[0]).map(o=>"row"+Jr(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y(ze(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ce(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ce(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ce(this.values)}isEmpty(){return this.values.filter(t=>!H(t)).length===0}clear(){let e=this,t=e.copy();return t.values=ma(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||bt(e))&&(e=[e]);let r=pa((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),H(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;H(e)&&(e=t.index),y(ze(e),"The `indices` array must be a 1-dimensional array of strings."),y(ce(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(xe(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new P(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;H(e)&&(e=we(0,r[0])),y(ze(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ce(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(ga(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new P(Pr(e.values));return t.index=Pr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=we(0,e.shape[0]).map(r=>"row"+Jr(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new P(Nt(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(ha(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>H(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window=="undefined"?20:10;if(t.index.length>r){t=t.get(we(0,r/2).concat(we(t.index.length-r/2,t.index.length)));let o=Nt(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(Br(e)||xe(e)||H(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;H(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),Br(e)&&(t=e);let r=this,s=ke([r.values,r.index]);s=ke(_r(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new P(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=ke([e.values,e.index]);t=ke(_r(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new P(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=Nt(r.index),o=[],i=r.values.filter((u,a)=>{let l=e(u,a,r.values);return l||o.push(r.index[a]),l});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new P,r.name=t.name,r):(r.values=i,r.index=s,r)}};Lr.exports=P});var wt=c((gh,Rr)=>{var qa=m(),ya=h();function ba(n,e){qa(ya(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}Rr.exports=ba});var _e=c((qh,Kr)=>{var Na=g(),wa=d();function xa(n){return typeof n=="object"&&!wa(n)&&!Na(n)}Kr.exports=xa});var xt=c((yh,Wr)=>{var va=G(),Ta=_e(),Oa=ue(),Sa=d(),Aa=te();function Ea(n,e){e=(()=>{if(Sa(e))return!0;if(Oa(e))return e;throw new Aa("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>va(u)?JSON.stringify(u):Ta(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}Wr.exports=Ea});var Qr=c((bh,Fr)=>{var Ma=xt();function Ia(n,e,t){let r=Ma(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=st("fs"),o=st("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}Fr.exports=Ia});var vt=c((xh,Zr)=>{var R=g(),Xr=ue(),Nh=_e(),wh=wt(),ja=z(),Gr=Z(),Be=G(),Je=te(),Le=d(),K=m();function Va(n,e,t,r,s,o){return t=(()=>{if(Le(t))return!1;if(Xr(t))return t;throw new Je("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Le(r))return!1;if(Xr(r))return r;throw new Je("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Le(s))return",";if(Be(s))return K(s.length===1,u),s;if(R(s))return K(s.length===2,u),K(s[0].length===1,u),K(s[1].length===1,u),s;throw new Je(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Le(o))return'"';if(Be(o))return K(o.length===1,u),o;if(R(o))return K(o.length===2,u),K(o[0].length===1,u),K(o[1].length===1,u),o;throw new Je(u)})(),(()=>{let a=e.split(`
`).filter(M=>M.length>0).map(M=>{let j=[],ee="",me=!1;for(let J=0;J<M.length;J++){let V=M[J];if(V.match(/\\/g))J++;else if(R(o)&&V===o[0])me=!0;else if(R(o)&&V===o[1])me=!1;else if(Be(o)&&V===o)me=!me;else if(R(s)&&V===s[0]||R(s)&&V===s[1]||Be(s)&&V===s)if(me)ee+=V;else{let nt=ee;try{let rt=JSON.parse(nt);R(rt)?j.push(nt.trim()):j.push(rt)}catch{j.push(nt.trim())}ee=""}else ee+=V}if(ee.length>0){let J=ee;try{let V=JSON.parse(J);R(V)?j.push(J.trim()):j.push(V)}catch{j.push(J.trim())}}return j}),l=(()=>{let M=t?a.shift():Gr(0,a[0].length).map(j=>"col"+j);return r&&M.shift(),M})(),p=(()=>r?a.map(j=>j.shift()):Gr(0,a.length).map(j=>"row"+j))(),q=ja(a.map(M=>M.length)),U=new n(a.map(M=>(M.length=q,M)));return t&&(U.columns=l),r&&(U.index=p),U})()}Zr.exports=Va});var Dr=c((vh,Hr)=>{var Ua=m(),Ya=vt(),Ca=G(),za=d(),ka=te();async function $a(n,e,t,r,s,o,i){t=(()=>za(t)?"utf8":(Ua(Ca(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return st("fs").readFileSync(e,t)}catch{}throw new ka(`The path "${e}" could not be loaded!`)})();return Ya(n,u,r,s,o,i)}Hr.exports=$a});var Pe=c((Ah,os)=>{var{random:Pa}=ie(),Th=$(),f=m(),D=se(),es=Ye(),_a=Ce(),_=v(),O=g(),Tt=ue(),ts=re(),ns=L(),W=h(),E=G(),T=d(),Oh=z(),Sh=Me(),Ba=k(),Y=Z(),I=$e(),rs=X(),x=S(),Ja=ae(),ve=ne(),Re=wt(),La=Qr(),Ra=xt(),Ka=Dr(),Wa=vt();function Ke(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}function Fa(n){return W(n)&&parseInt(n)===n}function We(n){return Fa(n)&&n>=0}function Qa(n){return n instanceof Object&&!O(n)}function le(n){return n instanceof I}function ss(n){let e={};return _(n).forEach((t,r)=>{e[t]=r}),e}function fe(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}var w=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){f(O(r),"The new values must be a 2-dimensional array!");let s=x(r);f(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(Y(t._index.length,s[0]).map(o=>"row"+Re(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(Y(t._columns.length,s[1]).map(o=>"col"+Re(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){f(O(r),"The new columns list must be a 1-dimensional array of strings!"),f(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),f(x(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ke(8):o.trim()));let s=(()=>{let o=es(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ke(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){f(O(r),"The new index must be a 1-dimensional array of strings!"),f(r.length===t.shape[0],"The new index must be the same length as the old index!"),f(x(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Ke(8):o.trim()));let s=(()=>{let o=es(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+Ke(8):o),t._index=r}}),f(T(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(O(e)){let r=x(e);f(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=ve(r);let s=x(t.values);t._index=Y(0,s[0]).map(o=>"row"+Re(o,(s[0]-1).toString().length))}}get shape(){return x(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return rs(this.values).filter(t=>!T(t)).length===0}clear(){let e=this,t=new w(Ba(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(E(e)||W(e))&&(e=[e]),(E(t)||W(t))&&(t=[t]);let s=rs((e||[]).concat(t||[]).map(o=>typeof o));return f(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&f(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(f(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),f(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),T(e)||(e=e.map(o=>{if(typeof o=="string")return f(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Index ${o} is out of bounds!`),f(parseInt(o)===o,"Row numbers must be integers!"),f(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),T(t)||(t=t.map(o=>{if(typeof o=="string")return f(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return f(o>=0,`Column ${o} is out of bounds!`),f(parseInt(o)===o,"Column numbers must be integers!"),f(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;T(e)&&(e=r.index),T(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),f(O(e)&&O(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(x(e).length===1&&x(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(e.length>0,"The `rows` array must contain at least one row name."),f(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{f(E(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{f(E(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),f(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return _(s)[0];if(e.length===1){let i=new I(_(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new I(_(s));return i.name=t[0],i.index=e,i}let o=new w(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;T(e)&&(e=Y(0,s[0])),T(t)&&(t=Y(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),f(O(e)&&O(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(x(e).length===1&&x(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(e.length>0,"The `rowIndices` array must contain at least one index."),f(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{f(We(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{f(We(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),f(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new w(ve(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){let e=this,t=e.copy();return t.index=Y(0,e.shape[0]).map(r=>"row"+Re(r,(t.index.length-1).toString().length)),t}copy(){let e=this;if(e.isEmpty())return new w;let t=new w(D(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}assign(e,t){let r,s;T(t)?(s=e,f(!O(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,f(E(r),"When using two parameters for the `assign` method, the first parameter must be a string."),f(le(s)||O(s)&&x(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),f(Qa(s)||le(s)||O(s)&&x(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");let o=this;if(le(s)){let i={};return f(o.isEmpty()||ts(s.index,o.index),"The index of the new data does not match the index of the DataFrame."),i[r||s.name]=s.values,o.assign(i)}else if(O(s)){let i={};return i[r||"data"]=s,o.assign(i)}else{let i=o.copy(),u=i.shape;return Object.keys(s).forEach(a=>{let l=s[a];if(f(O(l),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),f(x(l).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),i.isEmpty())i.values=ve([l]),i.columns=[a],u=i.shape;else{f(l.length===u[0],`Column "${a}" in the new data is not the same length as the other columns in the original DataFrame.`);let p=i.columns.indexOf(a);p<0&&(i.columns.push(a),p=i.columns.indexOf(a)),i.values.forEach((q,U)=>{q[p]=l[U]})}}),i}}apply(e,t){t=t||0,f(ns(e),"The first parameter to the `apply` method must be a function."),f(t===0||t===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");let r=this;if(t===0){let o=ve(r.values).map((i,u)=>{let a=new I(i);return a.name=r.columns[u],a.index=r.index,e(a,u,r)});if(x(o).length===1){let i=new I(o);return i.index=D(r.columns),i}else{let i=new w(ve(o));return i.index=D(r.index),i.columns=D(r.columns),i}}else if(t===1){let s=r.values.map((o,i)=>{let u=new I(o);return u.name=r.index[i],u.index=r.columns,e(u,i,r)});if(x(s).length===1){let o=new I(s);return o.index=D(r.index),o}else{let o=new w(s);return o.index=D(r.index),o.columns=D(r.columns),o}}}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),r=r||0,f(We(r),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(a){if(r>0){let l=0;for(let p=0;p<a.length;p++){let q=a[p];if(T(q)&&l++,l>=r)return[]}}else if(t==="any")for(let l=0;l<a.length;l++){let p=a[l];if(T(p))return[]}else if(t==="all"){for(let l=0;l<a.length;l++){let p=a[l];if(!T(p))return a}return[]}return a}let i=this.copy(),u=Math.random().toString();if(e===0){i=i.assign(u,i.index);let a=i.values.map(s).filter(p=>p.length>0);if(x(a).length<2)return new w;i.values=a;let l=i.get(null,u);if(T(l))return new w;E(l)&&(l=[l]),le(l)&&(l=l.values),i.index=l,i=i.drop(null,u)}else if(e===1){i=i.transpose(),i=i.assign(u,i.index);let a=i.values.map(s).filter(p=>p.length>0);if(x(a).length<2)return new w;i.values=a;let l=i.get(null,u);if(T(l))return new w;E(l)&&(l=[l]),le(l)&&(l=l.values),i.index=l,i=i.drop(null,u),i=i.transpose()}return i}dropNaN(e,t,r){e=e||0,f(e===0||e===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),r=r||0,f(We(r),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),t=r>0?"none":t||"any",f(t==="any"||t==="all"||t==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function s(a){let l=_a(a);return r>0?a.length-l.length<r:t==="any"?l.length===a.length:t==="all"?l.length>0:!0}let i=this.copy(),u=Math.random().toString();if(e===0){let a=i.index.filter(l=>{let p=i.get(l,null).values;return s(p)});return a.length>0?i.get(a,null):new w}else if(e===1){let a=i.columns.filter(l=>{let p=i.get(null,l).values;return s(p)});return a.length>0?i.get(null,a):new w}return i}drop(e,t){let r=this;T(e)&&(e=[]),T(t)&&(t=[]),(E(e)||W(e))&&(e=[e]),(E(t)||W(t))&&(t=[t]),f(O(e),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(O(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(x(e).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),f(x(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;r.index.forEach((u,a)=>{e.indexOf(u)<0&&e.indexOf(a)<0&&(s||(s=[]),s.push(u))}),r.columns.forEach((u,a)=>{t.indexOf(u)<0&&t.indexOf(a)<0&&(o||(o=[]),o.push(u))});let i=r.get(s,o);if(le(i)){let u=new w;u=u.assign(i),r.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){let e=this,t={};return e.values.forEach((r,s)=>{let o={};r.forEach((i,u)=>{o[e.columns[u]]=i}),t[e.index[s]]=o}),t}toCSVString(e){return Ra(this,e)}toCSV(e,t){return La(this,e,t)}print(){function e(q,U){return E(q)&&q.length>U?q.substring(0,U-3)+"...":q}let t=this;if(ts(t.shape,[0]))return console.table({}),t;let r=typeof window=="undefined"?20:10,s=parseInt(r/2),o=typeof window=="undefined"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>t.index.length?null:Y(0,s).concat(Y(t.index.length-s,t.index.length)),a=o>t.columns.length?null:Y(0,i).concat(Y(t.columns.length-i,t.columns.length)),l=t.get(u,a);l instanceof I&&(t.shape[0]===1?(l=new w([l.values]),l.index=t.index,l.columns=new I(t.columns).get(a).values):t.shape[1]===1&&(l=new w([l.values]).transpose(),l.index=new I(t.index).get(u).values,l.columns=t.columns)),r<=t.index.length&&(l._index.splice(s,0,"..."),l._values.splice(s,0,Y(0,l.columns.length).map(q=>"..."))),o<=t.columns.length&&(l._columns.splice(i,0,"..."),l._values=l._values.map(q=>(q.splice(i,0,"..."),q)));let p=28;return l instanceof I?(l.values=l.values.map(q=>e(q,p)),l.name=e(l.name,p),l.index=l.index.map(q=>e(q,p))):(l.values=l.values.map(q=>q.map(U=>e(U,p))),l.columns=l.columns.map(q=>e(q,p)),l.index=l.index.map(q=>e(q,p))),console.table(l.toObject()),t}sort(e,t){let s=this.copy(),o=Pa().toString();return s=s.assign(o,s.index),T(e)&&(e=[o],t=[!0]),(W(e)||E(e))&&(e=[e],(Tt(t)||E(t))&&(t=[t])),f(O(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),f(x(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),T(t)&&(t=Y(0,e.length).map(i=>!0)),f(O(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),f(x(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),f(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(i=>{if(f(E(i)||W(i),"Column references can either be column names (as strings) or column indices (as whole numbers)."),E(i)){let u=s.columns.indexOf(i);return f(u>-1,`The column "${i}" does not exist!`),u}if(W(i))return f(parseInt(i)===i,"Column indices must be whole numbers!"),f(i>=0,`The column index ${i} is out of bounds!`),f(i<s.columns.length,`The index ${i} is out of bounds!`),i}),t=t.map(i=>{if(f(E(i)||Tt(i),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),E(i)){let u=i.trim().toLowerCase();return f(u==="ascending"||u==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),u==="ascending"}if(Tt(i))return i}),s.values=Ja(s.values,(i,u)=>{let a=0;for(;i[e[a]]===u[e[a]]&&a<e.length;)a++;let l=t[a];if(i[e[a]]===u[e[a]])return 0;if(i[e[a]]<u[e[a]])return l?-1:1;if(i[e[a]]>u[e[a]])return l?1:-1}),s.index=_(s.get(null,o).values),s=s.dropColumns(o),s}sortByIndex(){return this.sort()}filter(e,t){f(ns(e),"The `filter` method takes a single parameter: a function that is used to filter the values."),T(t)&&(t=0),f(t===0||t===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let r=this,s=r.copy();if(s.isEmpty())return s;let o=ss(s.index),i=ss(s.columns);if(t===0){let u=s.values.filter((a,l)=>{let p=new I(a);p.name=r.index[l],p.index=r.columns;let q=e(p,l,r);return q||delete o[s.index[l]],q});if(_(u).length===0)return new w;if(u.length===1){let a=new I(_(u));return a.name=fe(o)[0],a.index=fe(i),a}s.values=u,s.index=fe(o)}else if(t===1){s=s.transpose();let u=s.values.filter((a,l)=>{let p=new I(a);p.name=r.columns[l],p.index=r.index;let q=e(p,l,r);return q||delete i[s.index[l]],q});if(_(u).length===0)return new w;if(u.length===1){let a=new I(_(u));return a.name=fe(i)[0],a.index=fe(o),a}s.values=u,s.index=fe(i),s=s.transpose()}return s}shuffle(e){T(e)&&(e=0),f(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined.");let t=this;return t.get(e===0?shuffle(t.index):null,e===1?shuffle(t.columns):null)}};w.fromCSV=function(){return Ka(w,...arguments)};w.fromCSVString=function(){return Wa(w,...arguments)};os.exports=w});var ls=c((Eh,cs)=>{var is=m(),us=g(),as=v();function Xa(n,e){is(us(n),"You must pass two arrays into the `diff` function!"),is(us(e),"You must pass two arrays into the `diff` function!");let t=as(n),r=as(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}cs.exports=Xa});var Fe=c((Mh,hs)=>{var fs=h(),Ga=b();function Za(n,e){try{return fs(n)?fs(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}hs.exports=Ga(Za)});var Qe=c((Ih,ms)=>{var Ha=pe(),Da=v();function ec(n){try{return Ha(...Da(n))}catch{return NaN}}ms.exports=ec});var Ot=c((jh,ps)=>{var tc=h(),nc=b();function rc(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!tc(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}ps.exports=nc(rc)});var he=c((Vh,ds)=>{var sc=Ot();function oc(n,e){return sc(n,e)}ds.exports=oc});var St=c((Uh,gs)=>{var ic=pe(),uc=he();function ac(n,e){return ic(n,uc(e,-1))}gs.exports=ac});var ys=c((Yh,qs)=>{var cc=Fe(),lc=Qe(),fc=Ve(),hc=St();function mc(n,e){try{return fc(lc(cc(hc(n,e),2)))}catch{return NaN}}qs.exports=mc});var Ns=c((Ch,bs)=>{var pc=he(),dc=Fe();function gc(n,e){return pc(n,dc(e,-1))}bs.exports=gc});var At=c((kh,Ss)=>{var Te=m(),ws=d(),xs=g(),qc=h(),zh=re(),vs=v(),Ts=S(),yc=Qe(),bc=he(),Os=ne();function Xe(n,e){Te(!ws(n)&&!ws(e),"You must pass two arrays of numbers into the `dot` function!"),Te(xs(n)&&xs(e),"You must pass two arrays of numbers into the `dot` function!"),vs(n).concat(vs(e)).forEach(s=>{Te(qc(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Ts(n),r=Ts(e);if(Te(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Te(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return yc(bc(n,e));if(t.length===1&&r.length===2)return Os(e).map(s=>Xe(n,s));if(t.length===2&&r.length===1)return n.map(s=>Xe(s,e));if(t.length===2&&r.length===2){let s=Os(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let a=0;a<s.length;a++)u.push(Xe(n[i],s[a]));o.push(u)}return o}}Ss.exports=Xe});var Ms=c(($h,Es)=>{var As=m(),Nc=g(),wc=d(),xc=S();function vc(n){return As(Nc(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),As(xc(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!wc(e))}Es.exports=vc});var Cs=c((Ph,Ys)=>{var Is=m(),js=d(),Vs=g(),Tc=z(),Us=S();function Oc(n,e){Is(Vs(n)&&Vs(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Is(Us(n).length===1&&Us(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Tc([n.length,e.length]);s++)!js(n[s])&&!js(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Ys.exports=Oc});var Js=c((_h,Bs)=>{var zs=m(),ks=d(),$s=g(),Ps=h(),Sc=z(),_s=S();function Ac(n,e){zs($s(n)&&$s(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),zs(_s(n).length===1&&_s(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Sc([n.length,e.length]);s++)!ks(n[s])&&Ps(n[s])&&!ks(e[s])&&Ps(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Bs.exports=Ac});var Rs=c((Bh,Ls)=>{var Ec=b(),Mc=h();function Ic(n){try{return Mc(n)?Math.exp(n):NaN}catch{return NaN}}Ls.exports=Ec(Ic)});var Fs=c((Jh,Ws)=>{var jc=b();function Ks(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*Ks(n-1)}catch{return NaN}}Ws.exports=jc(Ks)});var Xs=c((Lh,Qs)=>{var Vc=h(),Uc=b();function Yc(n){try{let e=JSON.parse(n);return Vc(e)?e:NaN}catch{return NaN}}Qs.exports=Uc(Yc)});var Ge=c((Rh,Gs)=>{var Cc=h(),zc=b();function kc(n){try{return Cc(n)?Math.floor(n):NaN}catch{return NaN}}Gs.exports=zc(kc)});var Et=c((Kh,Zs)=>{var $c=h(),Pc=b();function _c(n){try{let e=JSON.parse(n);return $c(e)?parseInt(e):NaN}catch{return NaN}}Zs.exports=Pc(_c)});var eo=c((Wh,Ds)=>{var F=m(),Bc=d(),Mt=g(),It=h(),Hs=S(),Jc=Et();function jt(n,e){return F(!Bc(n),"You must pass an array and an index into the `getValueAt` function!"),F(Mt(n),"You must pass an array and an index into the `getValueAt` function!"),F(It(e)||Mt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Mt(e)&&(F(Hs(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{F(It(t)&&Jc(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),F(e.length<=Hs(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),It(e)?(F(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(F(e[0]<n.length,`The index ${e[0]} is out of bounds!`),jt(n[e[0]],e.slice(1))):jt(n,e[0])}Ds.exports=jt});var Vt=c((Xh,to)=>{var Fh=k(),Qh=$(),Lc=h(),Rc=oe();function Kc(n){Lc(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Rc(e,n)}to.exports=Kc});var ro=c((Gh,no)=>{var Ze=m(),Wc=d(),Fc=h(),Qc=Vt();function Xc(n){Ze(!Wc(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),Ze(Fc(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),Ze(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),Ze(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Qc([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}no.exports=Xc});var Ut=c((Hh,so)=>{var Zh=m(),Gc=X();function Zc(){return Gc([...arguments])}so.exports=Zc});var io=c((Dh,oo)=>{var Hc=g(),Dc=v(),el=Ut();function tl(){let n=Object.values(arguments).map(r=>Hc(r)?Dc(r):[r]),e=[];return el(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}oo.exports=tl});var Ct=c((tm,co)=>{var Oe=m(),He=d(),uo=h(),Yt=g(),nl=Z(),rl=v(),em=S(),sl=Ge();function ao(n,e){if(Oe(!He(n),"You must pass an array into the `slice` function!"),Oe(Yt(n),"You must pass an array into the `slice` function!"),He(e))return n.slice();Oe(Yt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),rl(e).forEach(s=>{Oe(He(s)||uo(s)&&sl(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];He(t)&&(t=nl(0,n.length)),uo(t)&&(t=[t]);let r=[];return t.forEach(s=>{Oe(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Yt(o)?r.push(ao(n[s],e.slice(1,e.length))):r.push(n[s])}),r}co.exports=ao});var mo=c((nm,ho)=>{var B=m(),ol=d(),il=g(),zt=h(),ul=v(),al=S(),De=Ct(),cl=At(),lo=pe(),fo=he(),kt=lt(),Q=Z();function $t(n){B(!ol(n),"You must pass a square 2D array into the `inverse` function!"),B(il(n),"You must pass a square 2D array into the `inverse` function!"),ul(n).forEach(t=>B(zt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=al(n);if(B(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),B(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return B(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;B(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return fo(u,1/i)}else if(e[0]>1){let t=(r,s)=>zt(r)||zt(s)?fo(r,s):cl(r,s);for(let r=1;r<e[0]-1;r++)try{let s=De(n,[Q(0,r),Q(0,r)]),o=De(n,[Q(0,r),Q(r,e[0])]),i=De(n,[Q(r,e[0]),Q(0,r)]),u=De(n,[Q(r,e[0]),Q(r,e[0])]),a=$t(s),l=$t(lo(u,t(-1,t(t(i,a),o)))),p=lo(a,t(t(t(t(a,o),l),i),a)),q=t(-1,t(t(a,o),l)),U=t(-1,t(t(l,i),a)),M=l;return kt(kt(p,q,1),kt(U,M,1),0)}catch{}B(!1,"This matrix cannot be inverted!")}}ho.exports=$t});var go=c((rm,po)=>{var ll=b(),Pt=h();function fl(n,e,t){try{return Pt(n)?Pt(e)?Pt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}po.exports=ll(fl)});var bo=c((sm,yo)=>{var qo=h(),hl=d(),ml=b();function pl(n,e){try{return e=hl(e)?Math.E:e,qo(n)?qo(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}yo.exports=ml(pl)});var wo=c((om,No)=>{var Se=h(),dl=b();function gl(n,e,t,r,s){try{return Se(n)?Se(e)?Se(t)?Se(r)?Se(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}No.exports=dl(gl)});var vo=c((lm,xo)=>{var im=m(),um=d(),am=g(),cm=h(),ql=v(),yl=ae(),bl=Ce();function Nl(n){try{let e=ql(n),t=bl(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=yl(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}xo.exports=Nl});var So=c((fm,Oo)=>{var wl=v(),xl=Ye(),vl=X(),To=ae();function Tl(n){try{if(n.length===0)return NaN;let e=wl(n);if(e.length===0)return NaN;let t={},r=vl(e);r.forEach(u=>{t[u]=xl(e,u)});let s=To(r,(u,a)=>t[a]-t[u]),o=s[0],i=To(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}Oo.exports=Tl});var Io=c((pm,Mo)=>{var Ol=d(),hm=k(),mm=$(),{random:Ao}=ie(),Sl=oe(),Al=h();function Eo(){let n=Ao(),e=Ao();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function El(n){if(Ol(n))return Eo();Al(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Eo());return Sl(e,n)}Mo.exports=El});var Vo=c((qm,jo)=>{var dm=k(),gm=$(),Ml=oe(),Il=h();function jl(n){Il(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Ml(e,n)}jo.exports=jl});var Co=c((ym,Yo)=>{var Uo=g(),Vl=h(),et=m(),Ul=d();function _t(n,e){if(et(Uo(n),"The `permute` function only works on arrays!"),Ul(e)&&(e=n.length),et(Vl(e),"`r` must be a whole number!"),e>n.length)return _t(n);if(e<=0)return[[]];if(et(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{et(!Uo(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);_t(u,e-1).forEach(l=>{t.push([r].concat(l))})}),t}Yo.exports=_t});var Po=c((bm,$o)=>{var Yl=g(),Cl=S(),zo=Pe(),ko=$e();function zl(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(Yl(e)){let t=Cl(e);t.length===1?new ko(e).print():t.length==2?new zo(e).print():console.log(e)}else e instanceof zo||e instanceof ko?e.print():console.log(e)})}$o.exports=zl});var Bo=c((Nm,_o)=>{var kl=h(),$l=b();function Pl(n){try{return kl(n)?Math.round(n):NaN}catch{return NaN}}_o.exports=$l(Pl)});var Bt=c((wm,Ro)=>{var Jo=m(),_l=h(),Lo=g(),Bl=se();function Jl(n,e,t){Jo(Lo(n),"The first argument passed into the `setValueAt` function must be an array!"),_l(e)&&(e=[e]),Jo(Lo(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Bl(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}Ro.exports=Jl});var Fo=c((vm,Wo)=>{var Ko=m(),Ll=d(),Rl=g(),xm=Ge(),{random:Kl}=ie();function Wl(n){Ko(!Ll(n),"You must pass an array into the `shuffle` function!"),Ko(Rl(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Kl()*t.length);e.push(t.splice(s,1)[0])}return e}Wo.exports=Wl});var Xo=c((Tm,Qo)=>{var Fl=h(),Ql=b();function Xl(n){try{return Fl(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Qo.exports=Ql(Xl)});var Zo=c((Om,Go)=>{var Gl=h(),Zl=b();function Hl(n){try{return Gl(n)?Math.sin(n):NaN}catch{return NaN}}Go.exports=Zl(Hl)});var Do=c((Sm,Ho)=>{var Dl=Ue();function ef(n){return Dl(n)}Ho.exports=ef});var ti=c((Am,ei)=>{var tf=h(),nf=b();function rf(n){try{return tf(n)?Math.tan(n):NaN}catch{return NaN}}ei.exports=nf(rf)});var tt=c((Em,ri)=>{var ni=L();function sf(n,e){assert(ni(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function of(n,e){assert(ni(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}ri.exports={timeSync:sf,timeAsync:of}});var ii=c((Mm,oi)=>{var si=m(),uf=g(),af=L(),cf=$(),lf=ye(),ff=Bt(),hf=v();function mf(n,e){si(uf(n),"The first argument passed into the `where` function must be an array!"),si(af(e),"The second argument passed into the `where` function must be a function!");let t=hf(n).length,r=cf(n,e),s=[],o=0,i=!1;for(;!i;){let u=lf(r,!0);u?(s[o]=u,r=ff(r,u,null),o++):i=!0}return o===0?null:s}oi.exports=mf});var pf=c((Im,Jt)=>{var Ae={abs:ut(),add:pe(),append:lt(),apply:$(),arccos:wn(),arcsin:vn(),arctan:On(),argmax:Yn(),argmin:kn(),assert:m(),ceil:Pn(),chop:Jn(),clamp:Rn(),cohensd:Gn(),combine:er(),copy:se(),correl:cr(),cos:fr(),count:Ye(),covariance:pt(),DataFrame:Pe(),diff:ls(),distance:ys(),divide:Ns(),dot:At(),dropMissing:Ms(),dropMissingPairwise:Cs(),dropNaN:Ce(),dropNaNPairwise:Js(),exp:Rs(),factorial:Fs(),flatten:v(),float:Xs(),floor:Ge(),getValueAt:eo(),identity:ro(),indexOf:ye(),int:Et(),intersect:io(),inverse:mo(),isArray:g(),isBoolean:ue(),isEqual:re(),isFunction:L(),isNumber:h(),isObject:_e(),isString:G(),isUndefined:d(),lerp:go(),log:bo(),map:wo(),MathError:te(),max:z(),mean:be(),median:vo(),min:Me(),mode:So(),multiply:Ot(),ndarray:k(),normal:Io(),ones:Vo(),permute:Co(),pow:Fe(),print:Po(),random:ie().random,range:Z(),reshape:oe(),reverse:de(),round:Bo(),scale:he(),seed:ie().seed,Series:$e(),set:X(),setValueAt:Bt(),shape:S(),shuffle:Fo(),sign:Xo(),sin:Zo(),slice:Ct(),sort:ae(),sqrt:Ve(),std:Ue(),stdev:Do(),subtract:St(),sum:Qe(),tan:ti(),time:tt().timeSync,timeSync:tt().timeSync,timeAsync:tt().timeAsync,transpose:ne(),union:Ut(),variance:Ie(),vectorize:b(),where:ii(),zeros:Vt(),dump:function(){Object.keys(Ae).forEach(n=>{typeof global!="undefined"&&(global[n]=Ae[n]),typeof window!="undefined"&&(window[n]=Ae[n])})}};typeof Jt!="undefined"&&(Jt.exports=Ae);typeof window!="undefined"&&(window.JSMathTools=Ae)});pf();})();
