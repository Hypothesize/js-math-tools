!function t(r,a,i){function o(n,e){if(!a[n]){if(!r[n]){var s="function"==typeof require&&require;if(!e&&s)return s(n,!0);if(u)return u(n,!0);throw(s=new Error("Cannot find module '"+n+"'")).code="MODULE_NOT_FOUND",s}s=a[n]={exports:{}},r[n][0].call(s.exports,function(e){return o(r[n][1][e]||e)},s,s.exports,t,r,a,i)}return a[n].exports}for(var u="function"==typeof require&&require,e=0;e<i.length;e++)o(i[e]);return o}({1:[function(e,n,s){},{}],2:[function(e,n,s){!function(i){!function(){"use strict";function f(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function a(e,n){for(var s,t="",r=0,a=-1,i=0,o=0;o<=e.length;++o){if(o<e.length)s=e.charCodeAt(o);else{if(47===s)break;s=47}if(47===s){if(a!==o-1&&1!==i)if(a!==o-1&&2===i){if(t.length<2||2!==r||46!==t.charCodeAt(t.length-1)||46!==t.charCodeAt(t.length-2))if(2<t.length){var u=t.lastIndexOf("/");if(u!==t.length-1){r=-1===u?(t="",0):(t=t.slice(0,u)).length-1-t.lastIndexOf("/"),a=o,i=0;continue}}else if(2===t.length||1===t.length){t="",a=o,i=r=0;continue}n&&(0<t.length?t+="/..":t="..",r=2)}else 0<t.length?t+="/"+e.slice(a+1,o):t=e.slice(a+1,o),r=o-a-1;a=o,i=0}else 46===s&&-1!==i?++i:i=-1}return t}var d={resolve:function(){for(var e,n="",s=!1,t=arguments.length-1;-1<=t&&!s;t--){var r=0<=t?arguments[t]:e=void 0===e?i.cwd():e;f(r),0!==r.length&&(n=r+"/"+n,s=47===r.charCodeAt(0))}return n=a(n,!s),s?0<n.length?"/"+n:"/":0<n.length?n:"."},normalize:function(e){if(f(e),0===e.length)return".";var n=47===e.charCodeAt(0),s=47===e.charCodeAt(e.length-1);return 0<(e=0===(e=a(e,!n)).length&&!n?".":e).length&&s&&(e+="/"),n?"/"+e:e},isAbsolute:function(e){return f(e),0<e.length&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,n=0;n<arguments.length;++n){var s=arguments[n];f(s),0<s.length&&(void 0===e?e=s:e+="/"+s)}return void 0===e?".":d.normalize(e)},relative:function(e,n){if(f(e),f(n),e===n)return"";if((e=d.resolve(e))===(n=d.resolve(n)))return"";for(var s=1;s<e.length&&47===e.charCodeAt(s);++s);for(var t=e.length,r=t-s,a=1;a<n.length&&47===n.charCodeAt(a);++a);for(var i=n.length-a,o=r<i?r:i,u=-1,c=0;c<=o;++c){if(c===o){if(o<i){if(47===n.charCodeAt(a+c))return n.slice(a+c+1);if(0===c)return n.slice(a+c)}else o<r&&(47===e.charCodeAt(s+c)?u=c:0===c&&(u=0));break}var l=e.charCodeAt(s+c);if(l!==n.charCodeAt(a+c))break;47===l&&(u=c)}for(var h="",c=s+u+1;c<=t;++c)c!==t&&47!==e.charCodeAt(c)||(0===h.length?h+="..":h+="/..");return 0<h.length?h+n.slice(a+u):(47===n.charCodeAt(a+=u)&&++a,n.slice(a))},_makeLong:function(e){return e},dirname:function(e){if(f(e),0===e.length)return".";for(var n=47===e.charCodeAt(0),s=-1,t=!0,r=e.length-1;1<=r;--r)if(47===e.charCodeAt(r)){if(!t){s=r;break}}else t=!1;return-1===s?n?"/":".":n&&1===s?"//":e.slice(0,s)},basename:function(e,n){if(void 0!==n&&"string"!=typeof n)throw new TypeError('"ext" argument must be a string');f(e);var s=0,t=-1,r=!0;if(void 0!==n&&0<n.length&&n.length<=e.length){if(n.length===e.length&&n===e)return"";for(var a=n.length-1,i=-1,o=e.length-1;0<=o;--o){var u=e.charCodeAt(o);if(47===u){if(!r){s=o+1;break}}else-1===i&&(r=!1,i=o+1),0<=a&&(u===n.charCodeAt(a)?-1==--a&&(t=o):(a=-1,t=i))}return s===t?t=i:-1===t&&(t=e.length),e.slice(s,t)}for(o=e.length-1;0<=o;--o)if(47===e.charCodeAt(o)){if(!r){s=o+1;break}}else-1===t&&(r=!1,t=o+1);return-1===t?"":e.slice(s,t)},extname:function(e){f(e);for(var n=-1,s=0,t=-1,r=!0,a=0,i=e.length-1;0<=i;--i){var o=e.charCodeAt(i);if(47===o){if(r)continue;s=i+1;break}-1===t&&(r=!1,t=i+1),46===o?-1===n?n=i:1!==a&&(a=1):-1!==n&&(a=-1)}return-1===n||-1===t||0===a||1===a&&n===t-1&&n===s+1?"":e.slice(n,t)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return n="/",t=(s=e).dir||s.root,e=s.base||(s.name||"")+(s.ext||""),t?t===s.root?t+e:t+n+e:e;var n,s,t},parse:function(e){f(e);var n={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return n;for(var s,t=47===(s=e.charCodeAt(0)),r=t?(n.root="/",1):0,a=-1,i=0,o=-1,u=!0,c=e.length-1,l=0;r<=c;--c){if(47===(s=e.charCodeAt(c))){if(u)continue;i=c+1;break}-1===o&&(u=!1,o=c+1),46===s?-1===a?a=c:1!==l&&(l=1):-1!==a&&(l=-1)}return-1===a||-1===o||0===l||1===l&&a===o-1&&a===i+1?-1!==o&&(n.base=n.name=0===i&&t?e.slice(1,o):e.slice(i,o)):(0===i&&t?(n.name=e.slice(1,a),n.base=e.slice(1,o)):(n.name=e.slice(i,a),n.base=e.slice(i,o)),n.ext=e.slice(a,o)),0<i?n.dir=e.slice(0,i-1):t&&(n.dir="/"),n},sep:"/",delimiter:":",win32:null,posix:null};d.posix=d,n.exports=d}.call(this)}.call(this,e("_process"))},{_process:3}],3:[function(e,n,s){var t,r,n=n.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(n){if(t===setTimeout)return setTimeout(n,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(n,0);try{return t(n,0)}catch(e){try{return t.call(null,n,0)}catch(e){return t.call(this,n,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(e){t=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var u,c=[],l=!1,h=-1;function f(){l&&u&&(l=!1,u.length?c=u.concat(c):h=-1,c.length&&d())}function d(){if(!l){var e=o(f);l=!0;for(var n=c.length;n;){for(u=c,c=[];++h<n;)u&&u[h].run();h=-1,n=c.length}u=null,l=!1,function(n){if(r===clearTimeout)return clearTimeout(n);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(n);try{r(n)}catch(e){try{return r.call(null,n)}catch(e){return r.call(this,n)}}}(e)}}function j(e,n){this.fun=e,this.array=n}function m(){}n.nextTick=function(e){var n=new Array(arguments.length-1);if(1<arguments.length)for(var s=1;s<arguments.length;s++)n[s-1]=arguments[s];c.push(new j(e,n)),1!==c.length||l||o(d)},j.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.browser=!0,n.env={},n.argv=[],n.version="",n.versions={},n.on=m,n.addListener=m,n.once=m,n.off=m,n.removeListener=m,n.removeAllListeners=m,n.emit=m,n.prependListener=m,n.prependOnceListener=m,n.listeners=function(e){return[]},n.binding=function(e){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(e){throw new Error("process.chdir is not supported")},n.umask=function(){return 0}},{}],4:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.abs(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],5:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(){try{let n=0;var s=Object.values(arguments);for(let e=0;e<s.length;e++){if(!t(s[e]))return NaN;n+=s[e]}return n}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],6:[function(e,n,s){const o=e("./assert.js"),u=e("./is-undefined.js"),c=e("./is-array.js"),l=e("./is-number.js"),h=e("./shape.js"),f=e("./transpose.js");n.exports=function e(n,s,t=0){o(!u(n),"You must pass two arrays into the `append` function!"),o(!u(s),"You must pass two arrays into the `append` function!"),o(c(n),"You must pass two arrays into the `append` function!"),o(c(s),"You must pass two arrays into the `append` function!"),o(l(t),"The `axis` argument to the `append` function must be 0 or 1!"),o(0<=t&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),o(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");var r=h(n),a=h(s);o(r.length===a.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),o(r.length<3&&a.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let e=0;e<r.length;e++)e!==t&&o(r[e]===a[e],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[e]} != ${a[e]})`);if(o(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),0===r.length)return[];if(1===r.length)return n.concat(s);if(2===r.length){if(0===t){const i=[];for(let e=0;e<r[0];e++)i.push(n[e]);for(let e=0;e<a[0];e++)i.push(s[e]);return i}if(1===t)return f(e(f(n),f(s),0))}}},{"./assert.js":13,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50,"./shape.js":75,"./transpose.js":88}],7:[function(e,n,s){const t=e("./vectorize.js");n.exports=t(function(e,n){try{return n(e)}catch(e){return NaN}})},{"./vectorize.js":91}],8:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.acos(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],9:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.asin(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],10:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.atan(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],11:[function(e,n,s){const t=e("./index-of.js"),r=e("./max.js");n.exports=function(e){try{return t(e,r(e))}catch(e){return NaN}}},{"./index-of.js":39,"./max.js":54}],12:[function(e,n,s){const t=e("./index-of.js"),r=e("./min.js");n.exports=function(e){try{return t(e,r(e))}catch(e){return NaN}}},{"./index-of.js":39,"./min.js":57}],13:[function(e,n,s){n.exports=function(e,n){if(!e)throw new Error(n)}},{}],14:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.ceil(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],15:[function(e,n,s){const t=e("./is-undefined.js"),r=e("./abs.js"),a=e("./vectorize.js"),i=e("./is-number.js");n.exports=a(function(e,n){try{if(!i(e))return NaN;if(t(n))n=1e-10;else if(!i(n))return NaN;return r(e)<n?0:e}catch(e){return NaN}})},{"./abs.js":4,"./is-number.js":48,"./is-undefined.js":50,"./vectorize.js":91}],16:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e,n,s){try{return t(e)?t(n)&&t(s)?e<n?n:s<e?s:e:NaN:NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],17:[function(e,n,s){const t=e("./mean.js"),r=e("./variance.js");n.exports=function(e,n){try{return(t(e)-t(n))/Math.sqrt((r(e)+r(n))/2)}catch(e){return NaN}}},{"./mean.js":55,"./variance.js":90}],18:[function(e,n,s){const o=e("./is-array.js"),u=e("./is-number.js"),c=e("./assert.js");n.exports=function t(r,a){if(c(o(r),"The `combine` function only works on arrays!"),c(u(a),"`r` must be a whole number!"),a>r.length)return[r];if(a<=0)return[[]];if(c(a===parseInt(a),"`r` must be a whole number!"),r.length<2)return r;const i=[];return r.forEach((n,e)=>{if(c(!o(n),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`)."),!((e=r.slice(e+1)).length<a-1)){const s=t(e,a-1);s.forEach(e=>{i.push([n].concat(e))})}}),i}},{"./assert.js":13,"./is-array.js":44,"./is-number.js":48}],19:[function(e,n,s){e("./assert.js");const r=e("./is-undefined.js"),a=e("./is-array.js");n.exports=function n(s){if("object"!=typeof s)return s;if(r(s))return s;if(a(s))return s.map(n);{const t={};return Object.keys(s).forEach(function(e){t[e]=n(s[e])}),t}}},{"./assert.js":13,"./is-array.js":44,"./is-undefined.js":50}],20:[function(e,n,s){const t=e("./covariance.js"),r=e("./std.js");n.exports=function(e,n){try{return t(e,n)/(r(e)*r(n))}catch(e){return NaN}}},{"./covariance.js":23,"./std.js":82}],21:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.cos(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],22:[function(e,n,s){const t=e("./assert.js"),r=e("./is-undefined.js"),a=e("./is-array.js"),i=e("./flatten.js"),o=e("./is-equal.js"),u=e("./set.js");n.exports=function(e,n){t(!r(e),"You must pass an array and some items to count into the `count` function!"),t(a(e),"You must pass an array and some items to count into the `count` function!");const s=i(e);return n=r(n)?u(e):n,a(n)?i(n).map(function(n){var e=s.filter(e=>o(n,e)).length;return{item:n,count:e}}):s.filter(e=>e===n).length}},{"./assert.js":13,"./flatten.js":34,"./is-array.js":44,"./is-equal.js":46,"./is-undefined.js":50,"./set.js":74}],23:[function(e,n,s){const o=e("./mean.js"),u=e("./is-undefined.js");n.exports=function(s,t){try{var r=o(s),a=o(t),i=Math.max(s.length,t.length);let n=0;for(let e=0;e<i;e++){if(u(s[e]))return NaN;if(u(t[e]))return NaN;n+=(s[e]-r)*(t[e]-a)}return n/s.length}catch(e){return NaN}}},{"./is-undefined.js":50,"./mean.js":55}],24:[function(I,e,n){!function(E){!function(){const c=I("./assert.js"),h=I("./is-array.js"),o=I("./is-undefined.js"),l=I("./shape.js"),f=I("./transpose.js"),u=I("./range.js"),i=I("./is-number.js"),d=I("./is-string.js");I("./apply.js");const j=I("./is-function.js"),n=I("./ndarray.js"),m=I("./copy.js"),p=I("./series.js"),g=I("./flatten.js"),y=I("./is-equal.js"),b=I("./max.js");I("./min.js");const r=I("./set.js"),v=I("./is-boolean.js"),t=I("./random.js")["random"],x=I("./sort.js"),w=I("./drop-nan.js");function N(e){return n=e,i(n)&&parseInt(n)===n&&0<=e;var n}function T(e){return e instanceof p}function a(e,n){c(i(e),"The `leftPad` function only works on numbers!");let s=e.toString();for(;s.length<n;)s="0"+s;return s}class O{constructor(n){const s=this;if(Object.defineProperty(s,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"values",{configurable:!0,enumerable:!0,get(){return s._values},set(e){c(h(e),"The new values must be a 2-dimensional array!");const n=l(e);c(2===n.length,"The new array of values must be 2-dimensional!"),n[0]<s._index.length?s._index=s._index.slice(0,n[0]):n[0]>s._index.length&&(s._index=s._index.concat(u(s._index.length,n[0]).map(e=>"row"+a(e,(n[0]-1).toString().length)))),n[1]<s._columns.length?s._columns=s._columns.slice(0,n[1]):n[1]>s._columns.length&&(s._columns=s._columns.concat(u(s._columns.length,n[1]).map(e=>"col"+a(e,(n[1]-1).toString().length)))),s._values=e}}),Object.defineProperty(s,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"columns",{configurable:!0,enumerable:!0,get(){return s._columns},set(e){c(h(e),"The new columns list must be a 1-dimensional array of strings!"),c(e.length===s.shape[1],"The new columns list must be the same length as the old columns list!"),c(1===l(e).length,"The new columns list must be a 1-dimensional array of strings!"),e=e.map(e=>"string"==typeof e?e:JSON.stringify(e)||e.toString()),s._columns=e}}),Object.defineProperty(s,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"index",{configurable:!0,enumerable:!0,get(){return s._index},set(e){c(h(e),"The new index must be a 1-dimensional array of strings!"),c(e.length===s.shape[0],"The new index must be the same length as the old index!"),c(1===l(e).length,"The new index must be a 1-dimensional array of strings!"),e=e.map(e=>"string"==typeof e?e:JSON.stringify(e)||e.toString()),s._index=e}}),c(o(n)||n instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),n)if(h(n)){var e=l(n);c(2===e.length,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),s.values=n}else{s._columns=Object.keys(n);const t=[];s._columns.forEach(e=>{e=n[e];t.push(e)}),s._values=f(t);const r=l(s.values);s._index=u(0,r[0]).map(e=>"row"+a(e,(r[0]-1).toString().length))}}static async fromCSV(e,n){n=n||{};let s;try{const c=await fetch(e);s=await c.text()}catch(e){}try{const l=I("fs");var t=n.encoding||"utf8";s=l.readFileSync(e,t)}catch(e){}const r=s.split("\n").filter(e=>0<e.length);let a=r.map(s=>{const t={};const e=s.match(/"(.*?)"/g)||[];e.forEach(e=>{var n=function(n){var s="abcdefghijklmnopqrstuvwxyz1234567890";let t="";for(let e=0;e<n;e++)t+=s[parseInt(Math.random()*s.length)];return t}(32);s=s.replaceAll(e,n),t[n]=e});const n=s.split(",");return n.map((n,e)=>{n=t[n]||n;try{var s=JSON.parse(n);return h(s)?n:s}catch(e){return n}})});const i=b(a.map(e=>e.length));a=a.map(e=>(e.length=i,e));let o,u;t=!v(n.hasHeaderRow)||n.hasHeaderRow,n=!!v(n.hasIndexColumn)&&n.hasIndexColumn;return t&&(o=a.shift()),n&&(u=a.map(e=>e.shift()),o&&o.shift()),a=new O(a),o&&(a.columns=o),u&&(a.index=u),a}get shape(){return l(this.values)}get rows(){return this.index}set rows(e){this.index=e}isEmpty(){return 0===r(this.values).filter(e=>!o(e)).length}clear(){const e=new O(n(this.shape));return e.columns=this.columns.slice(),e.index=this.index.slice(),e}get(e,n){const s=this;(d(e)||i(e))&&(e=[e]),(d(n)||i(n))&&(n=[n]);const t=r((e||[]).concat(n||[]).map(e=>typeof e));return c(t.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),1===t.length&&c("string"===t[0]||"number"===t[0],"Only whole numbers and/or strings are allowed in `get` arrays!"),2===t.length&&(c(-1<t.indexOf("string"),"Only whole numbers and/or strings are allowed in `get` arrays!"),c(-1<t.indexOf("number"),"Only whole numbers and/or strings are allowed in `get` arrays!")),o(e)||(e=e.map(e=>"string"==typeof e?(c(-1<s.index.indexOf(e),`Row "${e}" does not exist!`),e):"number"==typeof e?(c(0<=e,`Index ${e} is out of bounds!`),c(parseInt(e)===e,"Row numbers must be integers!"),c(e<s.index.length,`Index ${e} is out of bounds!`),s.index[e]):void 0)),o(n)||(n=n.map(e=>"string"==typeof e?(c(-1<s.columns.indexOf(e),`Column "${e}" does not exist!`),e):"number"==typeof e?(c(0<=e,`Column ${e} is out of bounds!`),c(parseInt(e)===e,"Column numbers must be integers!"),c(e<s.columns.length,`Column ${e} is out of bounds!`),s.columns[e]):void 0)),s.getSubsetByNames(e,n)}getSubsetByNames(e,s){const t=this;"string"==typeof(e=o(e)?t.index:e)&&(e=[e]),"string"==typeof(s=o(s)?t.columns:s)&&(s=[s]),c(h(e)&&h(s),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),c(1===l(e).length&&1===l(s).length,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),c(0<e.length,"The `rows` array must contain at least one row name."),c(0<s.length,"The `cols` array must contain at least one column name."),e.forEach(e=>{c(d(e),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),c(-1<t.index.indexOf(e),`The row name "${e}" does not exist in the list of rows.`)}),s.forEach(e=>{c(d(e),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),c(-1<t.columns.indexOf(e),`The column name "${e}" does not exist in the list of columns.`)});var n=e.map(n=>s.map(e=>t.values[t.index.indexOf(n)][t.columns.indexOf(e)]));if(1===e.length&&1===s.length)return g(n)[0];if(1===e.length){const r=new p(g(n));return r.name=e[0],r.index=s,r}if(1===s.length){const r=new p(g(n));return r.name=s[0],r.index=e,r}const r=new O(n);return r.columns=s,r.index=e,r}getSubsetByIndices(e,n){const s=this;var t=s.shape;"number"==typeof(e=o(e)?u(0,t[0]):e)&&(e=[e]),"number"==typeof(n=o(n)?u(0,t[1]):n)&&(n=[n]),c(h(e)&&h(n),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),c(1===l(e).length&&1===l(n).length,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),c(0<e.length,"The `rowIndices` array must contain at least one index."),c(0<n.length,"The `colIndices` array must contain at least one index."),e.forEach(e=>{c(N(e),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),c(e<s.index.length,`The row index ${e} is out of bounds.`)}),n.forEach(e=>{c(N(e),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),c(e<s.columns.length,`The column index ${e} is out of bounds.`)});e=e.map(e=>s.index[e]),n=n.map(e=>s.columns[e]);return s.getSubsetByNames(e,n)}loc(e,n){return this.getSubsetByNames(e,n)}iloc(e,n){return this.getSubsetByIndices(e,n)}transpose(){const e=new O(f(this.values));return e.columns=this.index,e.index=this.columns,e}get T(){return this.transpose()}resetIndex(){const n=this.copy();return n.index=u(0,this.shape[0]).map(e=>"row"+a(e,(n.index.length-1).toString().length)),n}copy(){if(this.isEmpty())return new O;const e=new O(m(this.values));return e.columns=this.columns.slice(),e.index=this.index.slice(),e}assign(e,s){let n,a;o(s)?(a=e,c(!h(a),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(n=e,a=s,c(d(n),"When using two parameters for the `assign` method, the first parameter must be a string."),c(T(a)||h(a)&&1===l(a).length,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),c((s=a)instanceof Object&&!h(s)||T(a)||h(a)&&1===l(a).length,"An object, Series, or 1-dimensional array must be passed into the `assign` method.");s=this;if(T(a)){const t={};return c(s.isEmpty()||y(a.index,s.index),"The index of the new data does not match the index of the DataFrame."),t[n||a.name]=a.values,s.assign(t)}if(h(a)){const r={};return r[n||"data"]=a,s.assign(r)}{let n=s.copy(),r=n.shape;return Object.keys(a).forEach(e=>{const t=a[e];if(c(h(t),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),c(1===l(t).length,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),n.isEmpty())n.values=f([t]),n.columns=[e],r=n.shape;else{c(t.length===r[0],`Column "${e}" in the new data is not the same length as the other columns in the original DataFrame.`);let s=n.columns.indexOf(e);s<0&&(n.columns.push(e),s=n.columns.indexOf(e)),n.values.forEach((e,n)=>{e[s]=t[n]})}}),n}}apply(s,e){e=e||0,c(j(s),"The first parameter to the `apply` method must be a function."),c(0===e||1===e,"The second parameter to the `apply` method (the `axis`) must be 0 or 1.");const t=this;if(0===e){const r=f(t.values);var n=r.map((e,n)=>s(e,t.columns[n]));if(1===l(n).length){const a=new p(n);return a.index=m(t.columns),a}{const i=new O(f(n));return i.index=m(t.index),i.columns=m(t.columns),i}}if(1===e){e=t.values.map((e,n)=>s(e,t.index[n]));if(1===l(e).length){const o=new p(e);return o.index=m(t.index),o}{const u=new O(e);return u.index=m(t.index),u.columns=m(t.columns),u}}}map(e,n){return this.apply(e,n)}dropMissing(n,e,a){function s(s){if(0<a){let n=0;for(let e=0;e<s.length;e++){var t=s[e];if(o(t)&&n++,n>=a)return[]}}else if("any"===e)for(let e=0;e<s.length;e++){var n=s[e];if(o(n))return[]}else if("all"===e){for(let e=0;e<s.length;e++){var r=s[e];if(!o(r))return s}return[]}return s}n=n||0,c(0===n||1===n,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),a=a||0,c(N(a),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),e=0<a?"none":e||"any",c("any"===e||"all"===e||"none"===e,"The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");let t=this.copy();var r=Math.random().toString();if(0===n){t=t.assign(r,t.index);var i=t.values.map(s).filter(e=>0<e.length);if(l(i).length<2)return new O;t.values=i;let e=t.get(null,r);if(o(e))return new O;d(e)&&(e=[e]),T(e)&&(e=e.values),t.index=e,t=t.drop(null,r)}else if(1===n){t=t.transpose(),t=t.assign(r,t.index);n=t.values.map(s).filter(e=>0<e.length);if(l(n).length<2)return new O;t.values=n;let e=t.get(null,r);if(o(e))return new O;d(e)&&(e=[e]),T(e)&&(e=e.values),t.index=e,t=t.drop(null,r),t=t.transpose()}return t}dropNaN(e,s,t){function n(e){var n=w(e);return 0<t?e.length-n.length<t:"any"===s?n.length===e.length:"all"!==s||0<n.length}e=e||0,c(0===e||1===e,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),t=t||0,c(N(t),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),s=0<t?"none":s||"any",c("any"===s||"all"===s||"none"===s,"The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");let r=this.copy();Math.random().toString();if(0===e){var a=r.index.filter(e=>{return n(r.get(e,null).values)});return 0<a.length?r.get(a,null):new O}if(1!==e)return r;e=r.columns.filter(e=>{return n(r.get(null,e).values)});return 0<e.length?r.get(null,e):new O}drop(s,t){o(s)&&(s=[]),o(t)&&(t=[]),(d(s)||i(s))&&(s=[s]),(d(t)||i(t))&&(t=[t]),c(h(s),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),c(h(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),c(1===l(s).length,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),c(1===l(t).length,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let r,a;this.index.forEach((e,n)=>{s.indexOf(e)<0&&s.indexOf(n)<0&&(r=r||[],r.push(e))}),this.columns.forEach((e,n)=>{t.indexOf(e)<0&&t.indexOf(n)<0&&(a=a||[],a.push(e))});let n=this.get(r,a);if(T(n)){let e=new O;e=e.assign(n),-1<this.index.indexOf(n.name)&&(e=e.transpose()),n=e}return n}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){const t=this,r={};return t.values.forEach((e,n)=>{const s={};e.forEach((e,n)=>{s[t.columns[n]]=e}),r[t.index[n]]=s}),r}toCSVString(e){var n=this;e=o(e)?{}:e;var s=!v(e.hasHeaderRow)||e.hasHeaderRow,e=!!v(e.hasIndexColumn)&&e.hasIndexColumn;let t,r,a;return s&&e?(t=["(index)"].concat(m(n.index)),r=m(n.columns),a=[r].concat(n.values).map((e,n)=>[t[n]].concat(e))):!s&&e?(t=m(n.index),a=n.values.map((e,n)=>[t[n]].concat(e))):s&&!e?(r=m(n.columns),a=[r].concat(n.values)):s||e||(a=n.values),a=a.map((e,n)=>e.map(e=>d(e)?function(e){var n;let s=e.match(n=/"(.*?)"/g),t=e.slice();return s&&s.forEach(e=>{t=t.replace(e,`“${e.substring(1,e.length-1)}”`)}),n=/'(.*?)'/g,s=e.match(n),s&&s.forEach(e=>{t=t.replace(e,`‘${e.substring(1,e.length-1)}’`)}),`"${t}"`}(e):e).join(",")).join("\n"),a}toCSV(n,s){var t,s=this.toCSVString(s);try{let e=n;n.includes("/")&&(t=n.split("/"),e=t[t.length-1]);const r=document.createElement("a");r.href="data:text/csv;charset=utf-8,"+encodeURIComponent(s),r.download=e,r.dispatchEvent(new MouseEvent("click"))}catch(e){}try{const e=I("fs"),a=I("path");e.writeFileSync(a.resolve(n),s,"utf8")}catch(e){}return this}print(){var e=this;if(y(e.shape,[0]))return console.table({}),e;var n="undefined"==typeof window?20:10,s=parseInt(n/2),t="undefined"==typeof window?Math.floor(E.stdout.columns/24)-1:10;const r=parseInt(t/2);var a=n>e.index.length?null:u(0,s).concat(u(e.index.length-s,e.index.length)),i=t>e.columns.length?null:u(0,r).concat(u(e.columns.length-r,e.columns.length));let o=e.get(a,i);return o instanceof p&&(1===e.shape[0]?(o=new O([o.values]),o.index=e.index,o.columns=new p(e.columns).get(i).values):1===e.shape[1]&&(o=new O([o.values]).transpose(),o.index=new p(e.index).get(a).values,o.columns=e.columns)),n<=e.index.length&&(o._index.splice(s,0,"..."),o._values.splice(s,0,u(0,o.columns.length).map(e=>"..."))),t<=e.columns.length&&(o._columns.splice(r,0,"..."),o._values=o._values.map(e=>(e.splice(r,0,"..."),e))),console.table(o.toObject()),e}sort(r,a){let s=this.copy();var e=t().toString();return s=s.assign(e,s.index),o(r)&&(r=[e],a=[!0]),(i(r)||d(r))&&(r=[r],(v(a)||d(a))&&(a=[a])),c(h(r),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),c(1===l(r).length,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),o(a)&&(a=u(0,r.length).map(e=>!0)),c(h(a),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),c(1===l(a).length,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),c(r.length===a.length,"The arrays passed into the `sort` method must be equal in length."),r=r.map(e=>{if(c(d(e)||i(e),"Column references can either be column names (as strings) or column indices (as whole numbers)."),d(e)){var n=s.columns.indexOf(e);return c(-1<n,`The column "${e}" does not exist!`),n}if(i(e))return c(parseInt(e)===e,"Column indices must be whole numbers!"),c(0<=e,`The column index ${e} is out of bounds!`),c(e<s.columns.length,`The index ${e} is out of bounds!`),e}),a=a.map(e=>{if(c(d(e)||v(e),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),d(e)){var n=e.trim().toLowerCase();return c("ascending"===n||"descending"===n,"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),"ascending"===n}if(v(e))return e}),s.values=x(s.values,(e,n)=>{let s=0;for(;e[r[s]]===n[r[s]]&&s<r.length;)s++;var t=a[s];return e[r[s]]===n[r[s]]?0:e[r[s]]<n[r[s]]?t?-1:1:e[r[s]]>n[r[s]]?t?1:-1:void 0}),s.index=g(s.get(null,e).values),s=s.dropColumns(e),s}sortByIndex(){return this.sort()}filter(s,n){c(j(s),"The `filter` method takes a single parameter: a function that is used to filter the values."),o(n)&&(n=0),c(0===n||1===n,"The `axis` parameter to the `filter` method must be 0 or 1.");let t=this.copy();if(t.isEmpty())return t;const r=m(t.index),a=m(t.columns);if(0===n){var i=Math.random().toString();t=t.assign(i,t.index);let e=t.values.filter((e,n)=>{e=s(e,n,t);return e||r.splice(n,1),e});if(0===g(e).length)return new O;1===l(e).length&&(e=[e]),t.values=e,t.index=t.get(null,i).values,t=t.drop(null,i)}else if(1===n){t=t.transpose();n=Math.random().toString();t=t.assign(n,t.index);let e=t.values.filter((e,n)=>{e=s(e,n,t);return e||a.splice(n,1),e});if(0===g(e).length)return new O;1===l(e).length&&(e=[e]),t.values=e,t.index=t.get(null,n).values,t=t.drop(null,n),t=t.transpose()}return t}shuffle(e){o(e)&&(e=0),c(0===e||1===e,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined.");return this.get(0===e?shuffle(this.index):null,1===e?shuffle(this.columns):null)}}e.exports=O}.call(this)}.call(this,I("_process"))},{"./apply.js":7,"./assert.js":13,"./copy.js":19,"./drop-nan.js":32,"./flatten.js":34,"./is-array.js":44,"./is-boolean.js":45,"./is-equal.js":46,"./is-function.js":47,"./is-number.js":48,"./is-string.js":49,"./is-undefined.js":50,"./max.js":54,"./min.js":57,"./ndarray.js":60,"./random.js":66,"./range.js":67,"./series.js":72,"./set.js":74,"./shape.js":75,"./sort.js":80,"./transpose.js":88,_process:3,fs:1,path:2}],25:[function(e,n,s){const a=e("./assert.js"),i=e("./is-array.js"),o=e("./flatten.js");n.exports=function(e,n){a(i(e),"You must pass two arrays into the `diff` function!"),a(i(n),"You must pass two arrays into the `diff` function!");const s=o(e),t=o(n),r=[];return s.forEach(e=>{t.indexOf(e)<0&&r.push(e)}),r}},{"./assert.js":13,"./flatten.js":34,"./is-array.js":44}],26:[function(e,n,s){const t=e("./pow.js"),r=e("./sum.js"),a=e("./sqrt.js"),i=e("./subtract.js");n.exports=function(e,n){try{return a(r(t(i(e,n),2)))}catch(e){return NaN}}},{"./pow.js":64,"./sqrt.js":81,"./subtract.js":84,"./sum.js":85}],27:[function(e,n,s){const t=e("./scale.js"),r=e("./pow.js");n.exports=function(e,n){return t(e,r(n,-1))}},{"./pow.js":64,"./scale.js":71}],28:[function(e,n,s){const u=e("./assert.js"),c=e("./is-undefined.js"),l=e("./is-array.js"),h=e("./is-number.js");e("./is-equal.js");const f=e("./flatten.js"),d=e("./shape.js"),j=e("./sum.js"),m=e("./scale.js"),p=e("./transpose.js");n.exports=function s(t,n){u(!c(t)&&!c(n),"You must pass two arrays of numbers into the `dot` function!"),u(l(t)&&l(n),"You must pass two arrays of numbers into the `dot` function!"),f(t).concat(f(n)).forEach(e=>{u(h(e),"One of the arrays you passed into the `dot` function contains non-numerical values!")});var e=d(t),r=d(n);if(u(e.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),u(e[e.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${e[e.length-1]} !== ${r[0]})`),1===e.length&&1===r.length)return j(m(t,n));if(1===e.length&&2===r.length)return p(n).map(e=>s(t,e));if(2===e.length&&1===r.length)return t.map(e=>s(e,n));if(2===e.length&&2===r.length){var a=p(n);const i=[];for(let n=0;n<t.length;n++){const o=[];for(let e=0;e<a.length;e++)o.push(s(t[n],a[e]));i.push(o)}return i}}},{"./assert.js":13,"./flatten.js":34,"./is-array.js":44,"./is-equal.js":46,"./is-number.js":48,"./is-undefined.js":50,"./scale.js":71,"./shape.js":75,"./sum.js":85,"./transpose.js":88}],29:[function(e,n,s){const a=e("./assert.js"),i=e("./is-undefined.js"),o=e("./is-array.js"),u=e("./max.js"),c=e("./shape.js");n.exports=function(n,s){a(o(n)&&o(s),"The two items passed into the `dropMissingPairwise` function must be arrays!"),a(1===c(n).length&&1===c(s).length,"The `dropMissingPairwise` function only works on one-dimensional arrays!");const t=[],r=[];for(let e=0;e<u([n.length,s.length]);e++)i(n[e])||i(s[e])||(t.push(n[e]),r.push(s[e]));return[t,r]}},{"./assert.js":13,"./is-array.js":44,"./is-undefined.js":50,"./max.js":54,"./shape.js":75}],30:[function(e,n,s){const t=e("./assert.js"),r=e("./is-array.js"),a=e("./is-undefined.js"),i=e("./shape.js");n.exports=function(e){return t(r(e),"The value passed into the `dropMissing` function must be a one-dimensional array!"),t(1===i(e).length,"The value passed into the `dropMissing` function must be a one-dimensional array!"),e.filter(e=>!a(e))}},{"./assert.js":13,"./is-array.js":44,"./is-undefined.js":50,"./shape.js":75}],31:[function(e,n,s){const a=e("./assert.js"),i=e("./is-undefined.js"),o=e("./is-array.js"),u=e("./is-number.js"),c=e("./max.js"),l=e("./shape.js");n.exports=function(n,s){a(o(n)&&o(s),"The two items passed into the `dropNaNPairwise` function must be arrays!"),a(1===l(n).length&&1===l(s).length,"The `dropNaNPairwise` function only works on one-dimensional arrays!");const t=[],r=[];for(let e=0;e<c([n.length,s.length]);e++)!i(n[e])&&u(n[e])&&!i(s[e])&&u(s[e])&&(t.push(n[e]),r.push(s[e]));return[t,r]}},{"./assert.js":13,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50,"./max.js":54,"./shape.js":75}],32:[function(e,n,s){const t=e("./assert.js"),r=e("./is-array.js"),a=e("./is-undefined.js"),i=e("./is-number.js"),o=e("./shape.js");n.exports=function(e){return t(r(e),"The value passed into the `dropNaN` function must be a one-dimensional array!"),t(1===o(e).length,"The value passed into the `dropNaN` function must be a one-dimensional array"),e.filter(e=>!a(e)&&i(e))}},{"./assert.js":13,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50,"./shape.js":75}],33:[function(e,n,s){const t=e("./vectorize.js");n.exports=t(function e(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*e(n-1)}catch(e){return NaN}})},{"./vectorize.js":91}],34:[function(e,n,s){const t=e("./assert.js"),r=e("./is-undefined.js"),a=e("./is-array.js");n.exports=function n(e){t(!r(e),"You must pass one array into the `flatten` function!"),t(a(e),"The `flatten` function only works on arrays!");let s=[];return e.forEach(function(e){a(e)?s=s.concat(n(e)):s.push(e)}),s}},{"./assert.js":13,"./is-array.js":44,"./is-undefined.js":50}],35:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{var n=JSON.parse(e);return t(n)?n:NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],36:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.floor(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],37:[function(e,n,s){const t=e("./assert.js"),r=e("./is-undefined.js"),a=e("./is-array.js"),i=e("./is-number.js"),o=e("./shape.js"),u=e("./int.js");n.exports=function e(n,s){return t(!r(n),"You must pass an array and an index into the `getValueAt` function!"),t(a(n),"You must pass an array and an index into the `getValueAt` function!"),t(i(s)||a(s),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),a(s)&&(t(1===o(s).length,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),s.forEach(e=>{t(i(e)&&u(e)===e,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),t(s.length<=o(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),i(s)?(t(s<n.length,`The index ${s} is out of bounds!`),n[s]):1<s.length?(t(s[0]<n.length,`The index ${s[0]} is out of bounds!`),e(n[s[0]],s.slice(1))):e(n,s[0])}},{"./assert.js":13,"./int.js":41,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50,"./shape.js":75}],38:[function(e,n,s){const t=e("./assert.js"),r=e("./is-undefined.js"),a=e("./is-number.js"),i=e("./zeros.js");n.exports=function(n){t(!r(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),t(a(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),t(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),t(0<n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");const s=i([n,n]);for(let e=0;e<n;e++)s[e][e]=1;return s}},{"./assert.js":13,"./is-number.js":48,"./is-undefined.js":50,"./zeros.js":93}],39:[function(e,n,s){const o=e("./assert.js"),u=e("./is-undefined.js"),c=e("./is-array.js"),l=e("./shape.js"),h=e("./is-equal.js");n.exports=function n(s,t,r){if(o(!u(s),"You must pass an array and a value into the `indexOf` function!"),o(c(s),"You must pass an array and a value into the `indexOf` function!"),1===l(s).length||c(t)&&h(l(s[0]),l(t))){for(let e=0;e<s.length;e++){var a=s[e];if(h(a,t)&&(!r||a===t))return[e]}return null}for(let e=0;e<s.length;e++){var i=n(s[e],t);if(i)return[e].concat(i)}return null}},{"./assert.js":13,"./is-array.js":44,"./is-equal.js":46,"./is-undefined.js":50,"./shape.js":75}],40:[function(e,t,n){!function(s){!function(){let n={abs:e("./abs.js"),add:e("./add.js"),append:e("./append.js"),apply:e("./apply.js"),arccos:e("./arccos.js"),arcsin:e("./arcsin.js"),arctan:e("./arctan.js"),argmax:e("./argmax.js"),argmin:e("./argmin.js"),assert:e("./assert.js"),ceil:e("./ceil.js"),chop:e("./chop.js"),clamp:e("./clamp.js"),cohensd:e("./cohens-d.js"),combine:e("./combine.js"),copy:e("./copy.js"),correl:e("./correl.js"),cos:e("./cos.js"),count:e("./count.js"),covariance:e("./covariance.js"),DataFrame:e("./dataframe.js"),diff:e("./diff.js"),distance:e("./distance.js"),divide:e("./divide.js"),dot:e("./dot.js"),dropMissing:e("./drop-missing.js"),dropMissingPairwise:e("./drop-missing-pairwise.js"),dropNaN:e("./drop-nan.js"),dropNaNPairwise:e("./drop-nan-pairwise.js"),factorial:e("./factorial.js"),flatten:e("./flatten.js"),float:e("./float.js"),floor:e("./floor.js"),getValueAt:e("./get-value-at.js"),identity:e("./identity.js"),indexOf:e("./index-of.js"),int:e("./int.js"),intersect:e("./intersect.js"),inverse:e("./inverse.js"),isArray:e("./is-array.js"),isBoolean:e("./is-boolean.js"),isEqual:e("./is-equal.js"),isFunction:e("./is-function.js"),isNumber:e("./is-number.js"),isString:e("./is-string.js"),isUndefined:e("./is-undefined.js"),lerp:e("./lerp.js"),log:e("./log.js"),map:e("./map.js"),max:e("./max.js"),mean:e("./mean.js"),median:e("./median.js"),min:e("./min.js"),mode:e("./mode.js"),multiply:e("./multiply.js"),ndarray:e("./ndarray.js"),normal:e("./normal.js"),ones:e("./ones.js"),permute:e("./permute.js"),pow:e("./pow.js"),print:e("./print.js"),random:e("./random.js").random,range:e("./range.js"),reshape:e("./reshape.js"),reverse:e("./reverse.js"),round:e("./round.js"),scale:e("./scale.js"),seed:e("./random.js").seed,Series:e("./series.js"),set:e("./set.js"),setValueAt:e("./set-value-at.js"),shape:e("./shape.js"),shuffle:e("./shuffle.js"),sign:e("./sign.js"),sin:e("./sin.js"),slice:e("./slice.js"),sort:e("./sort.js"),sqrt:e("./sqrt.js"),std:e("./std.js"),stdev:e("./stdev.js"),subtract:e("./subtract.js"),sum:e("./sum.js"),tan:e("./tan.js"),time:e("./time.js").timeSync,timeSync:e("./time.js").timeSync,timeAsync:e("./time.js").timeAsync,transpose:e("./transpose.js"),union:e("./union.js"),variance:e("./variance.js"),vectorize:e("./vectorize.js"),where:e("./where.js"),zeros:e("./zeros.js"),dump:function(){Object.keys(n).forEach(e=>{s[e]=n[e]})}};void 0!==t&&(t.exports=n),"undefined"!=typeof window&&(window.JSMathTools=n)}.call(this)}.call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./abs.js":4,"./add.js":5,"./append.js":6,"./apply.js":7,"./arccos.js":8,"./arcsin.js":9,"./arctan.js":10,"./argmax.js":11,"./argmin.js":12,"./assert.js":13,"./ceil.js":14,"./chop.js":15,"./clamp.js":16,"./cohens-d.js":17,"./combine.js":18,"./copy.js":19,"./correl.js":20,"./cos.js":21,"./count.js":22,"./covariance.js":23,"./dataframe.js":24,"./diff.js":25,"./distance.js":26,"./divide.js":27,"./dot.js":28,"./drop-missing-pairwise.js":29,"./drop-missing.js":30,"./drop-nan-pairwise.js":31,"./drop-nan.js":32,"./factorial.js":33,"./flatten.js":34,"./float.js":35,"./floor.js":36,"./get-value-at.js":37,"./identity.js":38,"./index-of.js":39,"./int.js":41,"./intersect.js":42,"./inverse.js":43,"./is-array.js":44,"./is-boolean.js":45,"./is-equal.js":46,"./is-function.js":47,"./is-number.js":48,"./is-string.js":49,"./is-undefined.js":50,"./lerp.js":51,"./log.js":52,"./map.js":53,"./max.js":54,"./mean.js":55,"./median.js":56,"./min.js":57,"./mode.js":58,"./multiply.js":59,"./ndarray.js":60,"./normal.js":61,"./ones.js":62,"./permute.js":63,"./pow.js":64,"./print.js":65,"./random.js":66,"./range.js":67,"./reshape.js":68,"./reverse.js":69,"./round.js":70,"./scale.js":71,"./series.js":72,"./set-value-at.js":73,"./set.js":74,"./shape.js":75,"./shuffle.js":76,"./sign.js":77,"./sin.js":78,"./slice.js":79,"./sort.js":80,"./sqrt.js":81,"./std.js":82,"./stdev.js":83,"./subtract.js":84,"./sum.js":85,"./tan.js":86,"./time.js":87,"./transpose.js":88,"./union.js":89,"./variance.js":90,"./vectorize.js":91,"./where.js":92,"./zeros.js":93}],41:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{var n=JSON.parse(e);return t(n)?parseInt(n):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],42:[function(e,n,s){const t=e("./is-array.js"),r=e("./flatten.js"),a=e("./union.js");n.exports=function(){const s=Object.values(arguments).map(e=>t(e)?r(e):[e]),e=[],n=a(s);return n.forEach(n=>{for(let e=0;e<s.length;e++)if(s[e].indexOf(n)<0)return;e.push(n)}),e}},{"./flatten.js":34,"./is-array.js":44,"./union.js":89}],43:[function(e,n,s){const b=e("./assert.js"),v=e("./is-undefined.js"),x=e("./is-array.js"),w=e("./is-number.js"),N=e("./flatten.js"),T=e("./shape.js"),O=e("./slice.js"),E=e("./dot.js"),I=e("./add.js"),z=e("./scale.js"),S=e("./append.js"),_=e("./range.js");n.exports=function n(s){b(!v(s),"You must pass a square 2D array into the `inverse` function!"),b(x(s),"You must pass a square 2D array into the `inverse` function!"),N(s).forEach(e=>b(w(e),"The array passed into the `inverse` function must contain only numbers!"));var t=T(s);if(b(2===t.length,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),b(t[0]===t[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),b(0<=t[0],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),0===t[0])return s;if(1===t[0])return b(0!==s[0][0],"This matrix cannot be inverted!"),1/s[0][0];if(2===t[0]){var e=s[0][0],r=s[0][1],a=s[1][0],i=s[1][1],o=e*i-r*a;return b(0!=o,"This matrix cannot be inverted!"),e=[[i,-r],[-a,e]],z(e,1/o)}if(1<t[0]){var u=(e,n)=>(w(e)||w(n)?z:E)(e,n);for(let e=1;e<t[0]-1;e++)try{var c=O(s,[_(0,e),_(0,e)]),l=O(s,[_(0,e),_(e,t[0])]),h=O(s,[_(e,t[0]),_(0,e)]),f=O(s,[_(e,t[0]),_(e,t[0])]),d=n(c),j=n(I(f,u(-1,u(u(h,d),l)))),m=I(d,u(u(u(u(d,l),j),h),d)),p=u(-1,u(u(d,l),j)),g=u(-1,u(u(j,h),d)),y=j;return S(S(m,p,1),S(g,y,1),0)}catch(e){}b(!1,"This matrix cannot be inverted!")}}},{"./add.js":5,"./append.js":6,"./assert.js":13,"./dot.js":28,"./flatten.js":34,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50,"./range.js":67,"./scale.js":71,"./shape.js":75,"./slice.js":79}],44:[function(e,n,s){n.exports=function(e){return e instanceof Array}},{}],45:[function(e,n,s){n.exports=function(e){return"boolean"==typeof e}},{}],46:[function(e,n,s){e("./is-array.js");n.exports=function n(s,t){var e=typeof s;if(e!=typeof t)return!1;if("undefined"==e)return!0;if("boolean"==e)return s===t;if("number"==e||"bigint"==e)return s===t;if("string"==e)return s===t;if("function"==e)return s===t;if("object"==e){if(null===s||null===t)return null===s&&null===t;var r=Object.keys(s),e=Object.keys(t);if(r.length!==e.length)return!1;for(let e=0;e<r.length;e++){var a=r[e];if(!t.hasOwnProperty(a))return!1;if(!n(s[a],t[a]))return!1}return!0}}},{"./is-array.js":44}],47:[function(e,n,s){n.exports=function(e){return"function"==typeof e}},{}],48:[function(e,n,s){n.exports=function(e){return"number"==typeof e&&!isNaN(e)}},{}],49:[function(e,n,s){n.exports=function(e){return"string"==typeof e}},{}],50:[function(e,n,s){n.exports=function(e){return null==e}},{}],51:[function(e,n,s){const t=e("./vectorize.js"),r=e("./is-number.js");n.exports=t(function(e,n,s){try{return r(e)?r(n)&&r(s)?s*(n-e)+e:NaN:NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],52:[function(e,n,s){const t=e("./is-number.js"),r=e("./is-undefined.js"),a=e("./vectorize.js");n.exports=a(function(e,n){try{return n=r(n)?Math.E:n,t(e)?t(n)?Math.log(e)/Math.log(n):NaN:NaN}catch(e){return NaN}})},{"./is-number.js":48,"./is-undefined.js":50,"./vectorize.js":91}],53:[function(e,n,s){const a=e("./is-number.js"),t=e("./vectorize.js");n.exports=t(function(e,n,s,t,r){try{return a(e)?a(n)&&a(s)&&a(t)&&a(r)?(r-t)*(e-n)/(s-n)+t:NaN:NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],54:[function(e,n,s){const t=e("./flatten.js"),r=e("./is-number.js");n.exports=function(e){try{var s=t(e);let n=-1/0;for(let e=0;e<s.length;e++){if(!r(s[e]))return NaN;s[e]>n&&(n=s[e])}return n===-1/0?NaN:n}catch(e){return NaN}}},{"./flatten.js":34,"./is-number.js":48}],55:[function(e,n,s){const t=e("./is-number.js"),r=e("./flatten.js");n.exports=function(e){try{var s=r(e);let n=0;for(let e=0;e<s.length;e++){if(!t(s[e]))return NaN;n+=s[e]}return n/s.length}catch(e){return NaN}}},{"./flatten.js":34,"./is-number.js":48}],56:[function(e,n,s){e("./assert.js"),e("./is-undefined.js"),e("./is-array.js"),e("./is-number.js");const r=e("./flatten.js"),a=e("./sort.js"),i=e("./drop-nan.js");n.exports=function(n){try{var s=r(n),t=i(s);if(0===t.length)return NaN;if(t.length<s.length)return NaN;t=a(t);let e;return e=t.length%2==0?(t[t.length/2-1]+t[t.length/2])/2:t[Math.floor(t.length/2)],e}catch(e){return NaN}}},{"./assert.js":13,"./drop-nan.js":32,"./flatten.js":34,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50,"./sort.js":80}],57:[function(e,n,s){const t=e("./flatten.js"),r=e("./is-number.js");n.exports=function(e){try{var s=t(e);let n=1/0;for(let e=0;e<s.length;e++){if(!r(s[e]))return NaN;s[e]<n&&(n=s[e])}return n===1/0?NaN:n}catch(e){return NaN}}},{"./flatten.js":34,"./is-number.js":48}],58:[function(e,n,s){const o=e("./flatten.js"),u=e("./count.js"),c=e("./set.js"),l=e("./sort.js");n.exports=function(e){try{if(0===e.length)return NaN;const s=o(e);if(0===s.length)return NaN;const t={},r=c(s);r.forEach(e=>{t[e]=u(s,e)});const a=l(r,(e,n)=>t[n]-t[e]),i=a[0];var n=l(a.filter(e=>t[e]===t[i]));return 1===n.length?n[0]:n}catch(e){return NaN}}},{"./count.js":22,"./flatten.js":34,"./set.js":74,"./sort.js":80}],59:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(){try{let n=1;var s=Object.values(arguments);for(let e=0;e<s.length;e++){if(!t(s[e]))return NaN;n*=s[e]}return n}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],60:[function(e,n,s){const a=e("./assert.js"),i=e("./is-undefined.js"),o=e("./is-array.js"),u=e("./is-number.js"),c=e("./flatten.js"),l="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";n.exports=function n(s,e){if(e||(a(!i(s),l),o(s)||(s=[s]),s=c(s),a(0<s.length,l),s.forEach(e=>{a(u(e),l),a(parseInt(e)===e,l),a(0<=e,l)})),1===s.length){const t=[];for(let e=0;e<s[0];e++)t.push(void 0);return t}{const r=[];for(let e=0;e<s[0];e++)r.push(n(s.slice(1),!0));return r}}},{"./assert.js":13,"./flatten.js":34,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50}],61:[function(e,n,s){const t=e("./is-undefined.js");e("./ndarray.js"),e("./apply.js");const r=e("./random.js")["random"],a=e("./reshape.js"),i=e("./is-number.js");function o(){var e=r(),n=r();return Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*n)}n.exports=function(e){if(t(e))return o();i(e)&&(e=[e]);const n=[];let s=1;e.forEach(e=>s*=e);for(let e=0;e<s;e++)n.push(o());return a(n,e)}},{"./apply.js":7,"./is-number.js":48,"./is-undefined.js":50,"./ndarray.js":60,"./random.js":66,"./reshape.js":68}],62:[function(e,n,s){e("./ndarray.js"),e("./apply.js");const t=e("./reshape.js"),r=e("./is-number.js");n.exports=function(e){r(e)&&(e=[e]);const n=[];let s=1;e.forEach(e=>s*=e);for(let e=0;e<s;e++)n.push(1);return t(n,e)}},{"./apply.js":7,"./is-number.js":48,"./ndarray.js":60,"./reshape.js":68}],63:[function(e,n,s){const u=e("./is-array.js"),t=e("./is-number.js"),c=e("./assert.js"),l=e("./is-undefined.js");n.exports=function r(a,i){if(c(u(a),"The `permute` function only works on arrays!"),l(i)&&(i=a.length),c(t(i),"`r` must be a whole number!"),i>a.length)return[a];if(i<=0)return[[]];if(c(i===parseInt(i),"`r` must be a whole number!"),a.length<2)return a;const o=[];return a.forEach((n,e)=>{c(!u(n),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");const s=a.slice(0,e);e=a.slice(e+1);const t=r(s.concat(e),i-1);t.forEach(e=>{o.push([n].concat(e))})}),o}},{"./assert.js":13,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50}],64:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e,n){try{return t(e)?t(n)?Math.pow(e,n):NaN:NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],65:[function(e,n,s){let t=e("./is-array.js"),r=e("./shape.js"),a=e("./dataframe.js"),i=e("./series.js");n.exports=function(){Object.keys(arguments).forEach(e=>{let n=arguments[e];t(n)?1===(e=r(n)).length?new i(n).print():2==e.length?new a(n).print():console.log(n):n instanceof a||n instanceof i?n.print():console.log(n)})}},{"./dataframe.js":24,"./is-array.js":44,"./series.js":72,"./shape.js":75}],66:[function(e,n,s){e("./ndarray.js"),e("./apply.js");const t=e("./is-undefined.js"),r=e("./assert.js"),a=e("./is-number.js"),i=e("./copy.js"),o=e("./reshape.js"),u=Math.pow(2,64),c=[];function l(n,s){n=h(n);const t=[];for(let e=0;e<s;e++)t.push(function(){n+=h("0x9e3779b97f4a7c15");var e=i(n);return(e=((e=(e^e>>30n)*h("0xbf58476d1ce4e5b9"))^e>>27n)*h("0x94d049bb133111eb"))^e>>31n}());return t}function h(e){return BigInt.asUintN(64,BigInt(e))}function f(e,n){return e=h(e),h(h(e<<(n=BigInt(n)))|h(e>>h(64n-n)))}function d(e){if(t(e))return i(c);r(a(e),"If passing a value into the `seed` function, then that value must be an integer!");e=l(parseInt(e),4);c[0]=e[0],c[1]=e[1],c[2]=e[2],c[3]=e[3]}function j(){var e=h(f(c[0]+c[3],23)+c[0]),n=h(c[1]<<17n);return c[2]=h(c[2]^c[0]),c[3]=h(c[3]^c[1]),c[1]=h(c[1]^c[2]),c[0]=h(c[0]^c[3]),c[2]=h(c[2]^n),c[3]=f(c[3],45),parseInt(e)/u}d(parseInt(Math.random()*u)),n.exports={random:function(e){if(t(e))return j();a(e)&&(e=[e]);const n=[];let s=1;e.forEach(e=>s*=e);for(let e=0;e<s;e++)n.push(j());return o(n,e)},seed:d}},{"./apply.js":7,"./assert.js":13,"./copy.js":19,"./is-number.js":48,"./is-undefined.js":50,"./ndarray.js":60,"./reshape.js":68}],67:[function(e,n,s){const i=e("./assert.js"),o=e("./is-undefined.js"),u=e("./is-number.js"),c=e("./reverse.js");n.exports=function(n,s,t=1){i(!o(n)&&!o(s)&&!o(t),"You must pass two numbers and optionally a step value to the `range` function!"),i(u(n)&&u(s)&&u(t),"You must pass two numbers and optionally a step value to the `range` function!"),i(0<t,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let e=!1;var r;s<n&&(e=!0,r=n,n=s+t,s=r+t);let a=[];for(let e=n;e<s;e+=t)a.push(e);return e&&(a=c(a)),a}},{"./assert.js":13,"./is-number.js":48,"./is-undefined.js":50,"./reverse.js":69}],68:[function(e,n,s){const o=e("./assert.js"),u=e("./is-array.js"),c=e("./is-number.js"),l=e("./shape.js"),h=e("./flatten.js");n.exports=function n(e,s){if(o(u(e),"The first argument passed into the `reshape` function must be an array!"),c(s)&&(s=[s]),o(u(s),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),o(1===l(s).length,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),s.forEach(e=>{o(c(e)&&parseInt(e)===e&&0<e,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),s.length<=1)return h(e);let t=h(e);o(s.reduce((e,n)=>e*n)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[];var a=parseInt(t.length/s[0]);for(let e=0;e<s[0];e++){var i=t.slice(e*a,(e+1)*a);r.push(n(i,s.slice(1)))}return r}},{"./assert.js":13,"./flatten.js":34,"./is-array.js":44,"./is-number.js":48,"./shape.js":75}],69:[function(e,n,s){const t=e("./assert.js"),r=e("./is-undefined.js"),a=e("./is-array.js");n.exports=function(n){t(!r(n),"You must pass an array into the `reverse` function!"),t(a(n),"You must pass an array into the `reverse` function!");const s=[];for(let e=n.length-1;0<=e;e--)s.push(n[e]);return s}},{"./assert.js":13,"./is-array.js":44,"./is-undefined.js":50}],70:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.round(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],71:[function(e,n,s){const t=e("./multiply.js");n.exports=function(e,n){return t(e,n)}},{"./multiply.js":59}],72:[function(e,n,s){const r=e("./assert.js"),a=e("./is-array.js"),i=e("./is-undefined.js"),o=e("./shape.js"),t=e("./transpose.js"),u=e("./range.js"),c=e("./is-number.js"),l=e("./is-string.js");e("./apply.js");const h=e("./is-function.js"),f=e("./ndarray.js"),d=e("./copy.js"),j=e("./set.js"),m=e("./reverse.js"),p=e("./sort.js"),g=e("./is-boolean.js");function y(e){return n=e,c(n)&&parseInt(n)===n&&0<=e;var n}function b(e,n){r(c(e),"The `leftPad` function only works on numbers!");let s=e.toString();for(;s.length<n;)s="0"+s;return s}class v{constructor(e){const s=this;var n;s.name="data",Object.defineProperty(s,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"values",{configurable:!0,enumerable:!0,get(){return s._values},set(n){r(a(n),"The new values must be a 1-dimensional array!");var e=o(n);r(1===e.length,"The new array of values must be 1-dimensional!"),e[0]<s._index.length?s._index=s._index.slice(0,e[0]):e[0]>s._index.length&&(s._index=s._index.concat(u(s._index.length,e[0]).map(e=>"row"+b(e,(n.length-1).toString().length)))),s._values=n}}),Object.defineProperty(s,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(s,"index",{configurable:!0,enumerable:!0,get(){return s._index},set(e){r(a(e),"The new index must be a 1-dimensional array of strings!"),r(e.length===s.shape[0],"The new index must be the same length as the old index!"),r(1===o(e).length,"The new index must be a 1-dimensional array of strings!"),e.forEach(e=>{r(l(e),"All of the row names must be strings!")}),s._index=e}}),e&&(n=o(e),r(1===n.length,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),s.values=e)}get shape(){return o(this.values)}isEmpty(){return 0===this.values.filter(e=>!i(e)).length}clear(){const e=this.copy();return e.values=f(e.shape),e.index=this.index,e}get(e){const n=this;(l(e)||c(e))&&(e=[e]);const s=j((e||[]).map(e=>typeof e));return r(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),1===s.length&&r("string"===s[0]||"number"===s[0],"Only whole numbers and/or strings are allowed in `get` arrays!"),2===s.length&&(r(-1<s.indexOf("string"),"Only whole numbers and/or strings are allowed in `get` arrays!"),r(-1<s.indexOf("number"),"Only whole numbers and/or strings are allowed in `get` arrays!")),i(e)||(e=e.map(e=>"string"==typeof e?(r(-1<n.index.indexOf(e),`Index "${e}" does not exist!`),e):"number"==typeof e?(r(0<=e,`Index ${e} is out of bounds!`),r(parseInt(e)===e,"Indices must be integers!"),r(e<n.index.length,`Index ${e} is out of bounds!`),n.index[e]):void 0)),n.getSubsetByNames(e)}getSubsetByNames(e){const n=this;i(e)&&(e=n.index),r(a(e),"The `indices` array must be a 1-dimensional array of strings."),r(1===o(e).length,"The `indices` array must be a 1-dimensional array of strings."),r(0<e.length,"The `indices` array must contain at least one index name."),e.forEach(e=>{r(l(e),"The `indices` array must contain only strings."),r(-1<n.index.indexOf(e),`The name "${e}" does not exist in the index.`)});var s=e.map(e=>n.values[n.index.indexOf(e)]);if(1===s.length)return s[0];const t=new v(s);return t.index=e,t.name=n.name,t}getSubsetByIndices(e){const n=this;var s=n.shape;i(e)&&(e=u(0,s[0])),r(a(e),"The `indices` array must be 1-dimensional array of whole numbers."),r(1===o(e).length,"The `indices` array must be a 1-dimensional array of whole numbers."),r(0<e.length,"The `indices` array must contain at least one index."),e.forEach(e=>{r(y(e),"The `indices` array must be a 1-dimensional array of whole numbers."),r(e<n.index.length,`The row index ${e} is out of bounds.`)});e=e.map(e=>n.index[e]);return n.getSubsetByNames(e)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){const e=new v(m(this.values));return e.index=m(this.index),e.name=this.name,e}resetIndex(){const n=this.copy();return n.index=u(0,this.shape[0]).map(e=>"row"+b(e,(n.index.length-1).toString().length)),n}copy(){const e=new v(d(this.values));return e.index=this.index.slice(),e.name=this.name,e}apply(s){r(h(s),"The parameter to the `apply` method must be a function.");const t=this.copy();return t.values=t.values.map((e,n)=>s(e,t.index[n])),t}dropMissing(e,n){const s=this.copy(),t=[];return s.values=s.values.filter((e,n)=>!i(e)&&(t.push(s.index[n]),!0)),s.index=t,s}toObject(){const s=this,t={};return t[s.name]={},s.index.forEach((e,n)=>{t[s.name][e]=s.values[n]}),t}print(){let t=this.copy();var e="undefined"==typeof window?20:10;if(t.index.length>e){t=t.get(u(0,e/2).concat(u(t.index.length-e/2,t.index.length)));const n=d(t.index);n.splice(parseInt(n.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(n)}const r={};return t.values.forEach((e,n)=>{const s={};s[t.name]=e,r[t.index[n]]=s}),console.table(r),this}sort(e){r(g(e)||l(e)||i(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let s=!0;i(e)&&(s=!0),l(e)&&(e=e.trim().toLowerCase(),r("ascending"===e||"descending"===e,"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),s="ascending"===e),g(e)&&(s=e);e=t([this.values,this.index]),e=t(p(e,(e,n)=>e[0]===n[0]?0:e[0]<n[0]?s?-1:1:e[0]>n[0]?s?1:-1:void 0));const n=new v(e[0]);return n.index=e[1],n.name=this.name,n}sortByIndex(){var e=t([this.values,this.index]),e=t(p(e,(e,n)=>e[1]===n[1]?0:e[1]<n[1]?-1:e[1]>n[1]?1:void 0));const n=new v(e[0]);return n.index=e[1],n.name=this.name,n}filter(s){let t=this.copy();const n=d(t.index),r=[];var e=t.values.filter((e,n)=>{e=s(e,n,t.values);return e||r.push(t.index[n]),e});return r.forEach(e=>{n.splice(n.indexOf(e),1)}),0===e.length?(t=new v,t.name=this.name):(t.values=e,t.index=n),t}}n.exports=v},{"./apply.js":7,"./assert.js":13,"./copy.js":19,"./is-array.js":44,"./is-boolean.js":45,"./is-function.js":47,"./is-number.js":48,"./is-string.js":49,"./is-undefined.js":50,"./ndarray.js":60,"./range.js":67,"./reverse.js":69,"./set.js":74,"./shape.js":75,"./sort.js":80,"./transpose.js":88}],73:[function(e,n,s){const r=e("./assert.js"),a=e("./is-number.js"),i=e("./is-array.js"),o=e("./copy.js");n.exports=function(e,n,s){r(i(e),"The first argument passed into the `setValueAt` function must be an array!"),a(n)&&(n=[n]),r(i(n),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let t=e=o(e);for(let e=0;e<n.length-1;e++)t=t[n[e]];return t[n[n.length-1]]=s,e}},{"./assert.js":13,"./copy.js":19,"./is-array.js":44,"./is-number.js":48}],74:[function(e,n,s){const r=e("./assert.js"),a=e("./is-undefined.js"),i=e("./is-array.js"),o=e("./flatten.js");n.exports=function(e){r(!a(e),"You must pass an array into the `set` function!"),r(i(e),"You must pass an array into the `set` function!");const s=[],t={};return o(e).forEach(e=>{var n=void 0===e?"undefined":"function"==typeof e?e.toString():JSON.stringify(e);t[n]||s.push(e),t[n]=!0}),s}},{"./assert.js":13,"./flatten.js":34,"./is-array.js":44,"./is-undefined.js":50}],75:[function(e,n,s){const i=e("./assert.js"),o=e("./is-undefined.js"),u=e("./is-array.js"),c=e("./max.js");n.exports=function e(n){i(!o(n),"You must pass an array into the `shape` function!"),i(u(n),"You must pass an array into the `shape` function!");let s=[n.length];const t=n.map(e=>u(e));if(-1<t.indexOf(!0)){i(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");const r=n.map(e=>e.length),a=c(r);r.forEach(function(e){i(e===a,"The array passed into the `shape` function has some children of inconsistent length!")}),s=s.concat(e(n[0]))}return s}},{"./assert.js":13,"./is-array.js":44,"./is-undefined.js":50,"./max.js":54}],76:[function(e,n,s){const a=e("./assert.js"),i=e("./is-undefined.js"),o=e("./is-array.js");e("./floor.js");const u=e("./random.js")["random"];n.exports=function(n){a(!i(n),"You must pass an array into the `shuffle` function!"),a(o(n),"You must pass an array into the `shuffle` function!");const s=[];let t=n.slice();for(let e=0;e<n.length;e++){var r=parseInt(u()*t.length);s.push(t.splice(r,1)[0])}return s}},{"./assert.js":13,"./floor.js":36,"./is-array.js":44,"./is-undefined.js":50,"./random.js":66}],77:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?e<0?-1:0<e?1:0:NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],78:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.sin(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],79:[function(e,n,s){const i=e("./assert.js"),o=e("./is-undefined.js"),u=e("./is-number.js"),c=e("./is-array.js"),l=e("./range.js"),h=e("./flatten.js");e("./shape.js");const f=e("./floor.js");n.exports=function s(t,r){if(i(!o(t),"You must pass an array into the `slice` function!"),i(c(t),"You must pass an array into the `slice` function!"),o(r))return t.slice();i(c(r),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),h(r).forEach(e=>{i(o(e)||u(e)&&f(e)===e,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let e=r[0];o(e)&&(e=l(0,t.length)),u(e)&&(e=[e]);const a=[];return e.forEach(e=>{i(e<t.length,"Index out of bounds in the `slice` function!"),e<0&&(e+=t.length);var n=t[e];c(n)?a.push(s(t[e],r.slice(1,r.length))):a.push(t[e])}),a}},{"./assert.js":13,"./flatten.js":34,"./floor.js":36,"./is-array.js":44,"./is-number.js":48,"./is-undefined.js":50,"./range.js":67,"./shape.js":75}],80:[function(e,n,s){const t=e("./assert.js"),r=e("./is-undefined.js"),a=e("./is-array.js"),i=e("./is-function.js");function o(e,n){return e<n?-1:n<e?1:0}n.exports=function(e,n){r(n)&&(n=o),t(!r(e),"You must pass an array into the `sort` function!"),t(a(e),"You must pass an array into the `sort` function!"),t(i(n),"The second parameter of the `sort` function must be a comparison function!");const s=e.slice();return s.sort(n),s}},{"./assert.js":13,"./is-array.js":44,"./is-function.js":47,"./is-undefined.js":50}],81:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.sqrt(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],82:[function(e,n,s){const t=e("./sqrt.js"),r=e("./variance.js");n.exports=function(e){try{return t(r(e))}catch(e){return NaN}}},{"./sqrt.js":81,"./variance.js":90}],83:[function(e,n,s){const t=e("./std.js");n.exports=function(e){return t(e)}},{"./std.js":82}],84:[function(e,n,s){const t=e("./add.js"),r=e("./scale.js");n.exports=function(e,n){return t(e,r(n,-1))}},{"./add.js":5,"./scale.js":71}],85:[function(e,n,s){const t=e("./add.js"),r=e("./flatten.js");n.exports=function(e){try{return t(...r(e))}catch(e){return NaN}}},{"./add.js":5,"./flatten.js":34}],86:[function(e,n,s){const t=e("./is-number.js"),r=e("./vectorize.js");n.exports=r(function(e){try{return t(e)?Math.tan(e):NaN}catch(e){return NaN}})},{"./is-number.js":48,"./vectorize.js":91}],87:[function(e,n,s){const t=e("./is-function.js");n.exports={timeSync:function(e,n){assert(t(e),"`fn` must be a function!");var s=new Date;return n?e(...n):e(),new Date-s},timeAsync:async function(e,n){assert(t(e),"`fn` must be a function!");var s=new Date;return n?await e(...n):await e(),new Date-s}}},{"./is-function.js":47}],88:[function(e,n,s){const a=e("./assert.js"),i=e("./is-undefined.js"),o=e("./is-array.js"),u=e("./shape.js"),c=e("./reverse.js"),l=e("./ndarray.js");n.exports=function(s){a(!i(s),"You must pass an array into the `transpose` function!"),a(o(s),"You must pass an array into the `transpose` function!");var t=u(s);if(a(t.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),1===t.length)return c(s);if(2===t.length){const r=l(c(t));for(let n=0;n<t[0];n++)for(let e=0;e<t[1];e++)r[e][n]=s[n][e];return r}}},{"./assert.js":13,"./is-array.js":44,"./is-undefined.js":50,"./ndarray.js":60,"./reverse.js":69,"./shape.js":75}],89:[function(e,n,s){e("./assert.js");const t=e("./set.js");n.exports=function(){return t([...arguments])}},{"./assert.js":13,"./set.js":74}],90:[function(e,n,s){const r=e("./mean.js"),a=e("./flatten.js"),i=e("./is-number.js");n.exports=function(e){try{var s=a(e),t=r(s);let n=0;for(let e=0;e<s.length;e++){if(!i(s[e]))return NaN;n+=(s[e]-t)*(s[e]-t)}return n/s.length}catch(e){return NaN}}},{"./flatten.js":34,"./is-number.js":48,"./mean.js":55}],91:[function(e,n,s){const i=e("./assert.js"),t=e("./is-undefined.js"),o=e("./is-array.js"),u=e("./max.js"),r=e("./is-function.js");n.exports=function(a){return i(!t(a),"You must pass a function into the `vectorize` function!"),i(r(a),"You must pass a function into the `vectorize` function!"),function e(){if(-1<Object.keys(arguments).map(e=>o(arguments[e])).indexOf(!0)){const t=[],n=Object.keys(arguments).filter(e=>o(arguments[e])).map(e=>arguments[e].length),r=u(n);n.forEach(e=>{i(e===r,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let n=0;n<r;n++){var s=Object.keys(arguments).map(e=>o(arguments[e])?arguments[e][n]:arguments[e]);t.push(e(...s))}return t}return a(...arguments)}}},{"./assert.js":13,"./is-array.js":44,"./is-function.js":47,"./is-undefined.js":50,"./max.js":54}],92:[function(e,n,s){const o=e("./assert.js"),u=e("./is-array.js"),c=e("./is-function.js"),l=e("./apply.js"),h=e("./index-of.js"),f=e("./set-value-at.js"),d=e("./flatten.js");n.exports=function(e,n){o(u(e),"The first argument passed into the `where` function must be an array!"),o(c(n),"The second argument passed into the `where` function must be a function!"),d(e).length;let s=l(e,n);const t=[];let r=0,a=!1;for(;!a;){var i=h(s,!0);i?(t[r]=i,s=f(s,i,null),r++):a=!0}return 0===r?null:t}},{"./apply.js":7,"./assert.js":13,"./flatten.js":34,"./index-of.js":39,"./is-array.js":44,"./is-function.js":47,"./set-value-at.js":73}],93:[function(e,n,s){e("./ndarray.js"),e("./apply.js");const t=e("./is-number.js"),r=e("./reshape.js");n.exports=function(e){t(e)&&(e=[e]);const n=[];let s=1;e.forEach(e=>s*=e);for(let e=0;e<s;e++)n.push(0);return r(n,e)}},{"./apply.js":7,"./is-number.js":48,"./ndarray.js":60,"./reshape.js":68}]},{},[40]);
