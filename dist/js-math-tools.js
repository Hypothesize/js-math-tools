(()=>{var ft=(n=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(n,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):n)(function(n){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+n+'" is not supported')});var a=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var f=a((hm,rn)=>{function lu(n){return typeof n=="number"&&!isNaN(n)}rn.exports=lu});var se=a((mm,on)=>{var sn=class extends Error{constructor(e){typeof window<"u"?super("\u{1F449} "+e):super(`

\u{1F449} \x1B[31m`+e+`
\x1B[0m`)}};on.exports=sn});var h=a((pm,un)=>{var fu=se();un.exports=function(n,e){if(!n)throw new fu(e)}});var m=a((dm,an)=>{function hu(n){return n===null||typeof n>"u"}an.exports=hu});var p=a((gm,cn)=>{function mu(n){return n instanceof Array}cn.exports=mu});var x=a((qm,mn)=>{var ln=h(),pu=m(),fn=p();function hn(n){ln(!pu(n),"You must pass one array into the `flatten` function!"),ln(fn(n),"The `flatten` function only works on arrays!");let e=[];return n.forEach(function(t){fn(t)?e=e.concat(hn(t)):e.push(t)}),e}mn.exports=hn});var C=a((ym,pn)=>{var du=x(),gu=f();function qu(n){try{let e=du(n),t=-1/0;for(let r=0;r<e.length;r++){if(!gu(e[r]))return NaN;e[r]>t&&(t=e[r])}return t===-1/0?NaN:t}catch{return NaN}}pn.exports=qu});var U=a((bm,dn)=>{function yu(n){return typeof n=="function"}dn.exports=yu});var b=a((Nm,gn)=>{var ht=h(),bu=m(),mt=p(),Nu=C(),xu=U();function wu(n){return ht(!bu(n),"You must pass a function into the `vectorize` function!"),ht(xu(n),"You must pass a function into the `vectorize` function!"),function e(){if(Object.keys(arguments).map(r=>mt(arguments[r])).indexOf(!0)>-1){let r=[],s=Object.keys(arguments).filter(i=>mt(arguments[i])).map(i=>arguments[i].length),o=Nu(s);s.forEach(i=>{ht(i===o,"If using arrays for all arguments to this function, then the arrays must all have equal length!")});for(let i=0;i<o;i++){let u=Object.keys(arguments).map(l=>mt(arguments[l])?arguments[l][i]:arguments[l]);r.push(e(...u))}return r}else return n(...arguments)}}gn.exports=wu});var pt=a((xm,qn)=>{var vu=f(),Tu=b();function Su(n){try{return vu(n)?Math.abs(n):NaN}catch{return NaN}}qn.exports=Tu(Su)});var he=a((wm,yn)=>{var Ou=f(),Au=b();function Eu(){try{let n=0,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!Ou(e[t]))return NaN;n+=e[t]}return n}catch{return NaN}}yn.exports=Au(Eu)});var w=a((vm,xn)=>{var Ve=h(),Mu=m(),bn=p(),Iu=C();function Nn(n){Ve(!Mu(n),"You must pass an array into the `shape` function!"),Ve(bn(n),"You must pass an array into the `shape` function!");let e=[n.length],t=n.map(r=>bn(r));if(t.indexOf(!0)>-1){Ve(t.indexOf(!1)<0,"The array passed into the `shape` function has some children that are not themselves arrays!");let r=n.map(o=>o.length),s=Iu(r);r.forEach(function(o){Ve(o===s,"The array passed into the `shape` function has some children of inconsistent length!")}),e=e.concat(Nn(n[0]))}return e}xn.exports=Nn});var me=a((Tm,vn)=>{var wn=h(),ju=m(),Uu=p();function Vu(n){wn(!ju(n),"You must pass an array into the `reverse` function!"),wn(Uu(n),"You must pass an array into the `reverse` function!");let e=[];for(let t=n.length-1;t>=0;t--)e.push(n[t]);return e}vn.exports=Vu});var _=a((Sm,Sn)=>{var pe=h(),Yu=m(),Cu=p(),_u=f(),zu=x(),de="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function Tn(n,e){if(e||(pe(!Yu(n),de),Cu(n)||(n=[n]),n=zu(n),pe(n.length>0,de),n.forEach(t=>{pe(_u(t),de),pe(parseInt(t)===t,de),pe(t>=0,de)})),n.length===1){let t=[];for(let r=0;r<n[0];r++)t.push(void 0);return t}else{let t=[];for(let r=0;r<n[0];r++)t.push(Tn(n.slice(1),!0));return t}}Sn.exports=Tn});var B=a((Om,An)=>{var dt=h(),Pu=m(),ku=p(),$u=w(),On=me(),Bu=_();function Ju(n){dt(!Pu(n),"You must pass an array into the `transpose` function!"),dt(ku(n),"You must pass an array into the `transpose` function!");let e=$u(n);if(dt(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return On(n);if(e.length===2){let t=Bu(On(e));for(let r=0;r<e[0];r++)for(let s=0;s<e[1];s++)t[s][r]=n[r][s];return t}}An.exports=Ju});var qt=a((Am,Un)=>{var I=h(),En=m(),Mn=p(),Ru=f(),In=w(),gt=B();function jn(n,e,t=0){I(!En(n),"You must pass two arrays into the `append` function!"),I(!En(e),"You must pass two arrays into the `append` function!"),I(Mn(n),"You must pass two arrays into the `append` function!"),I(Mn(e),"You must pass two arrays into the `append` function!"),I(Ru(t),"The `axis` argument to the `append` function must be 0 or 1!"),I(t>=0&&t<2,"The `axis` argument to the `append` function must be 0 or 1!"),I(parseInt(t)===t,"The `axis` argument to the `append` function must be 0 or 1!");let r=In(n),s=In(e);I(r.length===s.length,"The two arrays passed into the `append` function must have the same number of dimensions!"),I(r.length<3&&s.length<3,"The two arrays passed into the `append` function must be 1- or 2-dimensional!");for(let o=0;o<r.length;o++)o!==t&&I(r[o]===s[o],`The two arrays passed into the \`append\` function must have the same shapes along all axes *except* the axis along which they're being appended! (${r[o]} != ${s[o]})`);if(I(t<r.length,"The axis argument you passed into the `append` function is out of bounds for the array!"),r.length===0)return[];if(r.length===1)return n.concat(e);if(r.length===2){if(t===0){let o=[];for(let i=0;i<r[0];i++)o.push(n[i]);for(let i=0;i<s[0];i++)o.push(e[i]);return o}else if(t===1)return gt(jn(gt(n),gt(e),0))}}Un.exports=jn});var z=a((Em,Vn)=>{var Fu=b();function Wu(n,e){try{return e(n)}catch{return NaN}}Vn.exports=Fu(Wu)});var Cn=a((Mm,Yn)=>{var Lu=f(),Ku=b();function Qu(n){try{return Lu(n)?Math.acos(n):NaN}catch{return NaN}}Yn.exports=Ku(Qu)});var zn=a((Im,_n)=>{var Xu=f(),Gu=b();function Zu(n){try{return Xu(n)?Math.asin(n):NaN}catch{return NaN}}_n.exports=Gu(Zu)});var kn=a((jm,Pn)=>{var Hu=f(),Du=b();function ea(n){try{return Hu(n)?Math.atan(n):NaN}catch{return NaN}}Pn.exports=Du(ea)});var J=a((Vm,Bn)=>{var Um=p();function $n(n,e){let t=typeof n;if(t!==typeof e)return!1;if(t==="undefined")return!0;if(t==="boolean"||t==="number"||t==="bigint"||t==="string"||t==="function")return n===e;if(t==="object"){if(n===null||e===null)return n===null&&e===null;{let s=Object.keys(n),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){let u=s[i];if(!e.hasOwnProperty(u)||!$n(n[u],e[u]))return!1}return!0}}}Bn.exports=$n});var ge=a((Ym,Ln)=>{var Jn=h(),ta=m(),Rn=p(),yt=w(),Fn=J();function Wn(n,e,t){if(Jn(!ta(n),"You must pass an array and a value into the `indexOf` function!"),Jn(Rn(n),"You must pass an array and a value into the `indexOf` function!"),yt(n).length===1||Rn(e)&&Fn(yt(n[0]),yt(e))){for(let r=0;r<n.length;r++){let s=n[r];if(Fn(s,e)&&(t?s===e:!0))return[r]}return null}else for(let r=0;r<n.length;r++){let s=n[r],o=Wn(s,e);if(o)return[r].concat(o)}return null}Ln.exports=Wn});var Qn=a((Cm,Kn)=>{var na=ge(),ra=C();function sa(n){try{return na(n,ra(n))}catch{return NaN}}Kn.exports=sa});var Ye=a((_m,Xn)=>{var oa=x(),ia=f();function ua(n){try{let e=oa(n),t=1/0;for(let r=0;r<e.length;r++){if(!ia(e[r]))return NaN;e[r]<t&&(t=e[r])}return t===1/0?NaN:t}catch{return NaN}}Xn.exports=ua});var Zn=a((zm,Gn)=>{var aa=ge(),ca=Ye();function la(n){try{return aa(n,ca(n))}catch{return NaN}}Gn.exports=la});var Dn=a((Pm,Hn)=>{var fa=f(),ha=b();function ma(n){try{return fa(n)?Math.ceil(n):NaN}catch{return NaN}}Hn.exports=ha(ma)});var nr=a((km,tr)=>{var pa=m(),da=pt(),ga=b(),er=f();function qa(n,e){try{if(!er(n))return NaN;if(pa(e))e=1e-10;else if(!er(e))return NaN;return da(n)<e?0:n}catch{return NaN}}tr.exports=ga(qa)});var sr=a(($m,rr)=>{var bt=f(),ya=b();function ba(n,e,t){try{return bt(n)?bt(e)?bt(t)?n<e?e:n>t?t:n:NaN:NaN:NaN}catch{return NaN}}rr.exports=ya(ba)});var qe=a((Bm,or)=>{var Na=f(),xa=x();function wa(n){try{let e=xa(n),t=0;for(let r=0;r<e.length;r++){if(!Na(e[r]))return NaN;t+=e[r]}return t/e.length}catch{return NaN}}or.exports=wa});var Ce=a((Jm,ir)=>{var va=qe(),Ta=x(),Sa=f();function Oa(n){try{let e=Ta(n),t=va(e),r=0;for(let s=0;s<e.length;s++){if(!Sa(e[s]))return NaN;r+=(e[s]-t)*(e[s]-t)}return r/e.length}catch{return NaN}}ir.exports=Oa});var lr=a((Rm,cr)=>{var ur=qe(),ar=Ce();function Aa(n,e){try{let t=ur(n),r=ur(e),s=Math.sqrt((ar(n)+ar(e))/2);return(t-r)/s}catch{return NaN}}cr.exports=Aa});var pr=a((Fm,mr)=>{var fr=p(),Ea=f(),_e=h();function hr(n,e){if(_e(fr(n),"The `combine` function only works on arrays!"),_e(Ea(e),"`r` must be a whole number!"),e>n.length)return[n];if(e<=0)return[[]];if(_e(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{_e(!fr(r),"It is not recommended to get combinations of arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the combinations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(s+1);if(o.length<e-1)return;hr(o,e-1).forEach(u=>{t.push([r].concat(u))})}),t}mr.exports=hr});var R=a((Lm,dr)=>{var Wm=h(),Ma=m(),Ia=p();function Nt(n){if(typeof n=="object"){if(Ma(n))return n;if(Ia(n))return n.map(Nt);{let e={};return Object.keys(n).forEach(function(t){e[t]=Nt(n[t])}),e}}else return n}dr.exports=Nt});var xt=a((Km,yr)=>{var gr=qe(),qr=m();function ja(n,e){try{let t=gr(n),r=gr(e),s=Math.max(n.length,e.length),o=0;for(let i=0;i<s;i++){if(qr(n[i]))return NaN;if(qr(e[i]))return NaN;o+=(n[i]-t)*(e[i]-r)}return o/n.length}catch{return NaN}}yr.exports=ja});var ze=a((Qm,br)=>{var Ua=f(),Va=b();function Ya(n){try{return Ua(n)?Math.sqrt(n):NaN}catch{return NaN}}br.exports=Va(Ya)});var Pe=a((Xm,Nr)=>{var Ca=ze(),_a=Ce();function za(n){try{return Ca(_a(n))}catch{return NaN}}Nr.exports=za});var vr=a((Gm,wr)=>{var Pa=xt(),xr=Pe();function ka(n,e){try{return Pa(n,e)/(xr(n)*xr(e))}catch{return NaN}}wr.exports=ka});var Sr=a((Zm,Tr)=>{var $a=f(),Ba=b();function Ja(n){try{return $a(n)?Math.cos(n):NaN}catch{return NaN}}Tr.exports=Ba(Ja)});var H=a((Hm,Ar)=>{var Or=h(),Ra=m(),Fa=p(),Wa=x();function La(n){Or(!Ra(n),"You must pass an array into the `set` function!"),Or(Fa(n),"You must pass an array into the `set` function!");let e=[],t={};return Wa(n).forEach(r=>{let s=typeof r>"u"?"undefined":typeof r=="function"?r.toString():JSON.stringify(r);t[s]||e.push(r),t[s]=!0}),e}Ar.exports=La});var ke=a((Dm,Ur)=>{var Er=h(),Mr=m(),Ir=p(),jr=x(),Ka=J(),Qa=H();function Xa(n,e){Er(!Mr(n),"You must pass an array and some items to count into the `count` function!"),Er(Ir(n),"You must pass an array and some items to count into the `count` function!");let t=jr(n);return e=Mr(e)?Qa(n):e,Ir(e)?jr(e).map(function(r){let s=t.filter(o=>Ka(r,o)).length;return{item:r,count:s}}):t.filter(r=>r===e).length}Ur.exports=Xa});var oe=a((ep,zr)=>{var ye=h(),Vr=p(),Yr=f(),Ga=w(),Cr=x(),Za=n=>n.reduce((e,t)=>e*t);function _r(n,e){if(ye(Vr(n),"The first argument passed into the `reshape` function must be an array!"),Yr(e)&&(e=[e]),ye(Vr(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),ye(Ga(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e.forEach(o=>{ye(Yr(o)&&parseInt(o)===o&&o>0,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!")}),e.length<=1)return Cr(n);let t=Cr(n);ye(Za(e)===t.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let r=[],s=parseInt(t.length/e[0]);for(let o=0;o<e[0];o++){let i=t.slice(o*s,(o+1)*s);r.push(_r(i,e.slice(1)))}return r}zr.exports=_r});var D=a((rp,Wr)=>{var tp=_(),np=z(),$r=m(),Ha=h(),Br=f(),Jr=R(),Da=oe(),Rr=Math.pow(2,64),N=[];Fr(parseInt(Math.random()*Rr));function ec(n,e){n=T(n);function t(){n+=T("0x9e3779b97f4a7c15");let s=Jr(n);return s=(s^s>>30n)*T("0xbf58476d1ce4e5b9"),s=(s^s>>27n)*T("0x94d049bb133111eb"),s^s>>31n}let r=[];for(let s=0;s<e;s++)r.push(t());return r}function T(n){return BigInt.asUintN(64,BigInt(n))}function Pr(n,e){return n=T(n),e=BigInt(e),T(T(n<<e)|T(n>>T(64n-e)))}function Fr(n){if($r(n))return Jr(N);{Ha(Br(n),"If passing a value into the `seed` function, then that value must be an integer!");let e=ec(parseInt(n),4);N[0]=e[0],N[1]=e[1],N[2]=e[2],N[3]=e[3]}}function kr(){let n=T(Pr(N[0]+N[3],23)+N[0]),e=T(N[1]<<17n);return N[2]=T(N[2]^N[0]),N[3]=T(N[3]^N[1]),N[1]=T(N[1]^N[2]),N[0]=T(N[0]^N[3]),N[2]=T(N[2]^e),N[3]=Pr(N[3],45),parseInt(n)/Rr}function tc(n){if($r(n))return kr();Br(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(kr());return Da(e,n)}Wr.exports={random:tc,seed:Fr}});var be=a((sp,Kr)=>{var Lr=h(),nc=p(),rc=m(),sc=f(),oc=w();function ic(n){return Lr(nc(n),"The value passed into the `dropNaN` function must be a one-dimensional array!"),Lr(oc(n).length===1,"The value passed into the `dropNaN` function must be a one-dimensional array"),n.filter(e=>!rc(e)&&sc(e))}Kr.exports=ic});var ee=a((op,Qr)=>{function uc(n){return typeof n=="boolean"}Qr.exports=uc});var E=a((ip,Xr)=>{function ac(n){return typeof n=="string"}Xr.exports=ac});var V=a((up,Gr)=>{var wt=h(),vt=m(),Tt=f(),cc=me();function lc(n,e,t=1){wt(!vt(n)&&!vt(e)&&!vt(t),"You must pass two numbers and optionally a step value to the `range` function!"),wt(Tt(n)&&Tt(e)&&Tt(t),"You must pass two numbers and optionally a step value to the `range` function!"),wt(t>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let r=!1;if(n>e){r=!0;let o=n;n=e+t,e=o+t}let s=[];for(let o=n;o<e;o+=t)s.push(o);return r&&(s=cc(s)),s}Gr.exports=lc});var te=a((ap,Hr)=>{var St=h(),Zr=m(),fc=p(),hc=U();function mc(n,e){return n<e?-1:n>e?1:0}function pc(n,e){Zr(e)&&(e=mc),St(!Zr(n),"You must pass an array into the `sort` function!"),St(fc(n),"You must pass an array into the `sort` function!"),St(hc(e),"The second parameter of the `sort` function must be a comparison function!");let t=n.slice();return t.sort(e),t}Hr.exports=pc});var F=a((fp,rs)=>{var y=h(),$e=p(),ne=m(),ie=w(),Be=B(),Ne=V(),At=f(),xe=E(),cp=z(),dc=U(),gc=_(),Ot=R(),qc=H(),Dr=me(),es=te(),ts=ee(),lp=Je();function yc(n){return At(n)&&parseInt(n)===n}function bc(n){return yc(n)&&n>=0}function ns(n,e){y(At(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}var P=class{constructor(e){let t=this;if(t.name="data",Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){y($e(r),"The new values must be a 1-dimensional array!");let s=ie(r);y(s.length===1,"The new array of values must be 1-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(Ne(t._index.length,s[0]).map(o=>"row"+ns(o,(r.length-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){y($e(r),"The new index must be a 1-dimensional array of strings!"),y(r.length===t.shape[0],"The new index must be the same length as the old index!"),y(ie(r).length===1,"The new index must be a 1-dimensional array of strings!"),r.forEach(s=>{y(xe(s),"All of the row names must be strings!")}),t._index=r}}),e){let r=ie(e);y(r.length===1,"The `data` array passed into the constructor of a DataFrame must be 1-dimensional!"),t.values=e}}get shape(){return ie(this.values)}isEmpty(){return this.values.filter(t=>!ne(t)).length===0}clear(){let e=this,t=e.copy();return t.values=gc(t.shape),t.index=e.index,t}get(e){let t=this;(xe(e)||At(e))&&(e=[e]);let r=qc((e||[]).map(s=>typeof s));return y(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&y(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(y(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),y(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),ne(e)||(e=e.map(s=>{if(typeof s=="string")return y(t.index.indexOf(s)>-1,`Index "${s}" does not exist!`),s;if(typeof s=="number")return y(s>=0,`Index ${s} is out of bounds!`),y(parseInt(s)===s,"Indices must be integers!"),y(s<t.index.length,`Index ${s} is out of bounds!`),t.index[s]})),t.getSubsetByNames(e)}getSubsetByNames(e){let t=this;ne(e)&&(e=t.index),y($e(e),"The `indices` array must be a 1-dimensional array of strings."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of strings."),y(e.length>0,"The `indices` array must contain at least one index name."),e.forEach(o=>{y(xe(o),"The `indices` array must contain only strings."),y(t.index.indexOf(o)>-1,`The name "${o}" does not exist in the index.`)});let r=e.map(o=>t.values[t.index.indexOf(o)]);if(r.length===1)return r[0];let s=new P(r);return s.index=e,s.name=t.name,s}getSubsetByIndices(e){let t=this,r=t.shape;ne(e)&&(e=Ne(0,r[0])),y($e(e),"The `indices` array must be 1-dimensional array of whole numbers."),y(ie(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),y(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{y(bc(o),"The `indices` array must be a 1-dimensional array of whole numbers."),y(o<t.index.length,`The row index ${o} is out of bounds.`)});let s=e.map(o=>t.index[o]);return t.getSubsetByNames(s)}loc(e){return this.getSubsetByNames(e)}iloc(e){return this.getSubsetByIndices(e)}reverse(){let e=this,t=new P(Dr(e.values));return t.index=Dr(e.index),t.name=e.name,t}resetIndex(){let e=this,t=e.copy();return t.index=Ne(0,e.shape[0]).map(r=>"row"+ns(r,(t.index.length-1).toString().length)),t}copy(){let e=this,t=new P(Ot(e.values));return t.index=e.index.slice(),t.name=e.name,t}apply(e){y(dc(e),"The parameter to the `apply` method must be a function.");let r=this.copy();return r.values=r.values.map((s,o)=>e(s,r.index[o])),r}dropMissing(e,t){let s=this.copy(),o=[];return s.values=s.values.filter((i,u)=>ne(i)?!1:(o.push(s.index[u]),!0)),s.index=o,s}toObject(){let e=this,t={};return t[e.name]={},e.index.forEach((r,s)=>{t[e.name][r]=e.values[s]}),t}print(){let e=this,t=e.copy(),r=typeof window>"u"?20:10;if(t.index.length>r){t=t.get(Ne(0,r/2).concat(Ne(t.index.length-r/2,t.index.length)));let o=Ot(t.index);o.splice(parseInt(o.length/2),0,"..."),t.values.push("..."),t.index.push("..."),t=t.get(o)}let s={};return t.values.forEach((o,i)=>{let u={};u[t.name]=o,s[t.index[i]]=u}),console.table(s),e}sort(e){y(ts(e)||xe(e)||ne(e),"The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false).");let t=!0;ne(e)&&(t=!0),xe(e)&&(e=e.trim().toLowerCase(),y(e==="ascending"||e==="descending","The `sort` method can take an optional parameter that's either a string representing a direction ('ascending' or 'descending') or a boolean representing whether or not the direction is ascending (true or false)."),t=e==="ascending"),ts(e)&&(t=e);let r=this,s=Be([r.values,r.index]);s=Be(es(s,(i,u)=>{if(i[0]===u[0])return 0;if(i[0]<u[0])return t?-1:1;if(i[0]>u[0])return t?1:-1}));let o=new P(s[0]);return o.index=s[1],o.name=r.name,o}sortByIndex(){let e=this,t=Be([e.values,e.index]);t=Be(es(t,(s,o)=>{if(s[1]===o[1])return 0;if(s[1]<o[1])return-1;if(s[1]>o[1])return 1}));let r=new P(t[0]);return r.index=t[1],r.name=e.name,r}filter(e){let t=this,r=t.copy(),s=Ot(r.index),o=[],i=r.values.filter((u,l)=>{let c=e(u,l,r.values);return c||o.push(r.index[l]),c});return o.forEach(u=>{s.splice(s.indexOf(u),1)}),i.length===0?(r=new P,r.name=t.name,r):(r.values=i,r.index=s,r)}};rs.exports=P});var Re=a((hp,ss)=>{var Nc=h(),xc=f();function wc(n,e){Nc(xc(n),"The `leftPad` function only works on numbers!");let t=n.toString();for(;t.length<e;)t="0"+t;return t}ss.exports=wc});var we=a((mp,os)=>{var vc=p(),Tc=m();function Sc(n){return typeof n=="object"&&!Tc(n)&&!vc(n)}os.exports=Sc});var Et=a((pp,is)=>{var Oc=E(),Ac=we(),Ec=ee(),Mc=m(),Ic=se();function jc(n,e){e=(()=>{if(Mc(e))return!0;if(Ec(e))return e;throw new Ic("The `shouldIncludeIndex` parameter of the `toCSVString` method must be a boolean!")})();let t=[""].concat(n.index);return[n.columns].concat(n.values).map((s,o)=>(e?[t[o]]:[]).concat(s).map(u=>Oc(u)?JSON.stringify(u):Ac(u)?JSON.stringify(JSON.stringify(u)):u.toString()).join(",")).join(`
`)}is.exports=jc});var as=a((dp,us)=>{var Uc=Et();function Vc(n,e,t){let r=Uc(n,t);try{let s=e;if(e.includes("/")){let i=e.split("/");s=i[i.length-1]}let o=document.createElement("a");o.href=`data:text/csv;charset=utf-8,${encodeURIComponent(r)}`,o.download=s,o.dispatchEvent(new MouseEvent("click"))}catch{}try{let s=ft("fs"),o=ft("path");s.writeFileSync(o.resolve(e),r,"utf8")}catch{}return n}us.exports=Vc});var Mt=a((yp,fs)=>{var W=p(),cs=ee(),gp=we(),qp=Re(),Yc=C(),ls=V(),Fe=E(),We=se(),Le=m(),L=h();function Cc(n,e,t,r,s,o){return t=(()=>{if(Le(t))return!1;if(cs(t))return t;throw new We("The `hasHeaderRow` parameter of the `fromCSV` method must be a boolean!")})(),r=(()=>{if(Le(r))return!1;if(cs(r))return r;throw new We("The `hasIndexColumn` parameter of the `fromCSV` method must be a boolean!")})(),s=(()=>{let u="The `fieldDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., ',')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['<', '>'])";if(Le(s))return",";if(Fe(s))return L(s.length===1,u),s;if(W(s))return L(s.length===2,u),L(s[0].length===1,u),L(s[1].length===1,u),s;throw new We(u)})(),o=(()=>{let u="The `stringDelimiter` parameter of the `fromCSV` method must be one of:\n\n1) a single-character string (e.g., '\"')\n2) an array containing two single-character strings, one each for a left delimiter and a right delimiter (e.g., ['\u201C', '\u201D'])";if(Le(o))return'"';if(Fe(o))return L(o.length===1,u),o;if(W(o))return L(o.length===2,u),L(o[0].length===1,u),L(o[1].length===1,u),o;throw new We(u)})(),(()=>{let l=e.split(`
`).filter(S=>S.length>0).map(S=>{let O=[],re="",fe=!1;for(let $=0;$<S.length;$++){let A=S[$];if(A.match(/\\/g))$++;else if(W(o)&&A===o[0])fe=!0;else if(W(o)&&A===o[1])fe=!1;else if(Fe(o)&&A===o)fe=!fe;else if(W(s)&&A===s[0]||W(s)&&A===s[1]||Fe(s)&&A===s)if(fe)re+=A;else{let ct=re;try{let lt=JSON.parse(ct);W(lt)?O.push(ct.trim()):O.push(lt)}catch{O.push(ct.trim())}re=""}else re+=A}if(re.length>0){let $=re;try{let A=JSON.parse($);W(A)?O.push($.trim()):O.push(A)}catch{O.push($.trim())}}return O}),c=(()=>{let S=t?l.shift():ls(0,l[0].length).map(O=>"col"+O);return r&&S.shift(),S})(),g=(()=>r?l.map(O=>O.shift()):ls(0,l.length).map(O=>"row"+O))(),q=Yc(l.map(S=>S.length)),j=new n(l.map(S=>(S.length=q,S)));return t&&(j.columns=c),r&&(j.index=g),j})()}fs.exports=Cc});var ms=a((bp,hs)=>{var _c=h(),zc=Mt(),Pc=E(),kc=m(),$c=se();async function Bc(n,e,t,r,s,o,i){t=(()=>kc(t)?"utf8":(_c(Pc(t),"The `encoding` parameter of the `fromCSV` method must be a string (e.g., 'utf8')!"),t))();let u=await(async()=>{try{return await(await fetch(e)).text()}catch{}try{return ft("fs").readFileSync(e,t)}catch{}throw new $c(`The path "${e}" could not be loaded!`)})();return zc(n,u,r,s,o,i)}hs.exports=Bc});var Ke=a((Np,ps)=>{var Jc=f(),Rc=b();function Fc(n){try{return Jc(n)?Math.floor(n):NaN}catch{return NaN}}ps.exports=Rc(Fc)});var It=a((wp,gs)=>{var ds=h(),Wc=m(),Lc=p(),xp=Ke(),{random:Kc}=D();function Qc(n){ds(!Wc(n),"You must pass an array into the `shuffle` function!"),ds(Lc(n),"You must pass an array into the `shuffle` function!");let e=[],t=n.slice();for(let r=0;r<n.length;r++){let s=parseInt(Kc()*t.length);e.push(t.splice(s,1)[0])}return e}gs.exports=Qc});var bs=a((vp,ys)=>{var Xc=m(),Gc=h(),qs=It();function Zc(n,e){return Xc(e)&&(e=0),Gc(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),n.get(e===0?qs(n.index):null,e===1?qs(n.columns):null)}ys.exports=Zc});var vs=a((Tp,ws)=>{var Ns=h(),Hc=U(),Dc=m(),Qe=F(),ve=x();function xs(n){let e={};return ve(n).forEach((t,r)=>{e[t]=r}),e}function ue(n){return Object.keys(n).sort((e,t)=>n[e]-n[t])}function el(n,e,t,r){Ns(Hc(t),"The `filter` method takes a single parameter: a function that is used to filter the values."),Dc(r)&&(r=0),Ns(r===0||r===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let s=e.copy();if(s.isEmpty())return s;let o=xs(s.index),i=xs(s.columns);if(r===0){let u=s.values.filter((l,c)=>{let g=new Qe(l);g.name=e.index[c],g.index=e.columns;let q=t(g,c,e);return q||delete o[s.index[c]],q});if(ve(u).length===0)return new n;if(u.length===1){let l=new Qe(ve(u));return l.name=ue(o)[0],l.index=ue(i),l}s.values=u,s.index=ue(o)}else if(r===1){s=s.transpose();let u=s.values.filter((l,c)=>{let g=new Qe(l);g.name=e.columns[c],g.index=e.index;let q=t(g,c,e);return q||delete i[s.index[c]],q});if(ve(u).length===0)return new n;if(u.length===1){let l=new Qe(ve(u));return l.name=ue(i)[0],l.index=ue(o),l}s.values=u,s.index=ue(i),s=s.transpose()}return s}ws.exports=el});var Es=a((Sp,As)=>{var{random:tl}=D(),Ts=m(),jt=f(),ae=E(),Ut=ee(),Ss=p(),M=h(),Os=w(),nl=V(),rl=te(),sl=x();function ol(n,e,t){let r=n.copy(),s=tl().toString();return r=r.assign(s,r.index),Ts(e)&&(e=[s],t=[!0]),(jt(e)||ae(e))&&(e=[e],(Ut(t)||ae(t))&&(t=[t])),M(Ss(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),M(Os(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),Ts(t)&&(t=nl(0,e.length).map(o=>!0)),M(Ss(t),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(Os(t).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),M(e.length===t.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(o=>{if(M(ae(o)||jt(o),"Column references can either be column names (as strings) or column indices (as whole numbers)."),ae(o)){let i=r.columns.indexOf(o);return M(i>-1,`The column "${o}" does not exist!`),i}if(jt(o))return M(parseInt(o)===o,"Column indices must be whole numbers!"),M(o>=0,`The column index ${o} is out of bounds!`),M(o<r.columns.length,`The index ${o} is out of bounds!`),o}),t=t.map(o=>{if(M(ae(o)||Ut(o),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),ae(o)){let i=o.trim().toLowerCase();return M(i==="ascending"||i==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),i==="ascending"}if(Ut(o))return o}),r.values=rl(r.values,(o,i)=>{let u=0;for(;o[e[u]]===i[e[u]]&&u<e.length;)u++;let l=t[u];if(o[e[u]]===i[e[u]])return 0;if(o[e[u]]<i[e[u]])return l?-1:1;if(o[e[u]]>i[e[u]])return l?1:-1}),r.index=sl(r.get(null,s).values),r=r.dropColumns(s),r}As.exports=ol});var Is=a((Op,Ms)=>{var il=E(),ul=J(),Te=V(),Xe=F();function al(n,e){function t(q,j){return il(q)&&q.length>j?q.substring(0,j-3)+"...":q}if(ul(e.shape,[0]))return console.table({}),e;let r=typeof window>"u"?20:10,s=parseInt(r/2),o=typeof window>"u"?Math.floor(process.stdout.columns/24)-1:10,i=parseInt(o/2),u=r>e.index.length?null:Te(0,s).concat(Te(e.index.length-s,e.index.length)),l=o>e.columns.length?null:Te(0,i).concat(Te(e.columns.length-i,e.columns.length)),c=e.get(u,l);c instanceof Xe&&(e.shape[0]===1?(c=new n([c.values]),c.index=e.index,c.columns=new Xe(e.columns).get(l).values):e.shape[1]===1&&(c=new n([c.values]).transpose(),c.index=new Xe(e.index).get(u).values,c.columns=e.columns)),r<=e.index.length&&(c._index.splice(s,0,"..."),c._values.splice(s,0,Te(0,c.columns.length).map(q=>"..."))),o<=e.columns.length&&(c._columns.splice(i,0,"..."),c._values=c._values.map(q=>(q.splice(i,0,"..."),q)));let g=28;return c instanceof Xe?(c.values=c.values.map(q=>t(q,g)),c.name=t(c.name,g),c.index=c.index.map(q=>t(q,g))):(c.values=c.values.map(q=>q.map(j=>t(j,g))),c.columns=c.columns.map(q=>t(q,g)),c.index=c.index.map(q=>t(q,g))),console.table(c.toObject()),e}Ms.exports=al});var Us=a((Ap,js)=>{function cl(n){let e={};return n.values.forEach((t,r)=>{let s={};t.forEach((o,i)=>{s[n.columns[i]]=o}),e[n.index[r]]=s}),e}js.exports=cl});var Se=a((Ep,Vs)=>{var ll=F();function fl(n){return n instanceof ll}Vs.exports=fl});var $s=a((Mp,ks)=>{var Ys=m(),Cs=E(),_s=f(),Ge=h(),zs=p(),Ps=w(),hl=Se();function ml(n,e,t,r){Ys(t)&&(t=[]),Ys(r)&&(r=[]),(Cs(t)||_s(t))&&(t=[t]),(Cs(r)||_s(r))&&(r=[r]),Ge(zs(t),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Ge(zs(r),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Ge(Ps(t).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),Ge(Ps(r).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let s,o;e.index.forEach((u,l)=>{t.indexOf(u)<0&&t.indexOf(l)<0&&(s||(s=[]),s.push(u))}),e.columns.forEach((u,l)=>{r.indexOf(u)<0&&r.indexOf(l)<0&&(o||(o=[]),o.push(u))});let i=e.get(s,o);if(hl(i)){let u=new n;u=u.assign(i),e.index.indexOf(i.name)>-1&&(u=u.transpose()),i=u}return i}ks.exports=ml});var Ze=a((Ip,Bs)=>{var pl=f();function dl(n){return pl(n)&&parseInt(n)===n}function gl(n){return dl(n)&&n>=0}Bs.exports=gl});var Rs=a((jp,Js)=>{var Vt=h(),ql=Ze(),yl=be();function bl(n,e,t,r,s){t=t||0,Vt(t===0||t===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),s=s||0,Vt(ql(s),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),r=s>0?"none":r||"any",Vt(r==="any"||r==="all"||r==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function o(l){let c=yl(l);return s>0?l.length-c.length<s:r==="any"?c.length===l.length:r==="all"?c.length>0:!0}let i=e.copy(),u=Math.random().toString();if(t===0){let l=i.index.filter(c=>{let g=i.get(c,null).values;return o(g)});return l.length>0?i.get(l,null):new n}else if(t===1){let l=i.columns.filter(c=>{let g=i.get(null,c).values;return o(g)});return l.length>0?i.get(null,l):new n}return i}Js.exports=bl});var Qs=a((Up,Ks)=>{var Yt=h(),Nl=Ze(),Oe=m(),Fs=E(),Ws=Se(),Ls=w();function xl(n,e,t,r,s){t=t||0,Yt(t===0||t===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),s=s||0,Yt(Nl(s),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),r=s>0?"none":r||"any",Yt(r==="any"||r==="all"||r==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function o(l){if(s>0){let c=0;for(let g=0;g<l.length;g++){let q=l[g];if(Oe(q)&&c++,c>=s)return[]}}else if(r==="any")for(let c=0;c<l.length;c++){let g=l[c];if(Oe(g))return[]}else if(r==="all"){for(let c=0;c<l.length;c++){let g=l[c];if(!Oe(g))return l}return[]}return l}let i=e.copy(),u=Math.random().toString();if(t===0){i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Ls(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Oe(c))return new n;Fs(c)&&(c=[c]),Ws(c)&&(c=c.values),i.index=c,i=i.drop(null,u)}else if(t===1){i=i.transpose(),i=i.assign(u,i.index);let l=i.values.map(o).filter(g=>g.length>0);if(Ls(l).length<2)return new n;i.values=l;let c=i.get(null,u);if(Oe(c))return new n;Fs(c)&&(c=[c]),Ws(c)&&(c=c.values),i.index=c,i=i.drop(null,u),i=i.transpose()}return i}Ks.exports=xl});var Ds=a((Vp,Hs)=>{var wl=U(),Xs=h(),Gs=B(),He=F(),Zs=w(),ce=R();function vl(n,e,t,r){if(r=r||0,Xs(wl(t),"The first parameter to the `apply` method must be a function."),Xs(r===0||r===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),r===0){let o=Gs(e.values).map((i,u)=>{let l=new He(i);return l.name=e.columns[u],l.index=e.index,t(l,u,e)});if(Zs(o).length===1){let i=new He(o);return i.index=ce(e.columns),i}else{let i=new n(Gs(o));return i.index=ce(e.index),i.columns=ce(e.columns),i}}else if(r===1){let s=e.values.map((o,i)=>{let u=new He(o);return u.name=e.index[i],u.index=e.columns,t(u,i,e)});if(Zs(s).length===1){let o=new He(s);return o.index=ce(e.index),o}else{let o=new n(s);return o.index=ce(e.index),o.columns=ce(e.columns),o}}}Hs.exports=vl});var to=a((Yp,eo)=>{var Tl=m(),K=h(),Sl=E(),Ct=Se(),Ae=p(),_t=w(),Ol=we(),Al=J(),El=B();function Ml(n,e,t){let r,s;if(Tl(t)?(s=e,K(!Ae(s),"When using only one parameter for the `assign` method, the parameter must be an object or a Series.")):(r=e,s=t,K(Sl(r),"When using two parameters for the `assign` method, the first parameter must be a string."),K(Ct(s)||Ae(s)&&_t(s).length===1,"When using two parameters for the `assign` method, the second parameter must be a Series or a 1-dimensional array.")),K(Ol(s)||Ct(s)||Ae(s)&&_t(s).length===1,"An object, Series, or 1-dimensional array must be passed into the `assign` method."),Ct(s)){let o={};return K(n.isEmpty()||Al(s.index,n.index),"The index of the new data does not match the index of the DataFrame."),o[r||s.name]=s.values,n.assign(o)}else if(Ae(s)){let o={};return o[r||"data"]=s,n.assign(o)}else{let o=n.copy(),i=o.shape;return Object.keys(s).forEach(u=>{let l=s[u];if(K(Ae(l),"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),K(_t(l).length===1,"Each key-value pair must be (respectively) a string and a 1-dimensional array of values."),o.isEmpty())o.values=El([l]),o.columns=[u],i=o.shape;else{K(l.length===i[0],`Column "${u}" in the new data is not the same length as the other columns in the original DataFrame.`);let c=o.columns.indexOf(u);c<0&&(o.columns.push(u),c=o.columns.indexOf(u)),o.values.forEach((g,q)=>{g[c]=l[q]})}}),o}}eo.exports=Ml});var ro=a((Cp,no)=>{var Il=R();function jl(n,e){if(e.isEmpty())return new n;let t=new n(Il(e.values));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}no.exports=jl});var oo=a((_p,so)=>{var Ul=V(),Vl=Re();function Yl(n){let e=n.copy();return e.index=Ul(0,n.shape[0]).map(t=>"row"+Vl(t,(e.index.length-1).toString().length)),e}so.exports=Yl});var Je=a((Qp,ho)=>{var{random:zp}=D(),Pp=z(),d=h(),kp=R(),io=ke(),$p=be(),zt=x(),Q=p(),Bp=ee(),Jp=J(),Rp=U(),uo=f(),De=E(),X=m(),Fp=C(),Wp=Ye(),Cl=_(),Ee=V(),ao=F(),co=H(),Y=w(),Lp=te(),lo=B(),Pt=Re(),_l=as(),zl=Et(),Pl=ms(),kl=Mt(),$l=bs(),Bl=vs(),Jl=Es(),Rl=Is(),Fl=Us(),Wl=$s(),Kp=Se(),Ll=Rs(),fo=Ze(),Kl=Qs(),Ql=Ds(),Xl=to(),Gl=ro(),Zl=oo();function et(n){let e="abcdefghijklmnopqrstuvwxyz1234567890",t="";for(let r=0;r<n;r++)t+=e[parseInt(Math.random()*e.length)];return t}var v=class{constructor(e){let t=this;if(Object.defineProperty(t,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"values",{configurable:!0,enumerable:!0,get(){return t._values},set(r){d(Q(r),"The new values must be a 2-dimensional array!");let s=Y(r);d(s.length===2,"The new array of values must be 2-dimensional!"),s[0]<t._index.length?t._index=t._index.slice(0,s[0]):s[0]>t._index.length&&(t._index=t._index.concat(Ee(t._index.length,s[0]).map(o=>"row"+Pt(o,(s[0]-1).toString().length)))),s[1]<t._columns.length?t._columns=t._columns.slice(0,s[1]):s[1]>t._columns.length&&(t._columns=t._columns.concat(Ee(t._columns.length,s[1]).map(o=>"col"+Pt(o,(s[1]-1).toString().length)))),t._values=r}}),Object.defineProperty(t,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"columns",{configurable:!0,enumerable:!0,get(){return t._columns},set(r){d(Q(r),"The new columns list must be a 1-dimensional array of strings!"),d(r.length===t.shape[1],"The new columns list must be the same length as the old columns list!"),d(Y(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+et(8):o.trim()));let s=(()=>{let o=io(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+et(8):o),t._columns=r}}),Object.defineProperty(t,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(t,"index",{configurable:!0,enumerable:!0,get(){return t._index},set(r){d(Q(r),"The new index must be a 1-dimensional array of strings!"),d(r.length===t.shape[0],"The new index must be the same length as the old index!"),d(Y(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+et(8):o.trim()));let s=(()=>{let o=io(r),i={};return o.forEach(u=>{i[u.item]=u.count}),i})();r=r.map(o=>s[o]>1?o+"_"+et(8):o),t._index=r}}),d(X(e)||e instanceof Object,"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(Q(e)){let r=Y(e);d(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),t.values=e}else{t._columns=Object.keys(e);let r=[];t._columns.forEach(o=>{let i=e[o];r.push(i)}),t._values=lo(r);let s=Y(t.values);t._index=Ee(0,s[0]).map(o=>"row"+Pt(o,(s[0]-1).toString().length))}}get shape(){return Y(this.values)}get rows(){return this.index}set rows(e){let t=this;t.index=e}isEmpty(){return co(this.values).filter(t=>!X(t)).length===0}clear(){let e=this,t=new v(Cl(e.shape));return t.columns=e.columns.slice(),t.index=e.index.slice(),t}get(e,t){let r=this;(De(e)||uo(e))&&(e=[e]),(De(t)||uo(t))&&(t=[t]);let s=co((e||[]).concat(t||[]).map(o=>typeof o));return d(s.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===1&&d(s[0]==="string"||s[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),s.length===2&&(d(s.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),d(s.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),X(e)||(e=e.map(o=>{if(typeof o=="string")return d(r.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(typeof o=="number")return d(o>=0,`Index ${o} is out of bounds!`),d(parseInt(o)===o,"Row numbers must be integers!"),d(o<r.index.length,`Index ${o} is out of bounds!`),r.index[o]})),X(t)||(t=t.map(o=>{if(typeof o=="string")return d(r.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(typeof o=="number")return d(o>=0,`Column ${o} is out of bounds!`),d(parseInt(o)===o,"Column numbers must be integers!"),d(o<r.columns.length,`Column ${o} is out of bounds!`),r.columns[o]})),r.getSubsetByNames(e,t)}getSubsetByNames(e,t){let r=this;X(e)&&(e=r.index),X(t)&&(t=r.columns),typeof e=="string"&&(e=[e]),typeof t=="string"&&(t=[t]),d(Q(e)&&Q(t),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(Y(e).length===1&&Y(t).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(e.length>0,"The `rows` array must contain at least one row name."),d(t.length>0,"The `cols` array must contain at least one column name."),e.forEach(i=>{d(De(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(r.index.indexOf(i)>-1,`The row name "${i}" does not exist in the list of rows.`)}),t.forEach(i=>{d(De(i),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),d(r.columns.indexOf(i)>-1,`The column name "${i}" does not exist in the list of columns.`)});let s=e.map(i=>t.map(u=>r.values[r.index.indexOf(i)][r.columns.indexOf(u)]));if(e.length===1&&t.length===1)return zt(s)[0];if(e.length===1){let i=new ao(zt(s));return i.name=e[0],i.index=t,i}if(t.length===1){let i=new ao(zt(s));return i.name=t[0],i.index=e,i}let o=new v(s);return o.columns=t,o.index=e,o}getSubsetByIndices(e,t){let r=this,s=r.shape;X(e)&&(e=Ee(0,s[0])),X(t)&&(t=Ee(0,s[1])),typeof e=="number"&&(e=[e]),typeof t=="number"&&(t=[t]),d(Q(e)&&Q(t),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(Y(e).length===1&&Y(t).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(e.length>0,"The `rowIndices` array must contain at least one index."),d(t.length>0,"The `colIndices` array must contain at least one index."),e.forEach(u=>{d(fo(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(u<r.index.length,`The row index ${u} is out of bounds.`)}),t.forEach(u=>{d(fo(u),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),d(u<r.columns.length,`The column index ${u} is out of bounds.`)});let o=e.map(u=>r.index[u]),i=t.map(u=>r.columns[u]);return r.getSubsetByNames(o,i)}loc(e,t){return this.getSubsetByNames(e,t)}iloc(e,t){return this.getSubsetByIndices(e,t)}transpose(){let e=this,t=new v(lo(e.values));return t.columns=e.index,t.index=e.columns,t}get T(){return this.transpose()}resetIndex(){return Zl(this)}copy(){return Gl(v,this)}assign(e,t){return Xl(this,e,t)}apply(e,t){return Ql(v,this,e,t)}map(e,t){return this.apply(e,t)}dropMissing(e,t,r){return Kl(v,this,e,t,r)}dropNaN(e,t,r){return Ll(v,this,e,t,r)}drop(e,t){return Wl(v,this,e,t)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toObject(){return Fl(this)}toCSVString(e){return zl(this,e)}toCSV(e,t){return _l(this,e,t)}print(){return Rl(v,this)}sort(e,t){return Jl(this,e,t)}sortByIndex(){return this.sort()}filter(e,t){return Bl(v,this,e,t)}shuffle(e){return $l(this,e)}};v.fromCSV=function(){return Pl(v,...arguments)};v.fromCSVString=function(){return kl(v,...arguments)};ho.exports=v});var yo=a((Xp,qo)=>{var mo=h(),po=p(),go=x();function Hl(n,e){mo(po(n),"You must pass two arrays into the `diff` function!"),mo(po(e),"You must pass two arrays into the `diff` function!");let t=go(n),r=go(e),s=[];return t.forEach(o=>{r.indexOf(o)<0&&s.push(o)}),s}qo.exports=Hl});var tt=a((Gp,No)=>{var bo=f(),Dl=b();function ef(n,e){try{return bo(n)?bo(e)?Math.pow(n,e):NaN:NaN}catch{return NaN}}No.exports=Dl(ef)});var nt=a((Zp,xo)=>{var tf=he(),nf=x();function rf(n){try{return tf(...nf(n))}catch{return NaN}}xo.exports=rf});var kt=a((Hp,wo)=>{var sf=f(),of=b();function uf(){try{let n=1,e=Object.values(arguments);for(let t=0;t<e.length;t++){if(!sf(e[t]))return NaN;n*=e[t]}return n}catch{return NaN}}wo.exports=of(uf)});var le=a((Dp,vo)=>{var af=kt();function cf(n,e){return af(n,e)}vo.exports=cf});var $t=a((ed,To)=>{var lf=he(),ff=le();function hf(n,e){return lf(n,ff(e,-1))}To.exports=hf});var Oo=a((td,So)=>{var mf=tt(),pf=nt(),df=ze(),gf=$t();function qf(n,e){try{return df(pf(mf(gf(n,e),2)))}catch{return NaN}}So.exports=qf});var Eo=a((nd,Ao)=>{var yf=le(),bf=tt();function Nf(n,e){return yf(n,bf(e,-1))}Ao.exports=Nf});var Bt=a((sd,Yo)=>{var Me=h(),Mo=m(),Io=p(),xf=f(),rd=J(),jo=x(),Uo=w(),wf=nt(),vf=le(),Vo=B();function rt(n,e){Me(!Mo(n)&&!Mo(e),"You must pass two arrays of numbers into the `dot` function!"),Me(Io(n)&&Io(e),"You must pass two arrays of numbers into the `dot` function!"),jo(n).concat(jo(e)).forEach(s=>{Me(xf(s),"One of the arrays you passed into the `dot` function contains non-numerical values!")});let t=Uo(n),r=Uo(e);if(Me(t.length<=2&&r.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),Me(t[t.length-1]===r[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${t[t.length-1]} !== ${r[0]})`),t.length===1&&r.length===1)return wf(vf(n,e));if(t.length===1&&r.length===2)return Vo(e).map(s=>rt(n,s));if(t.length===2&&r.length===1)return n.map(s=>rt(s,e));if(t.length===2&&r.length===2){let s=Vo(e),o=[];for(let i=0;i<n.length;i++){let u=[];for(let l=0;l<s.length;l++)u.push(rt(n[i],s[l]));o.push(u)}return o}}Yo.exports=rt});var zo=a((od,_o)=>{var Co=h(),Tf=p(),Sf=m(),Of=w();function Af(n){return Co(Tf(n),"The value passed into the `dropMissing` function must be a one-dimensional array!"),Co(Of(n).length===1,"The value passed into the `dropMissing` function must be a one-dimensional array!"),n.filter(e=>!Sf(e))}_o.exports=Af});var Ro=a((id,Jo)=>{var Po=h(),ko=m(),$o=p(),Ef=C(),Bo=w();function Mf(n,e){Po($o(n)&&$o(e),"The two items passed into the `dropMissingPairwise` function must be arrays!"),Po(Bo(n).length===1&&Bo(e).length===1,"The `dropMissingPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<Ef([n.length,e.length]);s++)!ko(n[s])&&!ko(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Jo.exports=Mf});var Go=a((ud,Xo)=>{var Fo=h(),Wo=m(),Lo=p(),Ko=f(),If=C(),Qo=w();function jf(n,e){Fo(Lo(n)&&Lo(e),"The two items passed into the `dropNaNPairwise` function must be arrays!"),Fo(Qo(n).length===1&&Qo(e).length===1,"The `dropNaNPairwise` function only works on one-dimensional arrays!");let t=[],r=[];for(let s=0;s<If([n.length,e.length]);s++)!Wo(n[s])&&Ko(n[s])&&!Wo(e[s])&&Ko(e[s])&&(t.push(n[s]),r.push(e[s]));return[t,r]}Xo.exports=jf});var Ho=a((ad,Zo)=>{var Uf=b(),Vf=f();function Yf(n){try{return Vf(n)?Math.exp(n):NaN}catch{return NaN}}Zo.exports=Uf(Yf)});var ti=a((cd,ei)=>{var Cf=b();function Do(n){try{return n!==parseInt(n)?NaN:n<=1?1:n*Do(n-1)}catch{return NaN}}ei.exports=Cf(Do)});var ri=a((ld,ni)=>{var _f=f(),zf=b();function Pf(n){try{let e=JSON.parse(n);return _f(e)?e:NaN}catch{return NaN}}ni.exports=zf(Pf)});var Jt=a((fd,si)=>{var kf=f(),$f=b();function Bf(n){try{let e=JSON.parse(n);return kf(e)?parseInt(e):NaN}catch{return NaN}}si.exports=$f(Bf)});var ui=a((hd,ii)=>{var G=h(),Jf=m(),Rt=p(),Ft=f(),oi=w(),Rf=Jt();function Wt(n,e){return G(!Jf(n),"You must pass an array and an index into the `getValueAt` function!"),G(Rt(n),"You must pass an array and an index into the `getValueAt` function!"),G(Ft(e)||Rt(e),"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),Rt(e)&&(G(oi(e).length===1,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!"),e.forEach(t=>{G(Ft(t)&&Rf(t)===t,"The index passed into the `getValueAt` function must be a positive integer or a one-dimensional array of positive integers!")}),G(e.length<=oi(n).length,"The index passed into the `getValueAt` function has too many dimensions!")),Ft(e)?(G(e<n.length,`The index ${e} is out of bounds!`),n[e]):e.length>1?(G(e[0]<n.length,`The index ${e[0]} is out of bounds!`),Wt(n[e[0]],e.slice(1))):Wt(n,e[0])}ii.exports=Wt});var Lt=a((dd,ai)=>{var md=_(),pd=z(),Ff=f(),Wf=oe();function Lf(n){Ff(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(0);return Wf(e,n)}ai.exports=Lf});var li=a((gd,ci)=>{var st=h(),Kf=m(),Qf=f(),Xf=Lt();function Gf(n){st(!Kf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(Qf(n),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(parseInt(n)===n,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),st(n>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=Xf([n,n]);for(let t=0;t<n;t++)e[t][t]=1;return e}ci.exports=Gf});var Kt=a((yd,fi)=>{var qd=h(),Zf=H();function Hf(){return Zf([...arguments])}fi.exports=Hf});var mi=a((bd,hi)=>{var Df=p(),eh=x(),th=Kt();function nh(){let n=Object.values(arguments).map(r=>Df(r)?eh(r):[r]),e=[];return th(n).forEach(r=>{for(let s=0;s<n.length;s++)if(n[s].indexOf(r)<0)return;e.push(r)}),e}hi.exports=nh});var Xt=a((xd,gi)=>{var Ie=h(),ot=m(),pi=f(),Qt=p(),rh=V(),sh=x(),Nd=w(),oh=Ke();function di(n,e){if(Ie(!ot(n),"You must pass an array into the `slice` function!"),Ie(Qt(n),"You must pass an array into the `slice` function!"),ot(e))return n.slice();Ie(Qt(e),"The indices passed into the `slice` function must be a one-dimensional array of integers or null values."),sh(e).forEach(s=>{Ie(ot(s)||pi(s)&&oh(s)===s,"The indices passed into the `slice` function must be a one-dimensional array of integers or null values.")});let t=e[0];ot(t)&&(t=rh(0,n.length)),pi(t)&&(t=[t]);let r=[];return t.forEach(s=>{Ie(s<n.length,"Index out of bounds in the `slice` function!"),s<0&&(s+=n.length);let o=n[s];Qt(o)?r.push(di(n[s],e.slice(1,e.length))):r.push(n[s])}),r}gi.exports=di});var Ni=a((wd,bi)=>{var k=h(),ih=m(),uh=p(),Gt=f(),ah=x(),ch=w(),it=Xt(),lh=Bt(),qi=he(),yi=le(),Zt=qt(),Z=V();function Ht(n){k(!ih(n),"You must pass a square 2D array into the `inverse` function!"),k(uh(n),"You must pass a square 2D array into the `inverse` function!"),ah(n).forEach(t=>k(Gt(t),"The array passed into the `inverse` function must contain only numbers!"));let e=ch(n);if(k(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),k(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),k(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return n;if(e[0]===1)return k(n[0][0]!==0,"This matrix cannot be inverted!"),1/n[0][0];if(e[0]===2){let t=n[0][0],r=n[0][1],s=n[1][0],o=n[1][1],i=t*o-r*s;k(i!==0,"This matrix cannot be inverted!");let u=[[o,-r],[-s,t]];return yi(u,1/i)}else if(e[0]>1){let t=(r,s)=>Gt(r)||Gt(s)?yi(r,s):lh(r,s);for(let r=1;r<e[0]-1;r++)try{let s=it(n,[Z(0,r),Z(0,r)]),o=it(n,[Z(0,r),Z(r,e[0])]),i=it(n,[Z(r,e[0]),Z(0,r)]),u=it(n,[Z(r,e[0]),Z(r,e[0])]),l=Ht(s),c=Ht(qi(u,t(-1,t(t(i,l),o)))),g=qi(l,t(t(t(t(l,o),c),i),l)),q=t(-1,t(t(l,o),c)),j=t(-1,t(t(c,i),l)),S=c;return Zt(Zt(g,q,1),Zt(j,S,1),0)}catch{}k(!1,"This matrix cannot be inverted!")}}bi.exports=Ht});var wi=a((vd,xi)=>{var fh=b(),Dt=f();function hh(n,e,t){try{return Dt(n)?Dt(e)?Dt(t)?t*(e-n)+n:NaN:NaN:NaN}catch{return NaN}}xi.exports=fh(hh)});var Si=a((Td,Ti)=>{var vi=f(),mh=m(),ph=b();function dh(n,e){try{return e=mh(e)?Math.E:e,vi(n)?vi(e)?Math.log(n)/Math.log(e):NaN:NaN}catch{return NaN}}Ti.exports=ph(dh)});var Ai=a((Sd,Oi)=>{var je=f(),gh=b();function qh(n,e,t,r,s){try{return je(n)?je(e)?je(t)?je(r)?je(s)?(s-r)*(n-e)/(t-e)+r:NaN:NaN:NaN:NaN:NaN}catch{return NaN}}Oi.exports=gh(qh)});var Mi=a((Id,Ei)=>{var Od=h(),Ad=m(),Ed=p(),Md=f(),yh=x(),bh=te(),Nh=be();function xh(n){try{let e=yh(n),t=Nh(e);if(t.length===0)return NaN;if(t.length<e.length)return NaN;t=bh(t);let r;return t.length%2===0?r=(t[t.length/2-1]+t[t.length/2])/2:r=t[Math.floor(t.length/2)],r}catch{return NaN}}Ei.exports=xh});var Ui=a((jd,ji)=>{var wh=x(),vh=ke(),Th=H(),Ii=te();function Sh(n){try{if(n.length===0)return NaN;let e=wh(n);if(e.length===0)return NaN;let t={},r=Th(e);r.forEach(u=>{t[u]=vh(e,u)});let s=Ii(r,(u,l)=>t[l]-t[u]),o=s[0],i=Ii(s.filter(u=>t[u]===t[o]));return i.length===1?i[0]:i}catch{return NaN}}ji.exports=Sh});var _i=a((Yd,Ci)=>{var Oh=m(),Ud=_(),Vd=z(),{random:Vi}=D(),Ah=oe(),Eh=f();function Yi(){let n=Vi(),e=Vi();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*e)}function Mh(n){if(Oh(n))return Yi();Eh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(Yi());return Ah(e,n)}Ci.exports=Mh});var Pi=a((zd,zi)=>{var Cd=_(),_d=z(),Ih=oe(),jh=f();function Uh(n){jh(n)&&(n=[n]);let e=[],t=1;n.forEach(r=>t*=r);for(let r=0;r<t;r++)e.push(1);return Ih(e,n)}zi.exports=Uh});var Bi=a((Pd,$i)=>{var ki=p(),Vh=f(),ut=h(),Yh=m();function en(n,e){if(ut(ki(n),"The `permute` function only works on arrays!"),Yh(e)&&(e=n.length),ut(Vh(e),"`r` must be a whole number!"),e>n.length)return en(n);if(e<=0)return[[]];if(ut(e===parseInt(e),"`r` must be a whole number!"),n.length<2)return n;let t=[];return n.forEach((r,s)=>{ut(!ki(r),"It is not recommended to permute arrays of arrays. Weird things happen, and I haven't figured out how to account for such a scenario yet. A possible workaround is: convert each sub-array to a string (using `JSON.stringify`), get the permutations using the array of strings, and then convert each string in each combination back to a sub-array (using `JSON.parse`).");let o=n.slice(0,s),i=n.slice(s+1),u=o.concat(i);en(u,e-1).forEach(c=>{t.push([r].concat(c))})}),t}$i.exports=en});var Wi=a((kd,Fi)=>{var Ch=p(),_h=w(),Ji=Je(),Ri=F();function zh(){Object.keys(arguments).forEach(n=>{let e=arguments[n];if(Ch(e)){let t=_h(e);t.length===1?new Ri(e).print():t.length==2?new Ji(e).print():console.log(e)}else e instanceof Ji||e instanceof Ri?e.print():console.log(e)})}Fi.exports=zh});var Ki=a(($d,Li)=>{var Ph=f(),kh=b();function $h(n){try{return Ph(n)?Math.round(n):NaN}catch{return NaN}}Li.exports=kh($h)});var tn=a((Bd,Gi)=>{var Qi=h(),Bh=f(),Xi=p(),Jh=R();function Rh(n,e,t){Qi(Xi(n),"The first argument passed into the `setValueAt` function must be an array!"),Bh(e)&&(e=[e]),Qi(Xi(e),"The second argument passed into the `setValueAt` function must be an integer or an array of integers!");let r=Jh(n),s=r;for(let o=0;o<e.length-1;o++)s=s[e[o]];return s[e[e.length-1]]=t,r}Gi.exports=Rh});var Hi=a((Jd,Zi)=>{var Fh=f(),Wh=b();function Lh(n){try{return Fh(n)?n<0?-1:n>0?1:0:NaN}catch{return NaN}}Zi.exports=Wh(Lh)});var eu=a((Rd,Di)=>{var Kh=f(),Qh=b();function Xh(n){try{return Kh(n)?Math.sin(n):NaN}catch{return NaN}}Di.exports=Qh(Xh)});var nu=a((Fd,tu)=>{var Gh=Pe();function Zh(n){return Gh(n)}tu.exports=Zh});var su=a((Wd,ru)=>{var Hh=f(),Dh=b();function em(n){try{return Hh(n)?Math.tan(n):NaN}catch{return NaN}}ru.exports=Dh(em)});var at=a((Ld,iu)=>{var ou=U();function tm(n,e){assert(ou(n),"`fn` must be a function!");let t=new Date;return e?n(...e):n(),new Date-t}async function nm(n,e){assert(ou(n),"`fn` must be a function!");let t=new Date;return e?await n(...e):await n(),new Date-t}iu.exports={timeSync:tm,timeAsync:nm}});var cu=a((Kd,au)=>{var uu=h(),rm=p(),sm=U(),om=z(),im=ge(),um=tn(),am=x();function cm(n,e){uu(rm(n),"The first argument passed into the `where` function must be an array!"),uu(sm(e),"The second argument passed into the `where` function must be a function!");let t=am(n).length,r=om(n,e),s=[],o=0,i=!1;for(;!i;){let u=im(r,!0);u?(s[o]=u,r=um(r,u,null),o++):i=!0}return o===0?null:s}au.exports=cm});var lm=a((Qd,nn)=>{var Ue={abs:pt(),add:he(),append:qt(),apply:z(),arccos:Cn(),arcsin:zn(),arctan:kn(),argmax:Qn(),argmin:Zn(),assert:h(),ceil:Dn(),chop:nr(),clamp:sr(),cohensd:lr(),combine:pr(),copy:R(),correl:vr(),cos:Sr(),count:ke(),covariance:xt(),DataFrame:Je(),diff:yo(),distance:Oo(),divide:Eo(),dot:Bt(),dropMissing:zo(),dropMissingPairwise:Ro(),dropNaN:be(),dropNaNPairwise:Go(),exp:Ho(),factorial:ti(),flatten:x(),float:ri(),floor:Ke(),getValueAt:ui(),identity:li(),indexOf:ge(),int:Jt(),intersect:mi(),inverse:Ni(),isArray:p(),isBoolean:ee(),isEqual:J(),isFunction:U(),isNumber:f(),isObject:we(),isString:E(),isUndefined:m(),lerp:wi(),log:Si(),map:Ai(),MathError:se(),max:C(),mean:qe(),median:Mi(),min:Ye(),mode:Ui(),multiply:kt(),ndarray:_(),normal:_i(),ones:Pi(),permute:Bi(),pow:tt(),print:Wi(),random:D().random,range:V(),reshape:oe(),reverse:me(),round:Ki(),scale:le(),seed:D().seed,Series:F(),set:H(),setValueAt:tn(),shape:w(),shuffle:It(),sign:Hi(),sin:eu(),slice:Xt(),sort:te(),sqrt:ze(),std:Pe(),stdev:nu(),subtract:$t(),sum:nt(),tan:su(),time:at().timeSync,timeSync:at().timeSync,timeAsync:at().timeAsync,transpose:B(),union:Kt(),variance:Ce(),vectorize:b(),where:cu(),zeros:Lt(),dump:function(){Object.keys(Ue).forEach(n=>{typeof global<"u"&&(global[n]=Ue[n]),typeof window<"u"&&(window[n]=Ue[n])})}};typeof nn<"u"&&(nn.exports=Ue);typeof window<"u"&&(window.JSMathTools=Ue)});lm();})();
